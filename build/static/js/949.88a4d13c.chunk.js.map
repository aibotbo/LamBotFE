{"version":3,"file":"static/js/949.88a4d13c.chunk.js","mappings":"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","sources":["components/TextInput/index.tsx","components/CustomSnackbar/index.tsx","hooks/useEnqueueSnackbar.tsx","pages/Register/index.tsx","../node_modules/@mui/icons-material/esm/CloseOutlined.js"],"sourcesContent":["import { Cancel } from '@mui/icons-material';\nimport { TextField } from '@mui/material';\nimport React, { FC, useRef, useState } from 'react';\nimport { boolean } from 'yup';\nimport { isDisabled } from '@testing-library/user-event/dist/utils';\nimport CurrencyInput, { CurrencyInputProps } from 'react-currency-input-field';\nimport { CurrencyInputOnChangeValues } from 'react-currency-input-field/dist/components/CurrencyInputProps';\n\ninterface TextInputProps {\n  id?: string;\n  name: string;\n  label?: React.ReactNode;\n  isLabelOutside?: boolean;\n  type: React.InputHTMLAttributes<unknown>['type'];\n  placeholder?: string;\n  prefix?: string;\n  value: string | number | readonly string[] | undefined;\n  error?: boolean;\n  isInputDisabled?: boolean;\n  helperText?: React.ReactNode;\n  helperTextEnd?: React.ReactNode;\n  decimalsLimit?: number;\n  decimalScale?: number;\n  fixedDecimalLength?: number;\n  fullWidth?: boolean;\n  searchIcon?: string;\n  symbol?: string;\n  autoComplete?: boolean;\n  icon?: string | undefined;\n  button?: React.ReactNode;\n  searchIconClassName?: string;\n  containerClassName?: string;\n  inputClassName?: string;\n  symbolClassName?: string;\n  helperClassName?: string;\n  helperTextClassName?: string;\n  helperTextEndClassName?: string;\n  resetValue?: () => void;\n  onChange?: React.ChangeEventHandler<HTMLTextAreaElement | HTMLInputElement>;\n  onValueChange?:\n  | ((\n    value: string | undefined,\n    name?: string | undefined,\n    values?: CurrencyInputOnChangeValues | undefined\n  ) => void)\n  | undefined;\n  onBlur?: React.FocusEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n  onFocus?: React.FocusEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n  onKeyDown?: React.KeyboardEventHandler<\n    HTMLTextAreaElement | HTMLInputElement\n  >;\n  onKeyUp?: React.KeyboardEventHandler<HTMLTextAreaElement | HTMLInputElement>;\n  onMouseOver?: React.MouseEventHandler<HTMLTextAreaElement | HTMLInputElement>;\n  onMouseLeave?: React.MouseEventHandler<\n    HTMLTextAreaElement | HTMLInputElement\n  >;\n}\n\nconst TextInput: FC<TextInputProps> = ({\n  id,\n  name,\n  label,\n  isLabelOutside = false,\n  placeholder,\n  prefix,\n  type = 'text',\n  value,\n  error,\n  helperText,\n  helperTextEnd,\n  decimalsLimit = 3,\n  decimalScale,\n  fixedDecimalLength,\n  fullWidth,\n  searchIcon,\n  symbol,\n  icon,\n  autoComplete,\n  button,\n  isInputDisabled,\n  searchIconClassName = '',\n  containerClassName = '',\n  inputClassName = '',\n  symbolClassName = '',\n  helperClassName = '',\n  helperTextClassName = '',\n  helperTextEndClassName = '',\n  resetValue,\n  onChange,\n  onValueChange,\n  onBlur,\n  onFocus,\n  onKeyDown,\n  onKeyUp,\n  onMouseOver,\n  onMouseLeave,\n}) => {\n  const [isInputFocus, setInputFocus] = useState(false);\n  const [isInputHover, setIsInputHover] = useState(false);\n  const [isPasswordShowing, setIsPasswordShowing] = useState(false);\n  const inputRef = useRef<HTMLInputElement | null>(null);\n  // const [isClickingInside, setIsClickingInside] = useState(false);\n\n  const passwordType = isPasswordShowing ? 'text' : 'password';\n  const handlePasswordShown = () => {\n    inputRef.current?.focus();\n    setIsPasswordShowing((prev) => !prev);\n  };\n\n  const inputSpacingWithLabel =\n    label && !isLabelOutside ? 'pt-[1.625rem] pb-[0.375rem]' : 'py-4';\n\n  return (\n    <div\n      className={`relative ${fullWidth ? 'w-full' : ''} ${containerClassName}`}\n    >\n      {!!label && isLabelOutside && (\n        <div className={`mb-2 cubic-bezier ssss`}>\n          <label\n            className={`overflow-hidden text-ellipsis whitespace-nowrap small-caps`}\n            onClick={() => {\n              inputRef.current?.focus();\n            }}\n          >\n            {label}\n          </label>\n        </div>\n      )}\n      {!!label && !isLabelOutside && (\n        <label\n          className={`cubic-bezier absolute left-0 top-0  ${icon || button ? 'w-[85%]' : 'w-[70%]'\n            } overflow-hidden text-ellipsis whitespace-nowrap ${!isInputFocus && !value\n              ? 'pl-3 pr-3 py-4 text-base text-ink-40'\n              : 'pl-3 pr-3 py-[0.375rem] text-xs text-ink-60'\n            }`}\n          onClick={() => {\n            inputRef.current?.focus();\n          }}\n        >\n          {label}\n        </label>\n      )}\n      {!!searchIcon && (\n        <div className=\"absolute left-3 top-[50%] translate-y-[-50%]\">\n          <img className={`w-[1.5rem] ${searchIconClassName}`} src={searchIcon} alt=\"BotLambotrade\" />\n        </div>\n      )}\n\n      <div\n        className={`${!searchIcon ? 'pl-3 pr-3' : 'pl-10 pr-3'\n          } flex justify-between items-center gap-x-3 rounded-xl ${isInputDisabled\n            ? 'border-input-ink bg-ink-10'\n            : error\n              ? 'border-input-red'\n              : isInputFocus || isInputHover\n                ? 'border-primary'\n                : 'border-input-ink'\n          }`}\n      >\n        <div className=\"relative z-10 flex-grow flex justify-between items-center\">\n          {type === 'number' && (\n            <CurrencyInput\n              id={id}\n              name={name}\n              autoComplete={autoComplete === true ? 'new-password' : ''}\n              className={`${inputSpacingWithLabel} w-full overflow-hidden text-ellipsis whitespace-nowrap bg-transparent caret-yellow-500 focus:outline-none ${!isInputFocus && !value && label && !isLabelOutside\n                  ? 'placeholder-transparent'\n                  : 'placeholder-ink-20'\n                } ${inputClassName}`}\n              value={value}\n              placeholder={placeholder}\n              onChange={onChange}\n              onValueChange={(value, _, values) => {\n                if (onValueChange) {\n                  onValueChange(value, _, values);\n                }\n              }}\n              onBlur={(e) => {\n                if (onBlur) {\n                  onBlur(e);\n                }\n                setInputFocus(false);\n              }}\n              onFocus={(e) => {\n                if (onFocus) {\n                  onFocus(e);\n                }\n                setInputFocus(true);\n              }}\n              onKeyDown={onKeyDown}\n              onKeyUp={onKeyUp}\n              onMouseOver={(e) => {\n                if (onMouseOver) {\n                  onMouseOver(e);\n                }\n                setIsInputHover(true);\n              }}\n              onMouseLeave={(e) => {\n                if (onMouseLeave) {\n                  onMouseLeave(e);\n                }\n                setIsInputHover(false);\n              }}\n              prefix={prefix}\n              disabled={isInputDisabled}\n              allowNegativeValue={false}\n              decimalsLimit={decimalsLimit}\n              decimalScale={decimalScale}\n              fixedDecimalLength={fixedDecimalLength}\n              disableAbbreviations={true}\n              decimalSeparator=\".\"\n              groupSeparator=\",\"\n              maxLength={13}\n              // intlConfig={{ locale: 'en-US', currency: 'USD' }}\n              ref={inputRef}\n            />\n          )}\n          {type !== 'number' && (\n            <input\n              id={id}\n              name={name}\n              autoComplete={autoComplete === true ? 'new-password' : ''}\n              className={`${inputSpacingWithLabel} w-full overflow-hidden text-ellipsis whitespace-nowrap bg-transparent caret-input focus:outline-none ${!isInputFocus && !value && label && !isLabelOutside\n                  ? 'placeholder-transparent'\n                  : 'placeholder-ink-20'\n                } ${inputClassName}`}\n              type={type === 'password' ? passwordType : type}\n              value={value}\n              placeholder={placeholder}\n              onChange={onChange}\n              onBlur={(e) => {\n                if (onBlur) {\n                  onBlur(e);\n                }\n                setInputFocus(false);\n              }}\n              onFocus={(e) => {\n                if (onFocus) {\n                  onFocus(e);\n                }\n                setInputFocus(true);\n              }}\n              onKeyDown={onKeyDown}\n              onKeyUp={onKeyUp}\n              onMouseOver={(e) => {\n                if (onMouseOver) {\n                  onMouseOver(e);\n                }\n                setIsInputHover(true);\n              }}\n              onMouseLeave={(e) => {\n                if (onMouseLeave) {\n                  onMouseLeave(e);\n                }\n                setIsInputHover(false);\n              }}\n              disabled={isInputDisabled}\n              ref={inputRef}\n            />\n          )}\n\n          {symbol && (\n            <span className={`${inputSpacingWithLabel} ${symbolClassName}`}>\n              {symbol}\n            </span>\n          )}\n        </div>\n\n        {((!!value && resetValue) || !!icon || !!button) && (\n          <div className=\"z-10 flex justify-end items-center gap-x-[1.25rem]\">\n            {!!value && resetValue && (\n              <div\n                className={`${button || icon ? 'input-icon-seperator' : ''} ${isInputFocus || isInputHover ? 'opacity-100' : 'opacity-50'\n                  }`}\n                onClick={(e) => {\n                  if (resetValue) {\n                    resetValue();\n                    inputRef.current?.focus();\n                  }\n                }}\n              >\n                <Cancel className=\"w-[1.5rem] !fill-ink-60 cursor-pointer\" />\n              </div>\n            )}\n            {!!icon && (\n              <div className={`${button ? 'input-icon-seperator' : ''}`}>\n                <img\n                  className={`w-[1.5rem] cursor-pointer`}\n                  src={icon}\n                  alt=\"BotLambotrade\"\n                  onClick={handlePasswordShown}\n                />\n              </div>\n            )}\n            {!!button && <div className=\"py-[0.375rem]\">{button}</div>}\n          </div>\n        )}\n      </div>\n      {(!!helperText || !!helperTextEnd) && (\n        <div className={`px-3 pt-2 flex justify-between ${helperClassName}`}>\n          <p\n            className={`${isInputDisabled\n                ? 'text-ink-80'\n                : error\n                  ? 'text-red-100'\n                  : 'text-ink-80'\n              } text-sm ${helperTextClassName}`}\n          >\n            {helperText}\n          </p>\n          <p className={`text-ink-100 text-sm ${helperTextEndClassName}`}>\n            {helperTextEnd}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TextInput;\n","import React, { FC } from 'react';\nimport { SnackbarContent, SnackbarKey, SnackbarMessage } from 'notistack';\nimport images from 'assets';\nimport { Cancel } from '@mui/icons-material';\n\nconst ICONS = {\n  success: images.toast.check,\n  warning: images.toast.warning,\n  error: images.toast.error,\n};\n\nconst TEXT_COLORS = {\n  success: 'text-green-100',\n  warning: 'text-yellow-100',\n  error: 'text-red-100',\n};\n\nconst TITLES = {\n  success: 'Thành công',\n  warning: 'Cảnh báo',\n  error: 'Thất bại',\n};\n\ninterface CustomSnackbarProps {\n  id: SnackbarKey;\n  message: SnackbarMessage;\n  variant?: 'success' | 'error' | 'warning';\n  closeSnackBar: () => void;\n}\n\nconst CustomSnackbar = React.forwardRef<HTMLDivElement, CustomSnackbarProps>(\n  ({ id, message, variant, closeSnackBar }, ref) => {\n    return (\n      <>\n        <div\n          className={`flex items-center justify-between gap-x-3 p-4 rounded-3xl w-[full] md:w-[25rem] transition-all bg-dropdown toast-in-right`}\n          key={id}\n          ref={ref}\n        >\n          <div className=\"flex items-center justify-between gap-x-3\">\n            <div className=\"flex-shrink-0 p-[0.625rem] rounded-2xl bg-ink-05\">\n              <img\n                className=\"w-8\"\n                src={variant && ICONS[variant]}\n                alt=\"BotLambotrade\"\n              />\n            </div>\n            <div>\n              <p\n                className={`mb-1 font-bold ${variant && TEXT_COLORS[variant]}`}\n              >\n                {variant && TITLES[variant]}\n              </p>\n              <p className=\"text-ink-80 text-sm\">{message}</p>\n            </div>\n          </div>\n          <button onClick={closeSnackBar}>\n            <Cancel className=\"fill-ink-100\" />\n          </button>\n        </div>\n      </>\n    );\n  }\n);\n\nexport default CustomSnackbar;\n","import CustomSnackbar from 'components/CustomSnackbar';\nimport { OptionsObject, useSnackbar } from 'notistack';\nimport { useCallback } from 'react';\n\nexport const useEnqueueSnackbar = () => {\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  const pushSnackbar = useCallback(\n    (\n      message: string,\n      // extend the default options object\n      options?: OptionsObject &\n        Partial<{ variant: 'success' | 'error' | 'warning' }>\n    ) => {\n      enqueueSnackbar(message, {\n        ...options,\n        content: (key) => {\n          // destructure the options we need from the extended options\n          // object, and provide a default case if we didn't provide any\n          const { variant } = options || { variant: undefined };\n          const handleCloseSnackbar = () => {\n            closeSnackbar(key);\n          };\n          return (\n            <CustomSnackbar\n              id={`${key}`}\n              message={message}\n              variant={variant || 'success'}\n              closeSnackBar={handleCloseSnackbar}\n            />\n          );\n        },\n      });\n    },\n    [closeSnackbar, enqueueSnackbar]\n  );\n\n  return pushSnackbar;\n};\n","import React, { useEffect, useState } from 'react';\nimport images from 'assets';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { IUserRegistration, registerUser, userActions } from 'stores/userSlice';\nimport { useAppDispatch, useAppSelector } from 'stores/hooks';\nimport { uiActions } from 'stores/uiSlice';\nimport Toast from 'components/Toast';\nimport { Helmet } from 'react-helmet-async';\nimport { useEnqueueSnackbar } from 'hooks/useEnqueueSnackbar';\nimport TextInput from 'components/TextInput';\nimport { useMediaQuery } from 'react-responsive';\nimport CustomModal from 'components/CustomModal';\nimport { CloseOutlined } from '@mui/icons-material';\nimport CustomButton from 'components/CustomButton';\n\nconst Register = () => {\n  const [isPasswordShown, setIsPasswordShown] = useState(false);\n  const [isEmailFocus, setIsEmailFocus] = useState(false);\n  const [isUsernameFocus, setIsUsernameFocus] = useState(false);\n  const [isPasswordFocus, setIsPasswordFocus] = useState(false);\n  const isMobile = useMediaQuery({\n    query: '(max-width: 767px)',\n  });\n\n  const isTablet = useMediaQuery({\n    query: '(max-width: 1024px)',\n  });\n\n  const isLoggedIn = useAppSelector((state) => state.user.isLoggedIn);\n  const [isInitialized, setIsInitialized] = useState(false);\n\n  // MODAL\n  const [isEmailConfirmModalOpen, setIsUpsertZoomTableOpen] = useState(false);\n\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  const enqueueSnackbar = useEnqueueSnackbar();\n\n  // FUNCTIONS FOR MODAL\n  const handleOpenEmailConfirmModal = () => {\n    setIsUpsertZoomTableOpen(true);\n  };\n\n  const handleCloseEmailConfirmModal = () => {\n    setIsUpsertZoomTableOpen(false);\n  };\n\n  const handleRegisterUser = async (userData: IUserRegistration) => {\n    const resultAction = await dispatch(registerUser(userData));\n    if (registerUser.fulfilled.match(resultAction)) {\n       const user = resultAction.payload;\n       console.log('USER:', user);\n       enqueueSnackbar(`Tạo tài khoản thành công!`, {\n         variant: 'success',\n       });\n       enqueueSnackbar(`${resultAction.payload.detail}`, {\n        variant: 'success',\n       });\n       navigate('/login');\n      //handleOpenEmailConfirmModal();\n    } else {\n      if (typeof resultAction.payload !== 'string') {\n        const usernameErrors = resultAction.payload?.username;\n        const emailErrors = resultAction.payload?.email;\n        const password1Errors = resultAction.payload?.password1;\n        const non_field_errors = resultAction.payload?.non_field_errors;\n        const errorMessage = usernameErrors\n          ? usernameErrors[0]\n          : emailErrors\n          ? emailErrors[0]\n          : password1Errors\n          ? password1Errors[0]\n          : non_field_errors\n          ? non_field_errors[0]\n          : 'Đăng ký tài khoản thất bại';\n        // const notification = {\n        //   id: Math.floor(Math.random() * 101 + 1),\n        //   title: 'Thất bại',\n        //   description: `${errorMessage}`,\n        //   backgroundColor: 'text-red-100',\n        //   icon: images.toast.error,\n        // };\n        // dispatch(uiActions.showNotifications(notification));\n        enqueueSnackbar(errorMessage, {\n          variant: 'error',\n        });\n      } else {\n        // const notification = {\n        //   id: Math.floor(Math.random() * 101 + 1),\n        //   title: 'Thất bại',\n        //   description: `${resultAction.payload}`,\n        //   backgroundColor: 'text-red-100',\n        //   icon: images.toast.error,\n        // };\n        // dispatch(uiActions.showNotifications(notification));\n        enqueueSnackbar(`${resultAction.payload}`, {\n          variant: 'error',\n        });\n      }\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      username: '',\n      password: '',\n    },\n    validationSchema: Yup.object({\n      email: Yup.string()\n        .email('Email không đúng, vui lòng nhập lại')\n        .max(50, 'Email không thể vượt quá 50 ký tự')\n        .required('Vui lòng nhập email'),\n      username: Yup.string()\n        .required('Vui lòng nhập user name bot')\n        .matches(\n          /^[a-zA-Z][_-a-zA-Z0-9]{5,19}$/gi,\n          'User name bot phải từ 6 đến 20 ký tự, bắt đầu bằng chữ và không chứa ký tự đặc biệt'\n        ),\n      password: Yup.string()\n        .required('Vui lòng nhập mật khẩu')\n        .min(6, 'Mật khẩu của bạn phải dài ít nhất 6 ký tự')\n        .max(20, 'Mật khẩu của bạn không được quá 20 ký tự'),\n    }),\n    onSubmit: async (values, helpers) => {\n      try {\n        const userRegistration = {\n          email: values.email,\n          username: values.username,\n          password1: values.password,\n          password2: values.password,\n        };\n        await handleRegisterUser(userRegistration);\n      } catch (err) {\n        console.log('register.tsx 66', err);\n      }\n    },\n  });\n\n  const handlePasswordShown = () => {\n    setIsPasswordShown((prev) => !prev);\n  };\n\n  useEffect(() => {\n    if (isLoggedIn && isInitialized) navigate('/');\n    setIsInitialized(true);\n  }, [isLoggedIn, navigate, isInitialized]);\n\n  return (\n    <>\n      <Helmet>\n        <title>BotLambotrade | Register</title>\n      </Helmet>\n      <div className=\"relative min-h-[100vh] w-full bg-login-mobile-background xl:bg-login-background bg-cover bg-no-repeat\">\n        {/* <img\n          className={`absolute left-0 top-0 xl:object-cover w-full h-full`}\n          // src={images.login.background_tet}\n          srcSet={`${\n            isMobile || isTablet\n              ? images.login.mobile_background\n              : images.login.background\n          } 4x`}\n          alt=\"BotLambotrade\"\n        /> */}\n\n        <div\n          className={`absolute xl:top-[19%] 2xl:top-[23%] xl:left-[17.2%] left-[50%] translate-x-[-50%] bottom-[1rem] xl:bottom-[unset] p-6 xl:p-0 xl:translate-x-0 w-[calc(100%-2rem)] md:w-[calc(100%-10rem)] xl:w-[28.875rem] bg-background-80 xl:bg-transparent rounded-3xl`}\n        >\n          <h1 className=\"mb-8 bg-primary-100 bg-clip-text text-transparent text-3.5xl font-semibold\">\n            Đăng ký tài khoản\n          </h1>\n\n          {/* EMAIL */}\n          <TextInput\n            id=\"email\"\n            name=\"email\"\n            label=\"email\"\n            type=\"email\"\n            fullWidth\n            isLabelOutside\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.email && Boolean(formik.errors.email)}\n            helperText={formik.touched.email && formik.errors.email}\n            helperTextEnd={`${formik.values.email.length}/50`}\n            containerClassName=\"mb-4\"\n          />\n\n          {/* USERNAME */}\n          <TextInput\n            id=\"username\"\n            name=\"username\"\n            label=\"user name bot\"\n            type=\"username\"\n            fullWidth\n            isLabelOutside\n            value={formik.values.username}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.username && Boolean(formik.errors.username)}\n            helperText={formik.touched.username && formik.errors.username}\n            helperTextEnd={`${formik.values.username.length}/20`}\n            containerClassName=\"mb-4\"\n          />\n\n          {/* PASSWORD */}\n          <TextInput\n            id=\"password\"\n            name=\"password\"\n            type=\"password\"\n            label=\"mật khẩu\"\n            fullWidth\n            isLabelOutside\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.password && Boolean(formik.errors.password)}\n            helperText={formik.touched.password && formik.errors.password}\n            helperTextEnd={`${formik.values.password.length}/20`}\n            icon={images.input.eye}\n            containerClassName=\"mb-4\"\n          />\n\n          <button\n            className=\"mb-8 p-4 bg-primary-100 w-full rounded-2xl text-center\"\n            onClick={() => {\n              formik.handleSubmit();\n            }}\n          >\n            <p className=\"bg-background-100 bg-clip-text text-transparent font-semibold\">\n              Đăng ký\n            </p>\n          </button>\n\n          <div className=\"text-center\">\n            <p>\n              Đã có tài khoản{' '}\n              <Link\n                className=\"bg-primary-100 bg-clip-text text-transparent\"\n                to=\"/login\"\n              >\n                Đăng nhập\n              </Link>{' '}\n              tại đây\n            </p>\n          </div>\n        </div>\n      </div>\n      {/* <Toast /> */}\n\n      {/* WAIT EMAIL CONFIRM Popup Modal */}\n      <CustomModal\n        isOpen={isEmailConfirmModalOpen}\n        handleOpen={handleOpenEmailConfirmModal}\n        handleClose={handleCloseEmailConfirmModal}\n      >\n        <div className=\"absolute left-[50%] top-[50%] translate-x-[-50%] translate-y-[-50%] w-[calc(100vw-2rem)] md:w-[31.25rem] bg-background-80 rounded-3xl\">\n          <div className=\"p-6 border-b border-ink-10 flex justify-between items-center\">\n            <h3 className=\"text-xl text-ink-100 font-semibold\">\n              Xác thực Email\n            </h3>\n            <CloseOutlined\n              className=\"cursor-pointer\"\n              onClick={handleCloseEmailConfirmModal}\n            />\n          </div>\n          <div className=\"p-6\">\n            <div className=\"flex flex-col gap-2\">\n              <p className=\"text-ink-80\">Một liên kết được gửi tới Email:</p>\n              <div>\n                <Link\n                  to=\"#\"\n                  onClick={(e) => {\n                    window.location.href = 'mailto:' + formik.values.email;\n                    e.preventDefault();\n                  }}\n                  className=\"underline-primary bg-primary-100 bg-clip-text text-transparent\"\n                >\n                  {formik.values.email}\n                </Link>\n              </div>\n              <p className=\"text-ink-80\">\n                Vui lòng vào Email xác thực để hoàn thành đăng ký\n              </p>\n            </div>\n\n            {/* <CustomButton\n              className=\"w-full py-4\"\n              background=\"bg-primary-05\"\n              textColor=\"bg-primary-100\"\n              textClassName=\"font-bold\"\n              iconClassName=\"animate-spin\"\n              icon={images.login.spinning}\n            >\n              Chờ xác thực\n            </CustomButton> */}\n          </div>\n        </div>\n      </CustomModal>\n    </>\n  );\n};\n\nexport default Register;\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z\"\n}), 'CloseOutlined');"],"names":["_ref","id","name","label","isLabelOutside","placeholder","prefix","type","value","error","helperText","helperTextEnd","decimalsLimit","decimalScale","fixedDecimalLength","fullWidth","searchIcon","symbol","icon","autoComplete","button","isInputDisabled","searchIconClassName","containerClassName","inputClassName","symbolClassName","helperClassName","helperTextClassName","helperTextEndClassName","resetValue","onChange","onValueChange","onBlur","onFocus","onKeyDown","onKeyUp","onMouseOver","onMouseLeave","isInputFocus","setInputFocus","useState","isInputHover","setIsInputHover","isPasswordShowing","setIsPasswordShowing","inputRef","useRef","passwordType","inputSpacingWithLabel","_jsxs","className","concat","children","_jsx","onClick","_inputRef$current2","current","focus","_inputRef$current3","src","alt","CurrencyInput","_","values","e","disabled","allowNegativeValue","disableAbbreviations","decimalSeparator","groupSeparator","maxLength","ref","_inputRef$current4","Cancel","handlePasswordShown","_inputRef$current","prev","ICONS","success","images","warning","TEXT_COLORS","TITLES","React","message","variant","closeSnackBar","_Fragment","useEnqueueSnackbar","enqueueSnackbar","closeSnackbar","useSnackbar","useCallback","options","content","key","undefined","CustomSnackbar","handleCloseSnackbar","Register","isPasswordShown","setIsPasswordShown","isEmailFocus","setIsEmailFocus","isUsernameFocus","setIsUsernameFocus","isPasswordFocus","setIsPasswordFocus","isLoggedIn","useMediaQuery","query","useAppSelector","state","user","isInitialized","setIsInitialized","isEmailConfirmModalOpen","setIsUpsertZoomTableOpen","navigate","useNavigate","dispatch","useAppDispatch","handleCloseEmailConfirmModal","formik","useFormik","initialValues","email","username","password","validationSchema","Yup","max","required","matches","min","onSubmit","async","helpers","userRegistration","password1","password2","resultAction","registerUser","userData","payload","console","log","detail","_resultAction$payload","_resultAction$payload2","_resultAction$payload3","_resultAction$payload4","usernameErrors","emailErrors","password1Errors","non_field_errors","errorMessage","handleRegisterUser","err","useEffect","Helmet","TextInput","handleChange","handleBlur","touched","Boolean","errors","length","handleSubmit","Link","to","CustomModal","isOpen","handleOpen","handleOpenEmailConfirmModal","handleClose","CloseOutlined","window","location","href","preventDefault","createSvgIcon","d"],"sourceRoot":""}