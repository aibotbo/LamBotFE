{"version":3,"file":"static/js/530.6baf84da.chunk.js","mappings":"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","sources":["components/SearchInput/index.tsx","components/SelectInput/index.tsx","components/TextInput/index.tsx","components/CustomSnackbar/index.tsx","hooks/useEnqueueSnackbar.tsx","pages/CopyTradeHistory/CopyTradeHistoryType.tsx","pages/CopyTradeHistory/CopyTradeResultCanvas.tsx","pages/CopyTradeHistory/CopyTradeHistoryManualSelf.tsx","pages/CopyTradeHistory/CopyTradeHistoryManualMaster.tsx","pages/CopyTradeHistory/CopyTradeHistorySelf.tsx","pages/CopyTradeHistory/index.tsx"],"sourcesContent":["import React, { FC } from 'react';\n\ntype SearchInputProps = {\n  inputClassName?: string;\n  inputName: string;\n  searchInput: string;\n  setSearchInput: React.Dispatch<React.SetStateAction<string>>;\n};\n\nconst SearchInput: FC<SearchInputProps> = ({\n  inputClassName,\n  inputName,\n  searchInput,\n  setSearchInput,\n}) => {\n  return (\n    <div>\n      <label\n        htmlFor=\"default-search\"\n        className=\"mb-2 text-sm font-medium sr-only text-ink-100\"\n      >\n        Search\n      </label>\n      <div className=\"relative\">\n        <div className=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n          <svg\n            aria-hidden=\"true\"\n            className=\"w-5 h-5 text-black-opacity-100\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n            ></path>\n          </svg>\n        </div>\n        <input\n          type=\"search\"\n          id={inputName}\n          name={inputName}\n          className={`${inputClassName} block py-3 pl-9 pr-8 text-sm text-black-opacity-40 border border-ink-20 rounded-xl bg-ink-05 focus:ring-blue-500 focus:border-blue-500 placeholder-black-opacity-40 dark:focus:ring-blue-500 dark:focus:border-blue-500`}\n          placeholder=\"Tìm kiếm\"\n          value={searchInput}\n          onChange={(e) => {\n            setSearchInput(e.target.value);\n          }}\n          required\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default SearchInput;\n","import { Cancel } from '@mui/icons-material';\nimport { TextField } from '@mui/material';\nimport React, { FC, forwardRef, useRef, useState } from 'react';\nimport { boolean } from 'yup';\nimport { isDisabled } from '@testing-library/user-event/dist/utils';\nimport CurrencyInput, { CurrencyInputProps } from 'react-currency-input-field';\nimport { CurrencyInputOnChangeValues } from 'react-currency-input-field/dist/components/CurrencyInputProps';\nimport Select, {\n  components,\n  ActionMeta,\n  GroupBase,\n  OptionsOrGroups,\n  SingleValue,\n  StylesConfig,\n  ContainerProps,\n  InputProps,\n  Props,\n  IndicatorSeparatorProps,\n  IndicatorsContainerProps,\n  MenuListProps,\n  OptionProps,\n  SingleValueProps,\n} from 'react-select';\nimport Control, {\n  ControlProps,\n} from 'react-select/dist/declarations/src/components/Control';\nimport images from 'assets';\nimport TextInput from 'components/TextInput';\nimport InputSelectOption from 'types/InputSelectOption';\n\ninterface SelectInputProps {\n  id?: string;\n  name: string;\n  label?: React.ReactNode;\n  isLabelOutside?: boolean;\n  placeholder?: string;\n  value: InputSelectOption | null;\n  options:\n    | OptionsOrGroups<InputSelectOption, GroupBase<InputSelectOption>>\n    | undefined;\n  defaultValue?: InputSelectOption;\n  isSelectDisabled?: boolean;\n  error?: boolean;\n  helperText?: React.ReactNode;\n  helperTextEnd?: React.ReactNode;\n  fullWidth?: boolean;\n  searchIcon?: string;\n  symbol?: string;\n  icon?: string | undefined;\n  button?: React.ReactNode;\n  containerClassName?: string;\n  selectContainerClassName?: string;\n  inputClassName?: string;\n  indicatorContainerClassName?: string;\n  indicatorContainerIconClassName?: string;\n  symbolClassName?: string;\n  helperClassName?: string;\n  helperTextClassName?: string;\n  helperTextEndClassName?: string;\n  menuPortalClassName?: string;\n  resetValue?: () => void;\n  onChange?:\n    | ((\n        newValue: SingleValue<InputSelectOption>,\n        actionMeta: ActionMeta<InputSelectOption>\n      ) => void)\n    | undefined;\n  onBlur?: React.FocusEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n  onFocus?: React.FocusEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n  onKeyDown?: React.KeyboardEventHandler<\n    HTMLTextAreaElement | HTMLInputElement\n  >;\n  onKeyUp?: React.KeyboardEventHandler<HTMLTextAreaElement | HTMLInputElement>;\n  onMouseOver?: React.MouseEventHandler<HTMLTextAreaElement | HTMLInputElement>;\n  onMouseLeave?: React.MouseEventHandler<\n    HTMLTextAreaElement | HTMLInputElement\n  >;\n  // REF\n  menuRef?: React.RefObject<HTMLDivElement>;\n}\n\nconst selectStyles: StylesConfig<InputSelectOption> = {\n  control: (styles) => ({\n    ...styles,\n  }),\n};\n\nexport interface ColourOption {\n  readonly value: string;\n  readonly label: string;\n}\n\nexport const IndicatorsContainer = (\n  props: IndicatorsContainerProps<InputSelectOption, false>\n) => {\n  // @ts-ignore\n  const { indicatorContainerClassName, indicatorContainerIconClassName } =\n    props.selectProps;\n  return (\n    <components.IndicatorsContainer\n      className={`absolute right-3 top-[50%] translate-y-[-50%] ${indicatorContainerClassName}`}\n      {...props}\n    >\n      <img\n        className={`w-[1.5rem] ${indicatorContainerIconClassName}`}\n        src={images.input.dropdown}\n        alt=\"Legend Ground\"\n      />\n    </components.IndicatorsContainer>\n  );\n};\n\nconst IndicatorSeparator = ({\n  innerProps,\n}: IndicatorSeparatorProps<InputSelectOption, false>) => {\n  // return <span style={indicatorSeparatorStyle} {...innerProps} />;\n  return <></>;\n};\n\nconst MenuList = (props: MenuListProps<InputSelectOption, false>) => {\n  // @ts-ignore\n  // prettier-ignore\n  const { searchInputIcon, searchInput, searchInputName, searchInputPlaceHolder, \n    // @ts-ignore\n    searchInputSymbol, searchInputResetValue, searchInputError, searchInputHelperText } = props.selectProps;\n\n  return (\n    <components.MenuList {...props}>\n      {searchInput && (\n        <TextInput\n          searchIcon={searchInputIcon}\n          name={searchInputName}\n          value={searchInput}\n          placeholder={searchInputPlaceHolder}\n          symbol={searchInputSymbol}\n          resetValue={searchInputResetValue}\n          error={searchInputError}\n          helperText={searchInputHelperText}\n          type=\"search\"\n        />\n      )}\n      {props.children}\n      {/* <div className=\"max-h-[39.5rem] overflow-y-auto\"></div> */}\n    </components.MenuList>\n  );\n};\n\nconst Option = (props: OptionProps<InputSelectOption>) => {\n  // const { value, options, isOptionSelected } = props.selectProps;\n  const { isSelected, data, selectOption } = props;\n  const optionRef = useRef<HTMLDivElement | null>(null);\n  // console.log('isSelected', isSelected);\n  // console.log('data', data);\n  return (\n    <components.Option\n      {...props}\n      className={`!px-4 w-fit border-select-input-two select-input-hover ${\n        isSelected ? 'bg-primary-05 !bg-inherit' : ''\n      } !cursor-pointer`}\n    >\n      <div\n        className=\"py-4 flex items-center justify-between\"\n      >\n        <p\n          className={`${\n            isSelected\n              ? 'bg-primary-100 !bg-clip-text !text-transparent'\n              : 'text-ink-100'\n          }`}\n        >\n          {props.children}\n        </p>\n        {isSelected && (\n          <img\n            className=\"w-[1.5rem]\"\n            src={images.input.gold_checkbox}\n            alt=\"BotLambotrade\"\n          />\n        )}\n      </div>\n    </components.Option>\n  );\n};\n\nconst SelectInput: FC<SelectInputProps> = forwardRef(\n  (\n    {\n      id,\n      name,\n      label,\n      isLabelOutside = false,\n      placeholder,\n      value,\n      error,\n      helperText,\n      helperTextEnd,\n      fullWidth,\n      options,\n      defaultValue,\n      searchIcon,\n      symbol,\n      icon,\n      button,\n      isSelectDisabled,\n      containerClassName = '',\n      selectContainerClassName = '',\n      inputClassName = '',\n      indicatorContainerClassName = '',\n      indicatorContainerIconClassName = '',\n      symbolClassName = '',\n      helperClassName = '',\n      helperTextClassName = '',\n      helperTextEndClassName = '',\n      menuPortalClassName = '',\n      resetValue,\n      onChange,\n      onBlur,\n      onFocus,\n      onKeyDown,\n      onKeyUp,\n      onMouseOver,\n      onMouseLeave,\n      menuRef,\n    },\n    ref\n  ) => {\n    const [isSelectFocus, setIsSelectFocus] = useState(false);\n    const [isSelectHover, setIsSelectHover] = useState(false);\n    const [isPasswordShowing, setIsPasswordShowing] = useState(false);\n    const inputRef = useRef<HTMLInputElement>(null);\n    // const [isClickingInside, setIsClickingInside] = useState(false);\n\n    const passwordType = isPasswordShowing ? 'text' : 'password';\n    const handlePasswordShown = () => {\n      // @ts-ignore\n      inputRef.current?.focus();\n      setIsPasswordShowing((prev) => !prev);\n    };\n\n    const inputSpacingWithLabel = label\n      ? 'pt-[1.625rem] pb-[0.375rem]'\n      : 'py-3';\n\n    return (\n      <div\n        className={`relative ${\n          fullWidth ? 'w-full' : ''\n        } ${containerClassName} ${\n          isSelectDisabled ? 'cursor-not-allowed' : ''\n        }`}\n      >\n        {!!label && !isLabelOutside && (\n          <label\n            className={`cubic-bezier absolute left-0 top-0  ${\n              icon || button ? 'w-[85%]' : 'w-[70%]'\n            } overflow-hidden text-ellipsis whitespace-nowrap ${\n              !isSelectFocus && !value && value !== 0\n                ? 'pl-3 pr-3 py-4 text-base text-ink-40'\n                : 'pl-3 pr-3 py-[0.375rem] text-xs text-ink-60'\n            }`}\n            onClick={() => {\n              inputRef.current?.focus();\n            }}\n          >\n            {label}\n          </label>\n        )}\n        <div\n          onMouseOver={() => {\n            setIsSelectHover(true);\n          }}\n          onMouseLeave={() => {\n            setIsSelectHover(false);\n          }}\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n        >\n          <Select\n            // defaultValue={value}\n            value={value}\n            id={id}\n            name={name}\n            options={options}\n            // @ts-ignore\n            ref={inputRef}\n            menuPortalTarget={document.body}\n            indicatorContainerClassName={indicatorContainerClassName}\n            indicatorContainerIconClassName={indicatorContainerIconClassName}\n            menuPlacement=\"auto\"\n            // menuPosition=\"fixed\"\n            // menuIsOpen={true}\n            classNames={{\n              container: (state) => {\n                return `relative ${selectContainerClassName}`;\n              },\n              control: (state) => {\n                return `${inputSpacingWithLabel} relative w-full !overflow-hidden !text-ellipsis !whitespace-nowrap !bg-transparent !caret-yellow-500 !focus:outline-none ${\n                  !searchIcon ? '!pl-3 !pr-[2.875rem]' : '!pl-8 !pr-[2.875rem]'\n                } !rounded-xl ${\n                  isSelectDisabled\n                    ? 'border-input-ink !bg-ink-10'\n                    : error\n                    ? 'border-input-red'\n                    : isSelectFocus || isSelectHover\n                    ? 'border-primary'\n                    : 'border-input-ink'\n                } !border-0 !shadow-none ${inputClassName} !cursor-pointer`;\n                // return `${inputSpacingWithLabel} w-full overflow-hidden text-ellipsis whitespace-nowrap !bg-transparent caret-input focus:outline-none ${\n                //   !isSelectDisabled && !value && label\n                //     ? 'placeholder-transparent'\n                //     : 'placeholder-ink-20'\n                // } ${inputClassName}`;\n              },\n              valueContainer: (state) => {\n                return `!p-0`;\n              },\n              singleValue: (state) => {\n                return `!m-0 !text-ink-100`;\n              },\n              placeholder: (state) => {\n                return `!m-0 ${\n                  !isSelectFocus && !value && label && !isLabelOutside\n                    ? '!text-transparent'\n                    : '!text-ink-20'\n                }`;\n              },\n              menu: (state) => {\n                return `my-2 py-4 !overflow-hidden !rounded-2xl !bg-dropdown shadow-popup `;\n              },\n              menuList: (state) => {\n                return `!p-0`;\n              },\n              menuPortal: (state) => {\n                return `!z-[20000] ${menuPortalClassName}`;\n              },\n            }}\n            unstyled\n            isOptionSelected={(option, options) => {\n              return options[0]?.value === option?.value;\n            }}\n            components={{\n              IndicatorSeparator,\n              IndicatorsContainer,\n              MenuList,\n              Option,\n            }}\n            openMenuOnFocus={true}\n            onChange={(option, actionMeta) => {\n              if (onChange) {\n                onChange(option, actionMeta);\n              }\n              setIsSelectFocus(false);\n              setIsSelectHover(false);\n            }}\n            onBlur={(e) => {\n              if (onBlur) {\n                onBlur(e);\n              }\n              setIsSelectFocus(false);\n            }}\n            onFocus={(e) => {\n              if (onFocus) {\n                onFocus(e);\n              }\n              setIsSelectFocus(true);\n            }}\n            isSearchable={false}\n            isDisabled={isSelectDisabled}\n          />\n        </div>\n        {/* <div\n        className={`relative ${\n          fullWidth ? 'w-full' : ''\n        } ${containerClassName}`}\n      >\n        {!!label && (\n          <label\n            className={`cubic-bezier -z-10 absolute left-0 top-0 w-[70%] overflow-hidden text-ellipsis whitespace-nowrap ${\n              !isInputFocus && !value && value !== 0\n                ? 'px-3 py-4 text-base text-ink-40'\n                : 'px-3 py-[0.375rem] text-xs text-ink-60'\n            }`}\n          >\n            {label}\n          </label>\n        )}\n\n        <div\n          className={`px-3 flex justify-between items-center gap-x-3 rounded-xl ${\n            isSelectDisabled\n              ? 'border-input-ink bg-ink-10'\n              : error\n              ? 'border-input-red'\n              : isInputFocus\n              ? 'border-primary'\n              : 'border-input-ink'\n          } `}\n        ></div>\n      </div> */}\n        {(!!helperText || !!helperTextEnd) && (\n          <div className={`px-3 pt-2 flex justify-between ${helperClassName}`}>\n            <p\n              className={`${\n                isSelectDisabled\n                  ? 'text-ink-80'\n                  : error\n                  ? 'text-red-100'\n                  : 'text-ink-80'\n              } text-sm ${helperTextClassName}`}\n            >\n              {helperText}\n            </p>\n            <p className={`text-ink-100 text-sm ${helperTextEndClassName}`}>\n              {helperTextEnd}\n            </p>\n          </div>\n        )}\n      </div>\n    );\n  }\n);\n\nexport default SelectInput;\n","import { Cancel } from '@mui/icons-material';\nimport { TextField } from '@mui/material';\nimport React, { FC, useRef, useState } from 'react';\nimport { boolean } from 'yup';\nimport { isDisabled } from '@testing-library/user-event/dist/utils';\nimport CurrencyInput, { CurrencyInputProps } from 'react-currency-input-field';\nimport { CurrencyInputOnChangeValues } from 'react-currency-input-field/dist/components/CurrencyInputProps';\n\ninterface TextInputProps {\n  id?: string;\n  name: string;\n  label?: React.ReactNode;\n  isLabelOutside?: boolean;\n  type: React.InputHTMLAttributes<unknown>['type'];\n  placeholder?: string;\n  prefix?: string;\n  value: string | number | readonly string[] | undefined;\n  error?: boolean;\n  isInputDisabled?: boolean;\n  helperText?: React.ReactNode;\n  helperTextEnd?: React.ReactNode;\n  decimalsLimit?: number;\n  decimalScale?: number;\n  fixedDecimalLength?: number;\n  fullWidth?: boolean;\n  searchIcon?: string;\n  symbol?: string;\n  autoComplete?: boolean;\n  icon?: string | undefined;\n  button?: React.ReactNode;\n  searchIconClassName?: string;\n  containerClassName?: string;\n  inputClassName?: string;\n  symbolClassName?: string;\n  helperClassName?: string;\n  helperTextClassName?: string;\n  helperTextEndClassName?: string;\n  resetValue?: () => void;\n  onChange?: React.ChangeEventHandler<HTMLTextAreaElement | HTMLInputElement>;\n  onValueChange?:\n  | ((\n    value: string | undefined,\n    name?: string | undefined,\n    values?: CurrencyInputOnChangeValues | undefined\n  ) => void)\n  | undefined;\n  onBlur?: React.FocusEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n  onFocus?: React.FocusEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n  onKeyDown?: React.KeyboardEventHandler<\n    HTMLTextAreaElement | HTMLInputElement\n  >;\n  onKeyUp?: React.KeyboardEventHandler<HTMLTextAreaElement | HTMLInputElement>;\n  onMouseOver?: React.MouseEventHandler<HTMLTextAreaElement | HTMLInputElement>;\n  onMouseLeave?: React.MouseEventHandler<\n    HTMLTextAreaElement | HTMLInputElement\n  >;\n}\n\nconst TextInput: FC<TextInputProps> = ({\n  id,\n  name,\n  label,\n  isLabelOutside = false,\n  placeholder,\n  prefix,\n  type = 'text',\n  value,\n  error,\n  helperText,\n  helperTextEnd,\n  decimalsLimit = 3,\n  decimalScale,\n  fixedDecimalLength,\n  fullWidth,\n  searchIcon,\n  symbol,\n  icon,\n  autoComplete,\n  button,\n  isInputDisabled,\n  searchIconClassName = '',\n  containerClassName = '',\n  inputClassName = '',\n  symbolClassName = '',\n  helperClassName = '',\n  helperTextClassName = '',\n  helperTextEndClassName = '',\n  resetValue,\n  onChange,\n  onValueChange,\n  onBlur,\n  onFocus,\n  onKeyDown,\n  onKeyUp,\n  onMouseOver,\n  onMouseLeave,\n}) => {\n  const [isInputFocus, setInputFocus] = useState(false);\n  const [isInputHover, setIsInputHover] = useState(false);\n  const [isPasswordShowing, setIsPasswordShowing] = useState(false);\n  const inputRef = useRef<HTMLInputElement | null>(null);\n  // const [isClickingInside, setIsClickingInside] = useState(false);\n\n  const passwordType = isPasswordShowing ? 'text' : 'password';\n  const handlePasswordShown = () => {\n    inputRef.current?.focus();\n    setIsPasswordShowing((prev) => !prev);\n  };\n\n  const inputSpacingWithLabel =\n    label && !isLabelOutside ? 'pt-[1.625rem] pb-[0.375rem]' : 'py-4';\n\n  return (\n    <div\n      className={`relative ${fullWidth ? 'w-full' : ''} ${containerClassName}`}\n    >\n      {!!label && isLabelOutside && (\n        <div className={`mb-2 cubic-bezier ssss`}>\n          <label\n            className={`overflow-hidden text-ellipsis whitespace-nowrap small-caps`}\n            onClick={() => {\n              inputRef.current?.focus();\n            }}\n          >\n            {label}\n          </label>\n        </div>\n      )}\n      {!!label && !isLabelOutside && (\n        <label\n          className={`cubic-bezier absolute left-0 top-0  ${icon || button ? 'w-[85%]' : 'w-[70%]'\n            } overflow-hidden text-ellipsis whitespace-nowrap ${!isInputFocus && !value\n              ? 'pl-3 pr-3 py-4 text-base text-ink-40'\n              : 'pl-3 pr-3 py-[0.375rem] text-xs text-ink-60'\n            }`}\n          onClick={() => {\n            inputRef.current?.focus();\n          }}\n        >\n          {label}\n        </label>\n      )}\n      {!!searchIcon && (\n        <div className=\"absolute left-3 top-[50%] translate-y-[-50%]\">\n          <img className={`w-[1.5rem] ${searchIconClassName}`} src={searchIcon} alt=\"BotLambotrade\" />\n        </div>\n      )}\n\n      <div\n        className={`${!searchIcon ? 'pl-3 pr-3' : 'pl-10 pr-3'\n          } flex justify-between items-center gap-x-3 rounded-xl ${isInputDisabled\n            ? 'border-input-ink bg-ink-10'\n            : error\n              ? 'border-input-red'\n              : isInputFocus || isInputHover\n                ? 'border-primary'\n                : 'border-input-ink'\n          }`}\n      >\n        <div className=\"relative z-10 flex-grow flex justify-between items-center\">\n          {type === 'number' && (\n            <CurrencyInput\n              id={id}\n              name={name}\n              autoComplete={autoComplete === true ? 'new-password' : ''}\n              className={`${inputSpacingWithLabel} w-full overflow-hidden text-ellipsis whitespace-nowrap bg-transparent caret-yellow-500 focus:outline-none ${!isInputFocus && !value && label && !isLabelOutside\n                  ? 'placeholder-transparent'\n                  : 'placeholder-ink-20'\n                } ${inputClassName}`}\n              value={value}\n              placeholder={placeholder}\n              onChange={onChange}\n              onValueChange={(value, _, values) => {\n                if (onValueChange) {\n                  onValueChange(value, _, values);\n                }\n              }}\n              onBlur={(e) => {\n                if (onBlur) {\n                  onBlur(e);\n                }\n                setInputFocus(false);\n              }}\n              onFocus={(e) => {\n                if (onFocus) {\n                  onFocus(e);\n                }\n                setInputFocus(true);\n              }}\n              onKeyDown={onKeyDown}\n              onKeyUp={onKeyUp}\n              onMouseOver={(e) => {\n                if (onMouseOver) {\n                  onMouseOver(e);\n                }\n                setIsInputHover(true);\n              }}\n              onMouseLeave={(e) => {\n                if (onMouseLeave) {\n                  onMouseLeave(e);\n                }\n                setIsInputHover(false);\n              }}\n              prefix={prefix}\n              disabled={isInputDisabled}\n              allowNegativeValue={false}\n              decimalsLimit={decimalsLimit}\n              decimalScale={decimalScale}\n              fixedDecimalLength={fixedDecimalLength}\n              disableAbbreviations={true}\n              decimalSeparator=\".\"\n              groupSeparator=\",\"\n              maxLength={13}\n              // intlConfig={{ locale: 'en-US', currency: 'USD' }}\n              ref={inputRef}\n            />\n          )}\n          {type !== 'number' && (\n            <input\n              id={id}\n              name={name}\n              autoComplete={autoComplete === true ? 'new-password' : ''}\n              className={`${inputSpacingWithLabel} w-full overflow-hidden text-ellipsis whitespace-nowrap bg-transparent caret-input focus:outline-none ${!isInputFocus && !value && label && !isLabelOutside\n                  ? 'placeholder-transparent'\n                  : 'placeholder-ink-20'\n                } ${inputClassName}`}\n              type={type === 'password' ? passwordType : type}\n              value={value}\n              placeholder={placeholder}\n              onChange={onChange}\n              onBlur={(e) => {\n                if (onBlur) {\n                  onBlur(e);\n                }\n                setInputFocus(false);\n              }}\n              onFocus={(e) => {\n                if (onFocus) {\n                  onFocus(e);\n                }\n                setInputFocus(true);\n              }}\n              onKeyDown={onKeyDown}\n              onKeyUp={onKeyUp}\n              onMouseOver={(e) => {\n                if (onMouseOver) {\n                  onMouseOver(e);\n                }\n                setIsInputHover(true);\n              }}\n              onMouseLeave={(e) => {\n                if (onMouseLeave) {\n                  onMouseLeave(e);\n                }\n                setIsInputHover(false);\n              }}\n              disabled={isInputDisabled}\n              ref={inputRef}\n            />\n          )}\n\n          {symbol && (\n            <span className={`${inputSpacingWithLabel} ${symbolClassName}`}>\n              {symbol}\n            </span>\n          )}\n        </div>\n\n        {((!!value && resetValue) || !!icon || !!button) && (\n          <div className=\"z-10 flex justify-end items-center gap-x-[1.25rem]\">\n            {!!value && resetValue && (\n              <div\n                className={`${button || icon ? 'input-icon-seperator' : ''} ${isInputFocus || isInputHover ? 'opacity-100' : 'opacity-50'\n                  }`}\n                onClick={(e) => {\n                  if (resetValue) {\n                    resetValue();\n                    inputRef.current?.focus();\n                  }\n                }}\n              >\n                <Cancel className=\"w-[1.5rem] !fill-ink-60 cursor-pointer\" />\n              </div>\n            )}\n            {!!icon && (\n              <div className={`${button ? 'input-icon-seperator' : ''}`}>\n                <img\n                  className={`w-[1.5rem] cursor-pointer`}\n                  src={icon}\n                  alt=\"BotLambotrade\"\n                  onClick={handlePasswordShown}\n                />\n              </div>\n            )}\n            {!!button && <div className=\"py-[0.375rem]\">{button}</div>}\n          </div>\n        )}\n      </div>\n      {(!!helperText || !!helperTextEnd) && (\n        <div className={`px-3 pt-2 flex justify-between ${helperClassName}`}>\n          <p\n            className={`${isInputDisabled\n                ? 'text-ink-80'\n                : error\n                  ? 'text-red-100'\n                  : 'text-ink-80'\n              } text-sm ${helperTextClassName}`}\n          >\n            {helperText}\n          </p>\n          <p className={`text-ink-100 text-sm ${helperTextEndClassName}`}>\n            {helperTextEnd}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TextInput;\n","import React, { FC } from 'react';\nimport { SnackbarContent, SnackbarKey, SnackbarMessage } from 'notistack';\nimport images from 'assets';\nimport { Cancel } from '@mui/icons-material';\n\nconst ICONS = {\n  success: images.toast.check,\n  warning: images.toast.warning,\n  error: images.toast.error,\n};\n\nconst TEXT_COLORS = {\n  success: 'text-green-100',\n  warning: 'text-yellow-100',\n  error: 'text-red-100',\n};\n\nconst TITLES = {\n  success: 'Thành công',\n  warning: 'Cảnh báo',\n  error: 'Thất bại',\n};\n\ninterface CustomSnackbarProps {\n  id: SnackbarKey;\n  message: SnackbarMessage;\n  variant?: 'success' | 'error' | 'warning';\n  closeSnackBar: () => void;\n}\n\nconst CustomSnackbar = React.forwardRef<HTMLDivElement, CustomSnackbarProps>(\n  ({ id, message, variant, closeSnackBar }, ref) => {\n    return (\n      <>\n        <div\n          className={`flex items-center justify-between gap-x-3 p-4 rounded-3xl w-[full] md:w-[25rem] transition-all bg-dropdown toast-in-right`}\n          key={id}\n          ref={ref}\n        >\n          <div className=\"flex items-center justify-between gap-x-3\">\n            <div className=\"flex-shrink-0 p-[0.625rem] rounded-2xl bg-ink-05\">\n              <img\n                className=\"w-8\"\n                src={variant && ICONS[variant]}\n                alt=\"BotLambotrade\"\n              />\n            </div>\n            <div>\n              <p\n                className={`mb-1 font-bold ${variant && TEXT_COLORS[variant]}`}\n              >\n                {variant && TITLES[variant]}\n              </p>\n              <p className=\"text-ink-80 text-sm\">{message}</p>\n            </div>\n          </div>\n          <button onClick={closeSnackBar}>\n            <Cancel className=\"fill-ink-100\" />\n          </button>\n        </div>\n      </>\n    );\n  }\n);\n\nexport default CustomSnackbar;\n","import CustomSnackbar from 'components/CustomSnackbar';\nimport { OptionsObject, useSnackbar } from 'notistack';\nimport { useCallback } from 'react';\n\nexport const useEnqueueSnackbar = () => {\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  const pushSnackbar = useCallback(\n    (\n      message: string,\n      // extend the default options object\n      options?: OptionsObject &\n        Partial<{ variant: 'success' | 'error' | 'warning' }>\n    ) => {\n      enqueueSnackbar(message, {\n        ...options,\n        content: (key) => {\n          // destructure the options we need from the extended options\n          // object, and provide a default case if we didn't provide any\n          const { variant } = options || { variant: undefined };\n          const handleCloseSnackbar = () => {\n            closeSnackbar(key);\n          };\n          return (\n            <CustomSnackbar\n              id={`${key}`}\n              message={message}\n              variant={variant || 'success'}\n              closeSnackBar={handleCloseSnackbar}\n            />\n          );\n        },\n      });\n    },\n    [closeSnackbar, enqueueSnackbar]\n  );\n\n  return pushSnackbar;\n};\n","import React, { FC, useState } from 'react';\nimport { useMediaQuery } from 'react-responsive';\n\ntype CopyTradeHistoryTypeProps = {\n  isCopyTrade: boolean;\n  setIsCopyTrade: React.Dispatch<React.SetStateAction<boolean>>;\n};\n\nconst CopyTradeHistoryType: FC<CopyTradeHistoryTypeProps> = ({\n  isCopyTrade,\n  setIsCopyTrade,\n}) => {\n  // RESPONSIVE\n  const isDesktop = useMediaQuery({\n    query: '(min-width: 1224px)',\n  });\n  const isTablet = useMediaQuery({\n    query: '(min-width: 768px)',\n  });\n  const isMobile = useMediaQuery({\n    query: '(max-width: 767px)',\n  });\n\n  return (\n    <div\n      className={`flex items-center gap-4 mb-6 ${\n        isMobile && isCopyTrade ? 'translate-x-[-4.8rem]' : 'translate-x-[0]'\n      } transition-all`}\n    >\n      <div\n        className={`rounded-xl px-6 py-3 cursor-pointer ${\n          !isCopyTrade ? 'border-primary bg-primary-10' : 'bg-primary-05'\n        } whitespace-nowrap`}\n        onClick={() => {\n          setIsCopyTrade(false);\n        }}\n      >\n        <p\n          className={`${\n            !isCopyTrade\n              ? 'bg-primary-100 bg-clip-text text-transparent font-semibold'\n              : 'text-ink-60 font-medium'\n          }`}\n        >\n          Lịch sử Trade thủ công\n        </p>\n      </div>\n      <div\n        className={`px-6 py-3 rounded-xl cursor-pointer ${\n          isCopyTrade ? 'border-primary bg-primary-10' : 'bg-primary-05'\n        } whitespace-nowrap`}\n        onClick={() => {\n          setIsCopyTrade(true);\n        }}\n      >\n        <p\n          className={`${\n            isCopyTrade\n              ? 'bg-primary-100 bg-clip-text text-transparent font-semibold'\n              : 'text-ink-60 font-medium'\n          }`}\n        >\n          Lịch sử Copy Trade\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default CopyTradeHistoryType;\n","import React, { FC } from 'react';\nimport { Stage, Layer, Circle } from 'react-konva';\nimport { useMediaQuery } from 'react-responsive';\n\ntype CopyTradeResultCanvasProps = {\n  results: boolean[];\n};\n\nconst CopyTradeResultCanvas: FC<CopyTradeResultCanvasProps> = ({ results }) => {\n  const isDesktopOrLaptop = useMediaQuery({\n    query: '(min-width: 1224px)',\n  });\n  // RESPONSIVE\n  const isDesktop = useMediaQuery({\n    query: '(min-width: 1224px)',\n  });\n  const isTablet = useMediaQuery({\n    query: '(min-width: 768px)',\n  });\n  const isMobile = useMediaQuery({\n    query: '(max-width: 767px)',\n  });\n\n  const baseWidth = 128;\n  const baseHeight = 102;\n  const baseRadius = 12;\n  // const baseWidth = isDesktopOrLaptop ? 128 : 88;\n  // const baseHeight = isDesktopOrLaptop ? 102 : 70;\n  // const baseRadius = isDesktopOrLaptop ? 12 : 8;\n  const baseSpace = 2;\n\n  return (\n    <div className=\"h-fit p-6 mb-6 bg-background-80 rounded-3xl\">\n      <div className=\"grid grid-cols-2 grid-rows-3 lg:grid-cols-5 lg:grid-rows-1 xl:flex justify-center items-center gap-x-8 gap-y-6\">\n      {results?.map((resultChild: any, index) => (\n          <Stage\n            key={index * Math.random() * 100}\n            width={baseWidth}\n            height={baseHeight}\n            className=\"last-of-type:col-span-2 lg:last-of-type:col-span-1 justify-self-center\"\n          >\n            <Layer>\n              {resultChild?.map((result: any, index: any) => {\n                const id = index * Math.random() * 1000;\n                const x =\n                  baseRadius +\n                  (baseRadius * 2 + baseSpace) * Math.floor(index / 4);\n                const y =\n                  baseRadius + (baseRadius * 2 + baseSpace) * (index % 4);\n                const fill =\n                  result == null\n                    ? \"#696363\"\n                    : result\n                    ? \"#07A42E\"\n                    : \"#C2180F\";\n                return (\n                  <Circle\n                    key={id}\n                    x={x}\n                    y={y}\n                    radius={baseRadius}\n                    id={id.toString()}\n                    fill={fill}\n                  />\n                );\n              })}\n              <Circle />\n            </Layer>\n          </Stage>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default CopyTradeResultCanvas;\n","import images from 'assets';\nimport React, { FC, useCallback, useEffect, useRef, useState } from 'react';\nimport { faker } from '@faker-js/faker';\nimport { Column, useTable } from 'react-table';\nimport SearchInput from 'components/SearchInput';\nimport CopyTradeSelfOrderHistory, {\n  CopyTradeSelfOrderHistoryResult,\n} from 'types/CopyTradeSelfOrderHistory';\nimport APIs from 'apis';\nimport axios from 'axios';\nimport { uiActions } from 'stores/uiSlice';\nimport { useAppDispatch } from 'stores/hooks';\nimport ICurrentSession, {\n  ISession,\n  ISessionLocal,\n} from 'types/ICurrentSession';\nimport moment from 'moment';\nimport { useEnqueueSnackbar } from 'hooks/useEnqueueSnackbar';\nimport CustomModal from 'components/CustomModal';\nimport GreyButton from 'components/GreyButton';\nimport GoldButton from 'components/GoldButton';\nimport useWindowFocus from 'hooks/useWindowFocus';\nimport {\n  KeyboardArrowDown,\n  KeyboardArrowLeft,\n  KeyboardArrowRight,\n} from '@mui/icons-material';\nimport ReactPaginate from 'react-paginate';\nimport SelectInput from 'components/SelectInput';\nimport InputSelectOption from 'types/InputSelectOption';\nimport { SingleValue, ActionMeta } from 'react-select';\nimport { useMediaQuery } from 'react-responsive';\n\nconst BASE_RATE = 0.95;\n\nconst PAGE_SIZE_OPTIONS: InputSelectOption[] = [\n  { value: 10, label: '10/page' },\n  { value: 20, label: '20/page' },\n  { value: 30, label: '30/page' },\n  { value: 40, label: '40/page' },\n];\n\ntype CopyTradeHistoryManualSelfProps = {\n  isMaster: boolean;\n  setIsMaster: React.Dispatch<React.SetStateAction<boolean>>;\n  searchInput: string;\n  setSearchInput: React.Dispatch<React.SetStateAction<string>>;\n};\n\ntype TableData = {\n  id: string;\n  checkbox?: string;\n  logo?: string;\n  nickname?: string;\n  accountType?: string;\n  orderAmount?: number;\n  volumeAmount?: number;\n  multiply?: number;\n  profit?: number;\n  loss?: number;\n  profitLoss?: number;\n  master?: string;\n  masterLogo?: string;\n  masterName?: string;\n};\n\ntype SelectedIdsType = {\n  [key: string]: boolean;\n};\n\nconst TIME_IN_ONE_SESSION = 30;\n\nconst SESSION_TYPES = ['WAIT', 'TRADE'];\n\nconst options: Intl.NumberFormatOptions = {\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 3,\n  style: 'decimal',\n};\n\nconst CopyTradeHistoryManualSelf: FC<CopyTradeHistoryManualSelfProps> = ({\n  isMaster,\n  setIsMaster,\n  searchInput,\n  setSearchInput,\n}) => {\n  const [selectedIds, setSelectedIds] = useState<SelectedIdsType>({});\n  const [selectAll, setSelectAll] = useState(0);\n  const [botHistory, setBotHistory] = useState<CopyTradeSelfOrderHistory>({\n    count: 0,\n    next: null,\n    previous: null,\n    results: [],\n  });\n  const [partnerBotId, setPartnerBotId] = useState(0);\n\n  // SESSION\n  const [sessionLocal, setSessionLocal] = useState<ISessionLocal>({\n    ss_t: '',\n    r_second: 0,\n  });\n  const [sessionId, setSessionId] = useState(0);\n  const [isInitialized, setIsInitialized] = useState(false);\n  const [startSession, setStartSession] = useState<ISession>({\n    ss_id: 0,\n    ss_t: 'WAIT',\n    o_price: 0,\n    c_price: 0,\n    r_second: 0,\n    st_time: moment().format('YYYY-MM-DDTHH:mm:ss.SSSS'),\n  });\n\n  // MODAL\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n\n  // PAGINATION\n  // const [pageSize, setPageSize] = useState(10);\n  const [selectedPageSizeOption, setSelectedPageSizeOption] =\n    useState<InputSelectOption>(PAGE_SIZE_OPTIONS[0]);\n  const [page, setPage] = useState(0);\n  const [totalPages, setTotalPages] = useState(10);\n  const menuRef = useRef<HTMLDivElement>(null);\n  const [isPrevHover, setIsPrevHover] = useState(false);\n  const [isNextHover, setIsNextHover] = useState(false);\n\n  // RESPONSIVE\n  const isDesktop = useMediaQuery({\n    query: '(min-width: 1224px)',\n  });\n  const isTablet = useMediaQuery({\n    query: '(min-width: 768px)',\n  });\n  const isMobile = useMediaQuery({\n    query: '(max-width: 767px)',\n  });\n\n  const dispatch = useAppDispatch();\n  const enqueueSnackbar = useEnqueueSnackbar();\n\n  const data = React.useMemo<CopyTradeSelfOrderHistoryResult[]>(\n    () => botHistory.results,\n    [botHistory]\n  );\n\n  // MODAL FUNCTION\n  const handleOpenPopupModal = () => {\n    setIsPopupOpen(true);\n  };\n\n  const handleClosePopupModal = () => {\n    setIsPopupOpen(false);\n  };\n\n  // CHECKBOX FUNCTION\n  const toggleRow = useCallback(\n    (id: number | string) => {\n      const newSelected = { ...selectedIds };\n      newSelected[id] = !newSelected[id];\n      console.log(newSelected);\n      setSelectedIds(newSelected);\n      const totalSelected = Object.entries(newSelected).reduce(\n        (prev, value) => {\n          if (value[1]) return prev + 1;\n          return prev;\n        },\n        0\n      );\n      if (totalSelected >= data.length) {\n        setSelectAll(1);\n      } else {\n        setSelectAll(0);\n      }\n    },\n    [data.length, selectedIds]\n  );\n\n  const toggleAllRow = useCallback(() => {\n    let newSelected: SelectedIdsType = {};\n\n    if (selectAll === 0) {\n      data.forEach((x) => {\n        newSelected[x.id] = true;\n      });\n    }\n    setSelectedIds(newSelected);\n    setSelectAll((prev) => (prev === 0 ? 1 : 0));\n  }, [data, selectAll]);\n\n  // FUNCTIONAL REQUIREMENTS\n  const getCurrentSession = useCallback(() => {\n    const noLoadingAxios = axios.create();\n    noLoadingAxios\n      .get(APIs.currentSession)\n      .then((res) => {\n        const data: ICurrentSession = res.data;\n        setSessionId(data.d.ss_id);\n        setStartSession(data.d);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  const getOrderHistory = useCallback(\n    (page: number) => {\n      const noLoadingAxios = axios.create();\n      noLoadingAxios\n        .get(`${APIs.orderSelfList}`, {\n          params: {\n            page,\n            page_size: selectedPageSizeOption.value,\n          },\n        })\n        .then((res) => {\n          const data: CopyTradeSelfOrderHistory = res.data;\n          setBotHistory(data);\n          if (data.count != null && selectedPageSizeOption.value != null) {\n            setTotalPages(\n              Math.ceil(data.count / +selectedPageSizeOption.value)\n            );\n          }\n        })\n        .catch(() => {\n          enqueueSnackbar('Không thể lấy lịch sử giao dịch!', {\n            variant: 'error',\n          });\n        });\n    },\n    [enqueueSnackbar, selectedPageSizeOption]\n  );\n\n  const updateOrderHistory = useCallback(() => {\n    const noLoadingAxios = axios.create();\n    noLoadingAxios\n      .get(`${APIs.updateOrderListById}`)\n      .then((res) => {\n        getOrderHistory(page + 1);\n      })\n      .catch(() => {\n        const notification = {\n          id: Math.floor(Math.random() * 101 + 1),\n          title: 'Thất bại',\n          description: 'Không thể lấy lịch sử giao dịch!',\n          backgroundColor: 'text-red-100',\n          icon: images.toast.error,\n        };\n        dispatch(uiActions.showNotifications(notification));\n      });\n  }, [dispatch, getOrderHistory, page]);\n\n  // SESSION\n  const getCurrentSessionByLocalTime = useCallback(() => {\n    // GET START SESSION AND CONSTANTS\n    const currentSecond = moment().second();\n    const MAXIMUM_SECOND_IN_A_MINUTE = 60;\n    const START_SESSION_SECOND_CONVERTED = +moment(startSession.st_time).format(\n      'ss'\n    );\n\n    const START_SESSION =\n      START_SESSION_SECOND_CONVERTED < 30\n        ? START_SESSION_SECOND_CONVERTED\n        : Math.abs(30 - START_SESSION_SECOND_CONVERTED);\n\n    // RETRIEVE START SESSION TYPE\n    let middleSessionType: string;\n    let notMiddleSessionType: string;\n    if (START_SESSION_SECOND_CONVERTED < 30) {\n      middleSessionType = startSession.ss_t;\n      notMiddleSessionType = SESSION_TYPES.filter(\n        (type) => type !== middleSessionType\n      )[0];\n    } else {\n      middleSessionType = SESSION_TYPES.filter(\n        (type) => type !== startSession.ss_t\n      )[0];\n      notMiddleSessionType = startSession.ss_t;\n    }\n\n    // const START_SESSION =\n    //   START_SESSION_TRADE < 30\n    //     ? START_SESSION_TRADE\n    //     : Math.abs(30 - START_SESSION_TRADE);\n\n    // 15 <= sess < 45\n    const isInMiddleSession =\n      currentSecond >= START_SESSION &&\n      currentSecond < START_SESSION + TIME_IN_ONE_SESSION;\n\n    // type is TRADE if START < 30 and isInMiddleSession\n    let sessionType = isInMiddleSession\n      ? middleSessionType\n      : notMiddleSessionType;\n    let timeLeft;\n    if (isInMiddleSession) {\n      // 15 <= sess < 45\n      console.log('15 <= sess < 45', currentSecond);\n      timeLeft = START_SESSION + TIME_IN_ONE_SESSION - currentSecond;\n    } else if (currentSecond >= START_SESSION + TIME_IN_ONE_SESSION) {\n      // 45 <= sess < 60\n      console.log('45 <= sess < 60', currentSecond);\n      const START_SESSION_UPPER = START_SESSION + TIME_IN_ONE_SESSION;\n      timeLeft = START_SESSION_UPPER + TIME_IN_ONE_SESSION - currentSecond;\n    } else {\n      // 0 <= sess < 15\n      console.log('0 <= sess < 15', currentSecond);\n      // In this case: START_SESSION = END_LOWER_SESSION\n      const END_LOWER_SESSION = START_SESSION;\n      timeLeft = END_LOWER_SESSION - currentSecond;\n    }\n    // UPDATE SESSION ID\n    const isStartSession = currentSecond === START_SESSION;\n    const endSessionSecond =\n      START_SESSION + TIME_IN_ONE_SESSION === MAXIMUM_SECOND_IN_A_MINUTE\n        ? 0\n        : START_SESSION + TIME_IN_ONE_SESSION;\n    const isEndSession = currentSecond === endSessionSecond;\n    if ((isStartSession || isEndSession) && sessionId !== 0) {\n      setSessionId((prev) => prev + 1);\n    }\n    // GET PARTNER BOT AFTER END WAIT SESSION\n    if (isEndSession && sessionId !== 0) {\n      updateOrderHistory();\n    }\n    setSessionLocal({\n      r_second: timeLeft,\n      ss_t: sessionType,\n    });\n  }, [updateOrderHistory, sessionId, startSession.ss_t, startSession.st_time]);\n\n  const deleteHistoryByListIds = () => {\n    // ENTRY: string: boolean\n    console.log(selectedIds);\n    const selectedListIds = Object.entries(selectedIds)\n      .filter((selected) => selected[1])\n      .map((selected) => selected[0]);\n    console.log('selectedListIds:', selectedListIds);\n    axios\n      .delete(`${APIs.deleteOrderByIds}${selectedListIds}`)\n      .then((res) => {\n        getOrderHistory(page + 1);\n        setSelectAll(0);\n        setSelectedIds({});\n        enqueueSnackbar('Xoá cấu hình thành công!', { variant: 'success' });\n      })\n      .catch(() => {\n        enqueueSnackbar('Xoá cấu hình thất bại!', { variant: 'error' });\n      });\n  };\n\n  // PAGINATION FUNCTION\n  const handleSelectPageSize = (\n    option: SingleValue<InputSelectOption>,\n    actionMeta: ActionMeta<InputSelectOption>\n  ) => {\n    if (option != null) {\n      setSelectedPageSizeOption(option);\n      setPage(0);\n      getOrderHistory(1);\n    }\n  };\n\n  const handlePageChange = useCallback(\n    ({ selected }: { selected: number }) => {\n      console.log(selected);\n      const page = selected + 1;\n      setPage(selected);\n      getOrderHistory(page);\n    },\n    [getOrderHistory]\n  );\n\n  const columns = React.useMemo<Column<CopyTradeSelfOrderHistoryResult>[]>(\n    () => [\n      {\n        id: 'checkbox',\n        accessor: 'checkbox',\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          // console.log(selected);\n          // console.log(original.id);\n          return (\n            <div className=\"flex justify-center items-center\">\n              <input\n                type=\"checkbox\"\n                className=\"checkbox\"\n                checked={selectedIds[original.id] === true}\n                onChange={(e) => toggleRow(original.id)}\n              />\n            </div>\n          );\n        },\n        Header: () => {\n          return (\n            <div className=\"flex justify-center items-center\">\n              <input\n                type=\"checkbox\"\n                className=\"checkbox text-center\"\n                checked={selectAll === 1}\n                ref={(input) => {\n                  if (input) {\n                    input.indeterminate = selectAll === 2;\n                  }\n                }}\n                onChange={() => toggleAllRow()}\n              />\n            </div>\n          );\n        },\n        sortable: false,\n        width: 45,\n      },\n      {\n        Header: () => {\n          return <div className=\"text-left\">Mã phiên</div>;\n        },\n        accessor: 'ss_id',\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          return (\n            <div>\n              <p>{original.ss_id}</p>\n            </div>\n          );\n        },\n      },\n      {\n        Header: () => {\n          return <div className=\"text-left\">Thời gian</div>;\n        },\n        accessor: 'o_time',\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          const convertedMoment = moment\n            .unix(original.o_time / 1000)\n            .format('DD/MM/YYYY HH:mm');\n          return <p>{convertedMoment}</p>;\n        },\n      },\n      {\n        Header: () => {\n          return <div className=\"text-center\">Loại tài khoản</div>;\n        },\n        accessor: 'account_type',\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          const isDemoAccount = original.account_type === 'DEMO';\n          // const isDemoAccount = false;\n          return (\n            <div className=\"flex justify-center gap-x-1\">\n              {/* <p>{original.account_type}</p> */}\n              <p\n                className={`px-2 ${\n                  isDemoAccount ? 'bg-blue-80' : 'bg-purple-100'\n                } rounded-3xl text-ink-100 text-xs`}\n              >\n                {original.account_type}\n                {/* LIVE */}\n              </p>\n            </div>\n          );\n        },\n      },\n      {\n        Header: () => {\n          return <div className=\"text-left\">Tài khoản giao dịch</div>;\n        },\n        accessor: 'o_PartnerAcc_owner_name',\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          // const isDemoAccount = false;\n          return (\n            <div>\n              <p>{original.o_PartnerAcc_owner_name}</p>\n            </div>\n          );\n        },\n      },\n      {\n        Header: () => <div className=\"text-center\">Lệnh vào</div>,\n        accessor: 'o_type',\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          const imageOrderType =\n            original.o_type === 'BUY' ? images.table.buy : images.table.sell;\n          return (\n            <div className=\"text-center\">\n              <img\n                className=\"w-[1.5rem] mx-auto\"\n                alt=\"BotLambotrade\"\n                src={imageOrderType}\n              />\n            </div>\n          );\n        },\n      },\n      {\n        Header: () => <div className=\"text-center\">Kết quả</div>,\n        accessor: 'o_result',\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          const isWinning = original.o_result === 1;\n          const isLosing = original.o_result === -1;\n          const isPending =\n            original.o_result === 0 || original.o_result == null;\n          const isDraw = original.o_result === 0;\n          const isFinished = original.o_status === 'FINISHED';\n          let imageOrderType = <></>;\n          if (isWinning) {\n            if (original.o_type === 'BUY') {\n              imageOrderType = (\n                <img\n                  className=\"w-[1.5rem] mx-auto\"\n                  alt=\"BotLambotrade\"\n                  src={images.table.buy}\n                />\n              );\n            } else if (original.o_type === 'SELL') {\n              imageOrderType = (\n                <img\n                  className=\"w-[1.5rem] mx-auto\"\n                  alt=\"BotLambotrade\"\n                  src={images.table.sell}\n                />\n              );\n            }\n          } else if (isLosing) {\n            if (original.o_type === 'BUY') {\n              imageOrderType = (\n                <img\n                  className=\"w-[1.5rem] mx-auto\"\n                  alt=\"BotLambotrade\"\n                  src={images.table.sell}\n                />\n              );\n            } else if (original.o_type === 'SELL') {\n              imageOrderType = (\n                <img\n                  className=\"w-[1.5rem] mx-auto\"\n                  alt=\"BotLambotrade\"\n                  src={images.table.buy}\n                />\n              );\n            }\n          } else if (isDraw && isFinished) {\n            imageOrderType = (\n              <img\n                className=\"w-[1.5rem] mx-auto\"\n                alt=\"BotLambotrade\"\n                src={images.table.draw}\n              />\n            );\n          } else if (isPending) {\n            imageOrderType = (\n              <p className=\"bg-primary-100 bg-clip-text text-transparent\">\n                ...\n              </p>\n            );\n          }\n          return <div className=\"text-center\">{imageOrderType}</div>;\n        },\n      },\n      {\n        Header: () => <div className=\"text-end\">Giá trị lệnh</div>,\n        accessor: 'o_amount',\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          return (\n            <div className=\"text-end\">\n              <span className=\"bg-primary-100 bg-clip-text text-transparent text-sm font-bold\">\n                ${original.o_amount?.toLocaleString('en-US', options)}\n              </span>\n            </div>\n          );\n        },\n      },\n      {\n        Header: () => <div className=\"text-end\">Thanh toán</div>,\n        accessor: 'output',\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          const isWinning = original.o_result === 1;\n          const isLosing = original.o_result === -1;\n          const isPending =\n            original.o_result === 0 || original.o_result == null;\n          const isDraw = original.o_result === 0;\n          const isFinished = original.o_status === 'FINISHED';\n          return (\n            <div className=\"text-end\">\n              {isWinning && (\n                <span className=\"text-green-100 rounded-3xl text-sm font-bold\">\n                  +$\n                  {(original.o_amount * BASE_RATE).toLocaleString(\n                    'en-US',\n                    options\n                  )}\n                </span>\n              )}\n              {isLosing && (\n                <span className=\"text-red-100 rounded-3xl text-sm font-bold\">\n                  -$\n                  {original.o_amount.toLocaleString('en-US', options)}\n                </span>\n              )}\n              {isFinished && isDraw ? (\n                <span className=\"bg-primary-100 bg-clip-text text-transparent rounded-3xl text-sm font-bold\">\n                  ${original.o_amount.toLocaleString('en-US', options)}\n                </span>\n              ) : isPending ? (\n                <span className=\"bg-primary-100 bg-clip-text text-transparent rounded-3xl text-sm font-bold\">\n                  ...\n                </span>\n              ) : (\n                <span className=\"bg-primary-100 bg-clip-text text-transparent rounded-3xl text-sm font-bold\"></span>\n              )}\n            </div>\n          );\n        },\n      },\n    ],\n    [selectAll, selectedIds, toggleAllRow, toggleRow]\n  );\n\n  const tableInstance = useTable({ columns, data });\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    tableInstance;\n\n  const showIsDevelopingModal = () => {\n    dispatch(uiActions.updateIsModalOpen(true));\n  };\n\n  // INTERVAL GET CURRENT SESSION BY LOCAL TIME\n  useEffect(() => {\n    if (!isInitialized) {\n      getCurrentSession();\n      setIsInitialized(true);\n    }\n    const intervalId = setInterval(() => {\n      getCurrentSessionByLocalTime();\n    }, 1000);\n\n    return () => clearInterval(intervalId);\n  }, [getCurrentSession, getCurrentSessionByLocalTime, isInitialized]);\n\n  // TIME OUT 3 MINS FOR GET CURRENT SESSION\n  useEffect(() => {\n    const threeMins = 180000;\n    const interval = setInterval(() => {\n      getCurrentSession();\n    }, threeMins);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [getCurrentSession]);\n\n  // CHECK IF INITIALIZED => setPartnerBotId\n  useEffect(() => {\n    if (!isInitialized && botHistory.results.length > 0) {\n      setPartnerBotId(data[0].o_PartnerAcc_owner);\n      setIsInitialized(true);\n    }\n  }, [botHistory.results.length, data, isInitialized]);\n\n  // RETRIEVE ORDER HISTORY\n  useEffect(() => {\n    getOrderHistory(page + 1);\n  }, [getOrderHistory, page]);\n\n  // CHECK IF TAB IS FOCUS OR NOT\n\n  return (\n    <>\n      <div className=\"h-fit mb-6 bg-background-80 rounded-3xl\">\n        <div className=\"flex gap-y-6 px-6 pt-2 border-b border-ink-10\">\n          <div\n            className={`relative py-4 px-6 cursor-pointer ${\n              !isMaster ? 'border-bottom-primary' : ''\n            }`}\n            onClick={() => {\n              setIsMaster(false);\n              setSelectAll(0);\n              setSelectedIds({});\n            }}\n          >\n            <p\n              className={`${\n                !isMaster\n                  ? 'bg-primary-100 bg-clip-text text-transparent font-semibold'\n                  : 'text-ink-60'\n              } text-sm whitespace-nowrap`}\n            >\n              Trade cá nhân\n            </p>\n          </div>\n          <div\n            className={`relative py-4 px-6 cursor-pointer ${\n              isMaster ? 'border-bottom-primary' : ''\n            }`}\n            onClick={() => {\n              setIsMaster(true);\n              setSelectAll(0);\n              setSelectedIds({});\n            }}\n          >\n            <p\n              className={`${\n                isMaster\n                  ? 'bg-primary-100 bg-clip-text text-transparent font-semibold'\n                  : 'text-ink-60'\n              } text-sm whitespace-nowrap`}\n            >\n              Trade chuyên gia\n            </p>\n          </div>\n        </div>\n\n        {botHistory.results.length === 0 && (\n          <div className=\"py-[5rem] flex flex-col justify-center items-center gap-y-6\">\n            <img\n              className=\"w-[10.25rem]\"\n              src={images.copy.manualEmpty}\n              alt=\"BotLambotrade\"\n            />\n            <p className=\"text-ink-60\">Lịch sử trade cá nhân trống</p>\n          </div>\n        )}\n\n        {botHistory.results.length > 0 && (\n          <div className=\"p-6 flex flex-col gap-y-6\">\n            {/* SEARCH */}\n            <div>\n              <SearchInput\n                inputName=\"search\"\n                inputClassName=\"w-full md:w-[21.375rem]\"\n                searchInput={searchInput}\n                setSearchInput={setSearchInput}\n              />\n            </div>\n\n            {/* SELECTED CHECKBOX */}\n            {Object.values(selectedIds).filter((value) => value === true)\n              .length > 0 && (\n              <div className=\"px-4 py-3 bg-ink-05 rounded-xl flex justify-between items-center\">\n                <p className=\"text-ink-100 font-semibold\">\n                  {`Đã chọn ${\n                    Object.values(selectedIds).filter((value) => value === true)\n                      .length\n                  }`}\n                </p>\n                <button\n                  className=\"px-8 py-3 bg-primary-100 rounded-xl\"\n                  onClick={() => {\n                    // showIsDevelopingModal();\n                    handleOpenPopupModal();\n                  }}\n                >\n                  <p className=\"bg-background-100 bg-clip-text text-transparent font-semibold\">\n                    Xoá\n                  </p>\n                </button>\n              </div>\n            )}\n\n            {/* TABLE */}\n            <div>\n              <div\n                className={`border border-ink-05 rounded-2xl w-full ${\n                  !isDesktop ? 'overflow-x-scroll' : ''\n                }`}\n              >\n                <table className=\"w-full\" {...getTableProps()}>\n                  <thead>\n                    {headerGroups.map((headerGroup) => (\n                      <tr {...headerGroup.getHeaderGroupProps()}>\n                        {headerGroup.headers.map((column) => (\n                          <th\n                            className={`p-4 bg-primary-05 first-of-type:rounded-tl-2xl last-of-type:rounded-tr-2xl text-sm text-ink-100 font-normal whitespace-nowrap text-ellipsis`}\n                            {...column.getHeaderProps()}\n                          >\n                            {column.render('Header')}\n                          </th>\n                        ))}\n                      </tr>\n                    ))}\n                  </thead>\n                  <tbody {...getTableBodyProps()}>\n                    {rows.map((row) => {\n                      prepareRow(row);\n                      return (\n                        <tr\n                          className={`border-b border-ink-10 last:border-0 whitespace-nowrap text-ellipsis`}\n                          {...row.getRowProps()}\n                        >\n                          {row.cells.map((cell) => (\n                            <td\n                              className=\"p-4 text-sm\"\n                              {...cell.getCellProps()}\n                            >\n                              {cell.render('Cell')}\n                            </td>\n                          ))}\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n\n            {/* PAGINATION */}\n            <div\n              className={`flex flex-col justify-center items-end md:flex-row md:justify-end md:items-center gap-2`}\n            >\n              {/* <div className=\"px-3 py-[0.375rem] flex justify-center items-center gap-x-1 border-input-ink rounded-lg\">\n                <SelectInput\n                  value={selectedPageSizeOption}\n                  onChange={handleSelectPageSize}\n                  name=\"select\"\n                  options={PAGE_SIZE_OPTIONS}\n                />\n                <p>\n                  {selectedPageSizeOption.value}/{botHistory.count}\n                </p>\n                <KeyboardArrowDown\n                  sx={{\n                    fill: 'var(--color-ink-80)',\n                    cursor: 'pointer',\n                  }}\n                />\n              </div> */}\n              <div>\n                <SelectInput\n                  menuRef={menuRef}\n                  value={selectedPageSizeOption}\n                  onChange={handleSelectPageSize}\n                  inputClassName=\"!py-2 !pr-8 text-sm\"\n                  indicatorContainerClassName=\"!right-3\"\n                  indicatorContainerIconClassName=\"!w-[1rem]\"\n                  menuPortalClassName={`min-w-[10.25rem] ${\n                    isMobile ? 'translate-x-[-3.2rem]' : ''\n                  }`}\n                  name=\"select\"\n                  options={PAGE_SIZE_OPTIONS}\n                />\n              </div>\n\n              <ReactPaginate\n                breakLabel=\"...\"\n                onPageChange={handlePageChange}\n                marginPagesDisplayed={isMobile ? 2 : 3}\n                pageCount={totalPages}\n                previousLabel={\n                  <div\n                    onMouseLeave={() => {\n                      setIsPrevHover(false);\n                    }}\n                    onMouseEnter={() => {\n                      setIsPrevHover(true);\n                    }}\n                    className=\"p-[0.375rem] border-input-ink before:rounded-lg\"\n                  >\n                    {isPrevHover ? (\n                      <img\n                        className=\"w-[1.25rem]\"\n                        src={images.table.pagination_left_arrow_gold}\n                        alt=\"BotLambotrade\"\n                      />\n                    ) : (\n                      // <KeyboardArrowLeft sx={{ fill: 'var(--color-ink-80)' }} />\n                      <img\n                        className=\"w-[1.25rem]\"\n                        src={images.table.pagination_left_arrow}\n                        alt=\"BotLambotrade\"\n                      />\n                    )}\n                  </div>\n                }\n                nextLabel={\n                  <div\n                    onMouseLeave={() => {\n                      setIsNextHover(false);\n                    }}\n                    onMouseEnter={() => {\n                      setIsNextHover(true);\n                    }}\n                    className=\"p-[0.375rem] border-input-ink before:rounded-lg\"\n                  >\n                    {/* <KeyboardArrowRight sx={{ fill: 'var(--color-ink-80)' }} /> */}\n                    {isNextHover ? (\n                      <img\n                        className=\"w-[1.25rem]\"\n                        src={images.table.pagination_right_arrow_gold}\n                        alt=\"BotLambotrade\"\n                      />\n                    ) : (\n                      <img\n                        className=\"w-[1.25rem]\"\n                        src={images.table.pagination_right_arrow}\n                        alt=\"BotLambotrade\"\n                      />\n                    )}\n                  </div>\n                }\n                forcePage={page}\n                // pageClassName=\"py-[0.3125rem] px-3 border-input-ink before:rounded-lg cursor-pointer\"\n                pageLinkClassName=\"page-link relative z-10 py-[0.3125rem] px-3 border-input-ink before:rounded-lg cursor-pointer\"\n                previousClassName=\"page-item flex\"\n                previousLinkClassName=\"page-link\"\n                nextClassName=\"page-item flex\"\n                nextLinkClassName=\"page-link relative z-10\"\n                breakClassName=\"page-item py-[0.375rem] px-3 border-input-ink before:rounded-lg cursor-pointer\"\n                breakLinkClassName=\"page-link z-10\"\n                containerClassName=\"flex items-center gap-x-2 text-ink-80 text-sm\"\n                activeClassName=\"pagination-active border-primary before:rounded-lg\"\n              />\n            </div>\n          </div>\n        )}\n      </div>\n\n      <CustomModal\n        isOpen={isPopupOpen}\n        handleOpen={handleOpenPopupModal}\n        handleClose={handleClosePopupModal}\n      >\n        <div\n          className={`absolute left-[50%] top-[50%] translate-x-[-50%] translate-y-[-50%] p-6 md:w-[31.25rem] w-[calc(100vw-2rem)] bg-background-80 rounded-3xl text-center`}\n        >\n          <div className=\"flex items-center justify-center\">\n            <img\n              className=\"mb-4 w-[5.5rem]\"\n              src={images.copy.delete}\n              alt=\"BotLambotrade\"\n            />\n          </div>\n          <h3 className=\"mb-2 mx-auto max-w-[18.75rem] text-xl text-ink-100\">\n            Xoá lịch sử trade cá nhân\n          </h3>\n          <p className=\"mb-12 mx-auto max-w-[18.75rem] text-ink-80\">\n            Bạn có chắc chắn muốn xoá lịch sử trade cá nhân không?\n          </p>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 justify-center items-center gap-4\">\n            <GreyButton onClick={handleClosePopupModal}>Huỷ</GreyButton>\n            <GoldButton\n              onClick={() => {\n                deleteHistoryByListIds();\n                handleClosePopupModal();\n              }}\n            >\n              Xoá\n            </GoldButton>\n          </div>\n        </div>\n      </CustomModal>\n    </>\n  );\n};\n\nexport default CopyTradeHistoryManualSelf;\n","import images from 'assets';\nimport React, { FC, useCallback, useEffect, useRef, useState } from 'react';\nimport { faker } from '@faker-js/faker';\nimport { Column, useTable } from 'react-table';\nimport SearchInput from 'components/SearchInput';\nimport CopyTradeMasterOrderHistory, {\n  CopyTradeMasterOrderHistoryResult,\n} from 'types/CopyTradeMasterOrderHistory';\nimport APIs from 'apis';\nimport axios from 'axios';\nimport { uiActions } from 'stores/uiSlice';\nimport { useAppDispatch } from 'stores/hooks';\nimport ICurrentSession, {\n  ISession,\n  ISessionLocal,\n} from 'types/ICurrentSession';\nimport moment from 'moment';\nimport { useEnqueueSnackbar } from 'hooks/useEnqueueSnackbar';\nimport CustomModal from 'components/CustomModal';\nimport GreyButton from 'components/GreyButton';\nimport GoldButton from 'components/GoldButton';\nimport useIsTabVisible from 'hooks/useWindowFocus';\nimport useWindowFocus from 'hooks/useWindowFocus';\nimport ReactPaginate from 'react-paginate';\nimport SelectInput from 'components/SelectInput';\nimport InputSelectOption from 'types/InputSelectOption';\nimport { ActionMeta, SingleValue } from 'react-select';\nimport { useMediaQuery } from 'react-responsive';\n\nconst BASE_RATE = 0.95;\n\nconst PAGE_SIZE_OPTIONS: InputSelectOption[] = [\n  { value: 10, label: '10/page' },\n  { value: 20, label: '20/page' },\n  { value: 30, label: '30/page' },\n  { value: 40, label: '40/page' },\n];\n\ntype CopyTradeHistoryManualMasterProps = {\n  isMaster: boolean;\n  setIsMaster: React.Dispatch<React.SetStateAction<boolean>>;\n  searchInput: string;\n  setSearchInput: React.Dispatch<React.SetStateAction<string>>;\n};\n\ntype SelectedIdsType = {\n  [key: string]: boolean;\n};\n\nconst TIME_IN_ONE_SESSION = 30;\n\nconst SESSION_TYPES = ['WAIT', 'TRADE'];\n\nconst options: Intl.NumberFormatOptions = {\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 3,\n  style: 'decimal',\n};\n\nconst CopyTradeHistoryManualMaster: FC<CopyTradeHistoryManualMasterProps> = ({\n  isMaster,\n  setIsMaster,\n  searchInput,\n  setSearchInput,\n}) => {\n  const [selectedIds, setSelectedIds] = useState<SelectedIdsType>({});\n  const [selectAll, setSelectAll] = useState(0);\n  const [botHistory, setBotHistory] = useState<CopyTradeMasterOrderHistory>({\n    count: 0,\n    next: null,\n    previous: null,\n    results: [],\n  });\n\n  const [partnerBotId, setPartnerBotId] = useState(0);\n\n  // SESSION\n  const [sessionLocal, setSessionLocal] = useState<ISessionLocal>({\n    ss_t: '',\n    r_second: 0,\n  });\n  const [sessionId, setSessionId] = useState(0);\n  const [isInitialized, setIsInitialized] = useState(false);\n  const [startSession, setStartSession] = useState<ISession>({\n    ss_id: 0,\n    ss_t: 'WAIT',\n    o_price: 0,\n    c_price: 0,\n    r_second: 0,\n    st_time: moment().format('YYYY-MM-DDTHH:mm:ss.SSSS'),\n  });\n\n  // MODAL\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n\n  // HOOKS\n  const dispatch = useAppDispatch();\n  const enqueueSnackbar = useEnqueueSnackbar();\n\n  // TABLE\n  const data = React.useMemo<CopyTradeMasterOrderHistoryResult[]>(\n    () => botHistory.results,\n    [botHistory]\n  );\n\n  // PAGINATION\n  const [selectedPageSizeOption, setSelectedPageSizeOption] =\n    useState<InputSelectOption>(PAGE_SIZE_OPTIONS[0]);\n  const [page, setPage] = useState(0);\n  const [totalPages, setTotalPages] = useState(10);\n  const menuRef = useRef<HTMLDivElement>(null);\n  const [isPrevHover, setIsPrevHover] = useState(false);\n  const [isNextHover, setIsNextHover] = useState(false);\n\n  // RESPONSIVE\n  const isDesktop = useMediaQuery({\n    query: '(min-width: 1224px)',\n  });\n  const isTablet = useMediaQuery({\n    query: '(min-width: 768px)',\n  });\n  const isMobile = useMediaQuery({\n    query: '(max-width: 767px)',\n  });\n\n  // MODAL FUNCTION\n  const handleOpenPopupModal = () => {\n    setIsPopupOpen(true);\n  };\n\n  const handleClosePopupModal = () => {\n    setIsPopupOpen(false);\n  };\n\n  // CHECKBOX FUNCTION\n  const toggleRow = useCallback(\n    (id: number | string) => {\n      const newSelected = { ...selectedIds };\n      newSelected[id] = !newSelected[id];\n      console.log(newSelected);\n      setSelectedIds(newSelected);\n      const totalSelected = Object.entries(newSelected).reduce(\n        (prev, value) => {\n          if (value[1]) return prev + 1;\n          return prev;\n        },\n        0\n      );\n      if (totalSelected >= data.length) {\n        setSelectAll(1);\n      } else {\n        setSelectAll(0);\n      }\n    },\n    [data.length, selectedIds]\n  );\n\n  const toggleAllRow = useCallback(() => {\n    let newSelected: SelectedIdsType = {};\n\n    if (selectAll === 0) {\n      data.forEach((x) => {\n        newSelected[x.id] = true;\n      });\n    }\n    setSelectedIds(newSelected);\n    setSelectAll((prev) => (prev === 0 ? 1 : 0));\n  }, [data, selectAll]);\n\n  // FUNCTIONAL REQUIREMENTS\n  const getCurrentSession = useCallback(() => {\n    const noLoadingAxios = axios.create();\n    noLoadingAxios\n      .get(APIs.currentSession)\n      .then((res) => {\n        const data: ICurrentSession = res.data;\n        setSessionId(data.d.ss_id);\n        setStartSession(data.d);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  const getMasterOrderHistory = useCallback(\n    (page: number) => {\n      const noLoadingAxios = axios.create();\n      noLoadingAxios\n        .get(`${APIs.orderMasterList}?page=${page}`)\n        .then((res) => {\n          const data: CopyTradeMasterOrderHistory = res.data;\n          setBotHistory(data);\n          if (data.count != null && selectedPageSizeOption.value != null) {\n            setTotalPages(\n              Math.ceil(data.count / +selectedPageSizeOption.value)\n            );\n          }\n        })\n        .catch(() => {\n          enqueueSnackbar('Không thể lấy lịch sử giao dịch!', {\n            variant: 'error',\n          });\n        });\n    },\n    [enqueueSnackbar, selectedPageSizeOption.value]\n  );\n\n  const updateOrderHistory = useCallback(() => {\n    const noLoadingAxios = axios.create();\n    noLoadingAxios\n      .get(`${APIs.updateOrderListById}`)\n      .then((res) => {\n        getMasterOrderHistory(page + 1);\n      })\n      .catch(() => {\n        const notification = {\n          id: Math.floor(Math.random() * 101 + 1),\n          title: 'Thất bại',\n          description: 'Không thể lấy lịch sử giao dịch!',\n          backgroundColor: 'text-red-100',\n          icon: images.toast.error,\n        };\n        dispatch(uiActions.showNotifications(notification));\n      });\n  }, [dispatch, getMasterOrderHistory, page]);\n\n  // SESSION\n  const getCurrentSessionByLocalTime = useCallback(() => {\n    // GET START SESSION AND CONSTANTS\n    const currentSecond = moment().second();\n    const MAXIMUM_SECOND_IN_A_MINUTE = 60;\n    const START_SESSION_SECOND_CONVERTED = +moment(startSession.st_time).format(\n      'ss'\n    );\n\n    const START_SESSION =\n      START_SESSION_SECOND_CONVERTED < 30\n        ? START_SESSION_SECOND_CONVERTED\n        : Math.abs(30 - START_SESSION_SECOND_CONVERTED);\n\n    // RETRIEVE START SESSION TYPE\n    let middleSessionType: string;\n    let notMiddleSessionType: string;\n    if (START_SESSION_SECOND_CONVERTED < 30) {\n      middleSessionType = startSession.ss_t;\n      notMiddleSessionType = SESSION_TYPES.filter(\n        (type) => type !== middleSessionType\n      )[0];\n    } else {\n      middleSessionType = SESSION_TYPES.filter(\n        (type) => type !== startSession.ss_t\n      )[0];\n      notMiddleSessionType = startSession.ss_t;\n    }\n\n    // const START_SESSION =\n    //   START_SESSION_TRADE < 30\n    //     ? START_SESSION_TRADE\n    //     : Math.abs(30 - START_SESSION_TRADE);\n\n    // 15 <= sess < 45\n    const isInMiddleSession =\n      currentSecond >= START_SESSION &&\n      currentSecond < START_SESSION + TIME_IN_ONE_SESSION;\n\n    // type is TRADE if START < 30 and isInMiddleSession\n    let sessionType = isInMiddleSession\n      ? middleSessionType\n      : notMiddleSessionType;\n    let timeLeft;\n    if (isInMiddleSession) {\n      // 15 <= sess < 45\n      console.log('15 <= sess < 45', currentSecond);\n      timeLeft = START_SESSION + TIME_IN_ONE_SESSION - currentSecond;\n    } else if (currentSecond >= START_SESSION + TIME_IN_ONE_SESSION) {\n      // 45 <= sess < 60\n      console.log('45 <= sess < 60', currentSecond);\n      const START_SESSION_UPPER = START_SESSION + TIME_IN_ONE_SESSION;\n      timeLeft = START_SESSION_UPPER + TIME_IN_ONE_SESSION - currentSecond;\n    } else {\n      // 0 <= sess < 15\n      console.log('0 <= sess < 15', currentSecond);\n      // In this case: START_SESSION = END_LOWER_SESSION\n      const END_LOWER_SESSION = START_SESSION;\n      timeLeft = END_LOWER_SESSION - currentSecond;\n    }\n    // UPDATE SESSION ID\n    const isStartSession = currentSecond === START_SESSION;\n    const endSessionSecond =\n      START_SESSION + TIME_IN_ONE_SESSION === MAXIMUM_SECOND_IN_A_MINUTE\n        ? 0\n        : START_SESSION + TIME_IN_ONE_SESSION;\n    const isEndSession = currentSecond === endSessionSecond;\n    if ((isStartSession || isEndSession) && sessionId !== 0) {\n      setSessionId((prev) => prev + 1);\n    }\n    // GET PARTNER BOT AFTER END WAIT SESSION\n    if (isEndSession && sessionId !== 0) {\n      updateOrderHistory();\n    }\n    setSessionLocal({\n      r_second: timeLeft,\n      ss_t: sessionType,\n    });\n  }, [updateOrderHistory, sessionId, startSession.ss_t, startSession.st_time]);\n\n  const deleteHistoryByListIds = () => {\n    // ENTRY: string: boolean\n    const selectedListIds = Object.entries(selectedIds)\n      .filter((selected) => selected[1])\n      .map((selected) => selected[0]);\n    console.log('selectedListIds:', selectedListIds);\n    axios\n      .delete(`${APIs.deleteMasterOrderByIds}${selectedListIds}`)\n      .then((res) => {\n        getMasterOrderHistory(page + 1);\n        setSelectAll(0);\n        setSelectedIds({});\n        enqueueSnackbar('Xoá cấu hình thành công!', { variant: 'success' });\n      })\n      .catch(() => {\n        enqueueSnackbar('Xoá cấu hình thất bại!', { variant: 'error' });\n      });\n  };\n\n  // PAGINATION FUNCTION\n  const handleSelectPageSize = (\n    option: SingleValue<InputSelectOption>,\n    actionMeta: ActionMeta<InputSelectOption>\n  ) => {\n    if (option != null) {\n      setSelectedPageSizeOption(option);\n      setPage(0);\n      getMasterOrderHistory(1);\n    }\n  };\n\n  const handlePageChange = useCallback(\n    ({ selected }: { selected: number }) => {\n      console.log(selected);\n      const page = selected + 1;\n      setPage(selected);\n      getMasterOrderHistory(page);\n    },\n    [getMasterOrderHistory]\n  );\n\n  const columns = React.useMemo<Column<CopyTradeMasterOrderHistoryResult>[]>(\n    () => [\n      {\n        id: 'checkbox',\n        accessor: 'checkbox',\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          console.log(selectedIds);\n          console.log(original.id);\n          return (\n            <div className=\"flex justify-center items-center\">\n              <input\n                type=\"checkbox\"\n                className=\"checkbox\"\n                checked={selectedIds[original.id] === true}\n                onChange={(e) => toggleRow(original.id)}\n              />\n            </div>\n          );\n        },\n        Header: () => {\n          return (\n            <div className=\"flex justify-center items-center\">\n              <input\n                type=\"checkbox\"\n                className=\"checkbox text-center\"\n                checked={selectAll === 1}\n                ref={(input) => {\n                  if (input) {\n                    input.indeterminate = selectAll === 2;\n                  }\n                }}\n                onChange={() => toggleAllRow()}\n              />\n            </div>\n          );\n        },\n        sortable: false,\n        width: 45,\n      },\n      {\n        Header: () => {\n          return <div className=\"text-left\">Mã phiên</div>;\n        },\n        accessor: 'ss_id',\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          return (\n            <div className=\"flex\">\n              <p>{original.ss_id}</p>\n            </div>\n          );\n        },\n      },\n      {\n        Header: () => {\n          return <div className=\"text-left\">Thời gian</div>;\n        },\n        accessor: 'o_time',\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          const convertedMoment = moment\n            .unix(original.o_time / 1000)\n            .format('DD/MM/YYYY HH:mm');\n          return <p>{convertedMoment}</p>;\n        },\n      },\n      {\n        Header: () => {\n          return <div className=\"text-center\">S.Lượng Copy Trade</div>;\n        },\n        accessor: 'copy_trade_follower_amount',\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          // const\n          return (\n            <div className=\"flex items-center justify-center\">\n              <p className=\"px-2 leading-5 rounded-3xl bg-indigo-100 text-xs text-ink-100\">\n                {original.total_followtrade}/{original.total_follow} người\n              </p>\n            </div>\n          );\n        },\n      },\n      {\n        Header: () => <div className=\"text-center\">Lệnh vào</div>,\n        accessor: 'o_type',\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          const imageOrderType =\n            original.o_type === 'BUY' ? images.table.buy : images.table.sell;\n          return (\n            <div className=\"text-center\">\n              <img\n                className=\"w-[1.5rem] mx-auto\"\n                alt=\"BotLambotrade\"\n                src={imageOrderType}\n              />\n            </div>\n          );\n        },\n      },\n      {\n        Header: () => <div className=\"text-center\">Kết quả</div>,\n        accessor: 'o_result',\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          const isWinning = original.o_result === 1;\n          const isLosing = original.o_result === -1;\n          const isPending =\n            original.o_result === 0 || original.o_result == null;\n          const isDraw = original.o_result === 0;\n          const isFinished = original.o_status === 'FINISHED';\n          let imageOrderType = <></>;\n          if (isWinning) {\n            if (original.o_type === 'BUY') {\n              imageOrderType = (\n                <img\n                  className=\"w-[1.5rem] mx-auto\"\n                  alt=\"BotLambotrade\"\n                  src={images.table.buy}\n                />\n              );\n            } else if (original.o_type === 'SELL') {\n              imageOrderType = (\n                <img\n                  className=\"w-[1.5rem] mx-auto\"\n                  alt=\"BotLambotrade\"\n                  src={images.table.sell}\n                />\n              );\n            }\n          } else if (isLosing) {\n            if (original.o_type === 'BUY') {\n              imageOrderType = (\n                <img\n                  className=\"w-[1.5rem] mx-auto\"\n                  alt=\"BotLambotrade\"\n                  src={images.table.sell}\n                />\n              );\n            } else if (original.o_type === 'SELL') {\n              imageOrderType = (\n                <img\n                  className=\"w-[1.5rem] mx-auto\"\n                  alt=\"BotLambotrade\"\n                  src={images.table.buy}\n                />\n              );\n            }\n          } else if (isDraw && isFinished) {\n            imageOrderType = (\n              <img\n                className=\"w-[1.5rem] mx-auto\"\n                alt=\"BotLambotrade\"\n                src={images.table.draw}\n              />\n            );\n          } else if (isPending) {\n            imageOrderType = (\n              <p className=\"bg-primary-100 bg-clip-text text-transparent\">\n                ...\n              </p>\n            );\n          }\n          return <div className=\"text-center\">{imageOrderType}</div>;\n        },\n      },\n      {\n        Header: 'HS. Gấp lệnh',\n        accessor: 'o_fold',\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          return (\n            <div className=\"flex justify-center items-center\">\n              <p className=\"px-2 leading-5 bg-orange-100 rounded-3xl text-ink-100 text-xs\">\n                X{original.o_fold?.toLocaleString('en-US', options)}\n              </p>\n            </div>\n          );\n        },\n      },\n    ],\n    [selectAll, selectedIds, toggleAllRow, toggleRow]\n  );\n\n  const tableInstance = useTable({ columns, data });\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    tableInstance;\n\n  const showIsDevelopingModal = () => {\n    dispatch(uiActions.updateIsModalOpen(true));\n  };\n\n  // INTERVAL GET CURRENT SESSION BY LOCAL TIME\n  useEffect(() => {\n    if (!isInitialized) {\n      getCurrentSession();\n      setIsInitialized(true);\n    }\n    const intervalId = setInterval(() => {\n      getCurrentSessionByLocalTime();\n    }, 1000);\n\n    return () => clearInterval(intervalId);\n  }, [getCurrentSession, getCurrentSessionByLocalTime, isInitialized]);\n\n  // TIME OUT 3 MINS FOR GET CURRENT SESSION\n  useEffect(() => {\n    const threeMins = 180000;\n    const interval = setInterval(() => {\n      getCurrentSession();\n    }, threeMins);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [getCurrentSession]);\n\n  // useEffect(() => {\n  //   if (!isInitialized && botHistory.results.length > 0) {\n  //     setPartnerBotId(data[0].o_PartnerAcc_owner);\n  //     setIsInitialized(true);\n  //   }\n  // }, [botHistory.results.length, data, isInitialized]);\n\n  // GET ALL MASTER HISTORY\n  useEffect(() => {\n    getMasterOrderHistory(page + 1);\n  }, [getMasterOrderHistory, page]);\n\n  return (\n    <>\n      <div className=\"h-fit mb-6 bg-background-80 rounded-3xl\">\n        <div className=\"flex px-6 pt-2 border-b border-ink-10\">\n          <div\n            className={`relative py-4 px-6 cursor-pointer ${\n              !isMaster ? 'border-bottom-primary' : ''\n            }`}\n            onClick={() => {\n              setIsMaster(false);\n              setSelectAll(0);\n              setSelectedIds({});\n            }}\n          >\n            <p\n              className={`${\n                !isMaster\n                  ? 'bg-primary-100 bg-clip-text text-transparent font-semibold'\n                  : 'text-ink-60'\n              } text-sm whitespace-nowrap`}\n            >\n              Trade cá nhân\n            </p>\n          </div>\n          <div\n            className={`relative py-4 px-6 cursor-pointer ${\n              isMaster ? 'border-bottom-primary' : ''\n            }`}\n            onClick={() => {\n              setIsMaster(true);\n              setSelectAll(0);\n              setSelectedIds({});\n            }}\n          >\n            <p\n              className={`${\n                isMaster\n                  ? 'bg-primary-100 bg-clip-text text-transparent font-semibold'\n                  : 'text-ink-60'\n              } text-sm whitespace-nowrap`}\n            >\n              Trade chuyên gia\n            </p>\n          </div>\n        </div>\n\n        {botHistory.results.length === 0 && (\n          <div className=\"py-[5rem] flex flex-col justify-center items-center gap-y-6\">\n            <img\n              className=\"w-[10.25rem]\"\n              src={images.copy.masterEmpty}\n              alt=\"BotLambotrade\"\n            />\n            <p className=\"text-ink-60\">Lịch sử trade chuyên gia trống</p>\n          </div>\n        )}\n\n        {botHistory.results.length > 0 && (\n          <div className=\"p-6 flex flex-col gap-y-6\">\n            {/* SEARCH */}\n            <div>\n              <SearchInput\n                inputName=\"search\"\n                inputClassName=\"w-full md:w-[21.375rem]\"\n                searchInput={searchInput}\n                setSearchInput={setSearchInput}\n              />\n            </div>\n\n            {/* SELECTED CHECKBOX */}\n            {Object.values(selectedIds).filter((value) => value === true)\n              .length > 0 && (\n              <div className=\"px-4 py-3 bg-ink-05 rounded-xl flex justify-between items-center\">\n                <p className=\"text-ink-100 font-semibold\">\n                  {`Đã chọn ${\n                    Object.values(selectedIds).filter((value) => value === true)\n                      .length\n                  }`}\n                </p>\n                <button\n                  className=\"px-8 py-3 bg-primary-100 rounded-xl\"\n                  onClick={() => {\n                    // showIsDevelopingModal();\n                    handleOpenPopupModal();\n                  }}\n                >\n                  <p className=\"bg-background-100 bg-clip-text text-transparent font-semibold\">\n                    Xoá\n                  </p>\n                </button>\n              </div>\n            )}\n\n            {/* TABLE */}\n            <div>\n              <div\n                className={`border border-ink-05 rounded-2xl w-full ${\n                  !isDesktop ? 'overflow-x-scroll' : ''\n                }`}\n              >\n                <table className=\"w-full\" {...getTableProps()}>\n                  <thead>\n                    {headerGroups.map((headerGroup) => (\n                      <tr {...headerGroup.getHeaderGroupProps()}>\n                        {headerGroup.headers.map((column) => (\n                          <th\n                            className={`p-4 bg-primary-05 first-of-type:rounded-tl-2xl last-of-type:rounded-tr-2xl text-sm text-ink-100 font-normal whitespace-nowrap text-ellipsis`}\n                            {...column.getHeaderProps()}\n                          >\n                            {column.render('Header')}\n                          </th>\n                        ))}\n                      </tr>\n                    ))}\n                  </thead>\n                  <tbody {...getTableBodyProps()}>\n                    {rows.map((row) => {\n                      prepareRow(row);\n                      return (\n                        <tr\n                          className={`border-b border-ink-10 last:border-0 whitespace-nowrap text-ellipsis`}\n                          {...row.getRowProps()}\n                        >\n                          {row.cells.map((cell) => (\n                            <td\n                              className=\"p-4 text-sm\"\n                              {...cell.getCellProps()}\n                            >\n                              {cell.render('Cell')}\n                            </td>\n                          ))}\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n\n            {/* PAGINATION */}\n            <div\n              className={`flex flex-col justify-center items-end md:flex-row md:justify-end md:items-center gap-2`}\n            >\n              <div>\n                <SelectInput\n                  menuRef={menuRef}\n                  value={selectedPageSizeOption}\n                  onChange={handleSelectPageSize}\n                  inputClassName=\"!py-2 !pr-8 text-sm\"\n                  indicatorContainerClassName=\"!right-3\"\n                  indicatorContainerIconClassName=\"!w-[1rem]\"\n                  menuPortalClassName={`min-w-[10.25rem] ${\n                    isMobile ? 'translate-x-[-3.2rem]' : ''\n                  }`}\n                  name=\"select\"\n                  options={PAGE_SIZE_OPTIONS}\n                />\n              </div>\n\n              <ReactPaginate\n                breakLabel=\"...\"\n                onPageChange={handlePageChange}\n                marginPagesDisplayed={isMobile ? 2 : 3}\n                pageCount={totalPages}\n                previousLabel={\n                  <div\n                    onMouseLeave={() => {\n                      setIsPrevHover(false);\n                    }}\n                    onMouseEnter={() => {\n                      setIsPrevHover(true);\n                    }}\n                    className=\"p-[0.375rem] border-input-ink before:rounded-lg\"\n                  >\n                    {isPrevHover ? (\n                      <img\n                        className=\"w-[1.25rem]\"\n                        src={images.table.pagination_left_arrow_gold}\n                        alt=\"BotLambotrade\"\n                      />\n                    ) : (\n                      // <KeyboardArrowLeft sx={{ fill: 'var(--color-ink-80)' }} />\n                      <img\n                        className=\"w-[1.25rem]\"\n                        src={images.table.pagination_left_arrow}\n                        alt=\"BotLambotrade\"\n                      />\n                    )}\n                  </div>\n                }\n                nextLabel={\n                  <div\n                    onMouseLeave={() => {\n                      setIsNextHover(false);\n                    }}\n                    onMouseEnter={() => {\n                      setIsNextHover(true);\n                    }}\n                    className=\"p-[0.375rem] border-input-ink before:rounded-lg\"\n                  >\n                    {/* <KeyboardArrowRight sx={{ fill: 'var(--color-ink-80)' }} /> */}\n                    {isNextHover ? (\n                      <img\n                        className=\"w-[1.25rem]\"\n                        src={images.table.pagination_right_arrow_gold}\n                        alt=\"BotLambotrade\"\n                      />\n                    ) : (\n                      <img\n                        className=\"w-[1.25rem]\"\n                        src={images.table.pagination_right_arrow}\n                        alt=\"BotLambotrade\"\n                      />\n                    )}\n                  </div>\n                }\n                forcePage={page}\n                pageClassName=\"page-item\"\n                pageLinkClassName=\"page-link relative z-10 py-[0.3125rem] px-3 border-input-ink before:rounded-lg cursor-pointer\"\n                previousClassName=\"page-item flex\"\n                previousLinkClassName=\"page-link\"\n                nextClassName=\"page-item flex\"\n                nextLinkClassName=\"page-link relative z-10\"\n                breakClassName=\"page-item py-[0.375rem] px-3 border-input-ink before:rounded-lg cursor-pointer\"\n                breakLinkClassName=\"page-link z-10\"\n                containerClassName=\"flex items-center gap-x-2 text-ink-80 text-sm\"\n                activeClassName=\"pagination-active border-primary before:rounded-lg\"\n              />\n            </div>\n          </div>\n        )}\n      </div>\n\n      <CustomModal\n        isOpen={isPopupOpen}\n        handleOpen={handleOpenPopupModal}\n        handleClose={handleClosePopupModal}\n      >\n        <div\n          className={`absolute left-[50%] top-[50%] translate-x-[-50%] translate-y-[-50%] p-6 md:w-[31.25rem] w-[calc(100vw-2rem)] bg-background-80 rounded-3xl text-center`}\n        >\n          <div className=\"flex items-center justify-center\">\n            <img\n              className=\"mb-4 w-[5.5rem]\"\n              src={images.copy.delete}\n              alt=\"BotLambotrade\"\n            />\n          </div>\n          <h3 className=\"mb-2 mx-auto max-w-[18.75rem] text-xl text-ink-100\">\n            Xoá lịch sử trade chuyên gia\n          </h3>\n          <p className=\"mb-12 mx-auto max-w-[18.75rem] text-ink-80\">\n            Bạn có chắc chắn muốn xoá lịch sử trade chuyên gia không?\n          </p>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 justify-center items-center gap-4\">\n            <GreyButton onClick={handleClosePopupModal}>Huỷ</GreyButton>\n            <GoldButton\n              onClick={() => {\n                deleteHistoryByListIds();\n                handleClosePopupModal();\n              }}\n            >\n              Xoá\n            </GoldButton>\n          </div>\n        </div>\n      </CustomModal>\n    </>\n  );\n};\n\nexport default CopyTradeHistoryManualMaster;\n","import images from 'assets';\nimport React, { FC, useCallback, useEffect, useRef, useState } from 'react';\nimport { faker } from '@faker-js/faker';\nimport { Column, useTable } from 'react-table';\nimport SearchInput from 'components/SearchInput';\nimport CopyTradeOrderHistory, {\n  CopyTradeOrderHistoryResult,\n} from 'types/CopyTradeOrderHistory';\nimport APIs from 'apis';\nimport axios from 'axios';\nimport { uiActions } from 'stores/uiSlice';\nimport { useAppDispatch } from 'stores/hooks';\nimport ICurrentSession, {\n  ISession,\n  ISessionLocal,\n} from 'types/ICurrentSession';\nimport moment from 'moment';\nimport { useEnqueueSnackbar } from 'hooks/useEnqueueSnackbar';\nimport CustomModal from 'components/CustomModal';\nimport GreyButton from 'components/GreyButton';\nimport GoldButton from 'components/GoldButton';\nimport useWindowFocus from 'hooks/useWindowFocus';\nimport ReactPaginate from 'react-paginate';\nimport SelectInput from 'components/SelectInput';\nimport InputSelectOption from 'types/InputSelectOption';\nimport { ActionMeta, SingleValue } from 'react-select';\nimport { useMediaQuery } from 'react-responsive';\n\nconst BASE_RATE = 0.95;\n\nconst PAGE_SIZE_OPTIONS: InputSelectOption[] = [\n  { value: 10, label: '10/page' },\n  { value: 20, label: '20/page' },\n  { value: 30, label: '30/page' },\n  { value: 40, label: '40/page' },\n];\n\ntype CopyTradeHistorySelfProps = {\n  isMaster: boolean;\n  setIsMaster: React.Dispatch<React.SetStateAction<boolean>>;\n  searchInput: string;\n  setSearchInput: React.Dispatch<React.SetStateAction<string>>;\n};\n\ntype SelectedIdsType = {\n  [key: string]: boolean;\n};\n\nconst TIME_IN_ONE_SESSION = 30;\n\nconst SESSION_TYPES = ['WAIT', 'TRADE'];\n\nconst options: Intl.NumberFormatOptions = {\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 3,\n  style: 'decimal',\n};\n\nconst CopyTradeHistorySelf: FC<CopyTradeHistorySelfProps> = ({\n  isMaster,\n  setIsMaster,\n  searchInput,\n  setSearchInput,\n}) => {\n  const [selectedIds, setSelectedIds] = useState<SelectedIdsType>({});\n  const [selectAll, setSelectAll] = useState(0);\n  const [botHistory, setBotHistory] = useState<CopyTradeOrderHistory>({\n    count: 0,\n    next: null,\n    previous: null,\n    results: [],\n  });\n\n  // const [partnerBotId, setPartnerBotId] = useState(0);\n\n  // SESSION\n  const [sessionLocal, setSessionLocal] = useState<ISessionLocal>({\n    ss_t: '',\n    r_second: 0,\n  });\n  const [sessionId, setSessionId] = useState(0);\n  const [isInitialized, setIsInitialized] = useState(false);\n  const [startSession, setStartSession] = useState<ISession>({\n    ss_id: 0,\n    ss_t: 'WAIT',\n    o_price: 0,\n    c_price: 0,\n    r_second: 0,\n    st_time: moment().format('YYYY-MM-DDTHH:mm:ss.SSSS'),\n  });\n\n  // MODAL\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n\n  // PAGINATION\n  const [selectedPageSizeOption, setSelectedPageSizeOption] =\n    useState<InputSelectOption>(PAGE_SIZE_OPTIONS[0]);\n  const [page, setPage] = useState(0);\n  const [totalPages, setTotalPages] = useState(10);\n  const menuRef = useRef<HTMLDivElement>(null);\n  const [isPrevHover, setIsPrevHover] = useState(false);\n  const [isNextHover, setIsNextHover] = useState(false);\n\n  // RESPONSIVE\n  const isDesktop = useMediaQuery({\n    query: '(min-width: 1224px)',\n  });\n  const isTablet = useMediaQuery({\n    query: '(min-width: 768px)',\n  });\n  const isMobile = useMediaQuery({\n    query: '(max-width: 767px)',\n  });\n\n  // HOOKS\n  const dispatch = useAppDispatch();\n  const enqueueSnackbar = useEnqueueSnackbar();\n\n  const data = React.useMemo<CopyTradeOrderHistoryResult[]>(\n    () => botHistory.results,\n    [botHistory]\n  );\n\n  // MODAL FUNCTION\n  const handleOpenPopupModal = () => {\n    setIsPopupOpen(true);\n  };\n\n  const handleClosePopupModal = () => {\n    setIsPopupOpen(false);\n  };\n\n  // CHECKBOX FUNCTION\n  const toggleRow = useCallback(\n    (id: number | string) => {\n      const newSelected = { ...selectedIds };\n      newSelected[id] = !newSelected[id];\n      console.log(newSelected);\n      setSelectedIds(newSelected);\n      const totalSelected = Object.entries(newSelected).reduce(\n        (prev, value) => {\n          if (value[1]) return prev + 1;\n          return prev;\n        },\n        0\n      );\n      if (totalSelected >= data.length) {\n        setSelectAll(1);\n      } else {\n        setSelectAll(0);\n      }\n    },\n    [data.length, selectedIds]\n  );\n\n  const toggleAllRow = useCallback(() => {\n    let newSelected: SelectedIdsType = {};\n\n    if (selectAll === 0) {\n      data.forEach((x) => {\n        newSelected[x.id] = true;\n      });\n    }\n    setSelectedIds(newSelected);\n    setSelectAll((prev) => (prev === 0 ? 1 : 0));\n  }, [data, selectAll]);\n\n  // FUNCTIONAL REQUIREMENTS\n  const getCurrentSession = useCallback(() => {\n    const noLoadingAxios = axios.create();\n    noLoadingAxios\n      .get(APIs.currentSession)\n      .then((res) => {\n        const data: ICurrentSession = res.data;\n        setSessionId(data.d.ss_id);\n        setStartSession(data.d);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  const getCopyTradeOrderHistory = useCallback(\n    (page: number) => {\n      const noLoadingAxios = axios.create();\n      noLoadingAxios\n        .get(`${APIs.orderCopyTradeList}?page=${page}`)\n        .then((res) => {\n          const data: CopyTradeOrderHistory = res.data;\n          setBotHistory(data);\n          if (data.count != null && selectedPageSizeOption.value != null) {\n            setTotalPages(\n              Math.ceil(data.count / +selectedPageSizeOption.value)\n            );\n          }\n        })\n        .catch(() => {\n          enqueueSnackbar('Không thể lấy lịch sử giao dịch!', {\n            variant: 'error',\n          });\n        });\n    },\n    [enqueueSnackbar, selectedPageSizeOption.value]\n  );\n\n  const updateOrderHistory = useCallback(() => {\n    const noLoadingAxios = axios.create();\n    noLoadingAxios\n      .get(`${APIs.updateOrderListById}`)\n      .then((res) => {\n        getCopyTradeOrderHistory(page + 1);\n      })\n      .catch(() => {\n        const notification = {\n          id: Math.floor(Math.random() * 101 + 1),\n          title: 'Thất bại',\n          description: 'Không thể lấy lịch sử giao dịch!',\n          backgroundColor: 'text-red-100',\n          icon: images.toast.error,\n        };\n        dispatch(uiActions.showNotifications(notification));\n      });\n  }, [dispatch, getCopyTradeOrderHistory, page]);\n\n  // SESSION\n  const getCurrentSessionByLocalTime = useCallback(() => {\n    // GET START SESSION AND CONSTANTS\n    const currentSecond = moment().second();\n    const MAXIMUM_SECOND_IN_A_MINUTE = 60;\n    const START_SESSION_SECOND_CONVERTED = +moment(startSession.st_time).format(\n      'ss'\n    );\n\n    const START_SESSION =\n      START_SESSION_SECOND_CONVERTED < 30\n        ? START_SESSION_SECOND_CONVERTED\n        : Math.abs(30 - START_SESSION_SECOND_CONVERTED);\n\n    // RETRIEVE START SESSION TYPE\n    let middleSessionType: string;\n    let notMiddleSessionType: string;\n    if (START_SESSION_SECOND_CONVERTED < 30) {\n      middleSessionType = startSession.ss_t;\n      notMiddleSessionType = SESSION_TYPES.filter(\n        (type) => type !== middleSessionType\n      )[0];\n    } else {\n      middleSessionType = SESSION_TYPES.filter(\n        (type) => type !== startSession.ss_t\n      )[0];\n      notMiddleSessionType = startSession.ss_t;\n    }\n\n    // const START_SESSION =\n    //   START_SESSION_TRADE < 30\n    //     ? START_SESSION_TRADE\n    //     : Math.abs(30 - START_SESSION_TRADE);\n\n    // 15 <= sess < 45\n    const isInMiddleSession =\n      currentSecond >= START_SESSION &&\n      currentSecond < START_SESSION + TIME_IN_ONE_SESSION;\n\n    // type is TRADE if START < 30 and isInMiddleSession\n    let sessionType = isInMiddleSession\n      ? middleSessionType\n      : notMiddleSessionType;\n    let timeLeft;\n    if (isInMiddleSession) {\n      // 15 <= sess < 45\n      console.log('15 <= sess < 45', currentSecond);\n      timeLeft = START_SESSION + TIME_IN_ONE_SESSION - currentSecond;\n    } else if (currentSecond >= START_SESSION + TIME_IN_ONE_SESSION) {\n      // 45 <= sess < 60\n      console.log('45 <= sess < 60', currentSecond);\n      const START_SESSION_UPPER = START_SESSION + TIME_IN_ONE_SESSION;\n      timeLeft = START_SESSION_UPPER + TIME_IN_ONE_SESSION - currentSecond;\n    } else {\n      // 0 <= sess < 15\n      console.log('0 <= sess < 15', currentSecond);\n      // In this case: START_SESSION = END_LOWER_SESSION\n      const END_LOWER_SESSION = START_SESSION;\n      timeLeft = END_LOWER_SESSION - currentSecond;\n    }\n    // UPDATE SESSION ID\n    const isStartSession = currentSecond === START_SESSION;\n    const endSessionSecond =\n      START_SESSION + TIME_IN_ONE_SESSION === MAXIMUM_SECOND_IN_A_MINUTE\n        ? 0\n        : START_SESSION + TIME_IN_ONE_SESSION;\n    const isEndSession = currentSecond === endSessionSecond;\n    if ((isStartSession || isEndSession) && sessionId !== 0) {\n      setSessionId((prev) => prev + 1);\n    }\n    // GET PARTNER BOT AFTER END WAIT SESSION\n    if (isEndSession && sessionId !== 0) {\n      updateOrderHistory();\n    }\n    setSessionLocal({\n      r_second: timeLeft,\n      ss_t: sessionType,\n    });\n  }, [updateOrderHistory, sessionId, startSession.ss_t, startSession.st_time]);\n\n  const deleteHistoryByListIds = () => {\n    // ENTRY: string: boolean\n    const selectedListIds = Object.entries(selectedIds)\n      .filter((selected) => selected[1])\n      .map((selected) => selected[0]);\n    console.log('selectedListIds:', selectedListIds);\n    axios\n      .delete(`${APIs.deleteOrderByIds}${selectedListIds}`)\n      .then((res) => {\n        getCopyTradeOrderHistory(page + 1);\n        setSelectAll(0);\n        setSelectedIds({});\n        enqueueSnackbar('Xoá cấu hình thành công!', { variant: 'success' });\n      })\n      .catch(() => {\n        enqueueSnackbar('Xoá cấu hình thất bại!', { variant: 'error' });\n      });\n  };\n\n  // PAGINATION FUNCTION\n  const handleSelectPageSize = (\n    option: SingleValue<InputSelectOption>,\n    actionMeta: ActionMeta<InputSelectOption>\n  ) => {\n    if (option != null) {\n      setSelectedPageSizeOption(option);\n      setPage(0);\n      getCopyTradeOrderHistory(1);\n    }\n  };\n\n  const handlePageChange = useCallback(\n    ({ selected }: { selected: number }) => {\n      console.log(selected);\n      const page = selected + 1;\n      setPage(selected);\n      getCopyTradeOrderHistory(page);\n    },\n    [getCopyTradeOrderHistory]\n  );\n\n  const columns = React.useMemo<Column<CopyTradeOrderHistoryResult>[]>(\n    () => [\n      {\n        id: 'checkbox',\n        accessor: 'checkbox',\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          // console.log(selected);\n          // console.log(original.id);\n          return (\n            <div className=\"flex justify-center items-center\">\n              <input\n                type=\"checkbox\"\n                className=\"checkbox\"\n                checked={selectedIds[original.id] === true}\n                onChange={(e) => toggleRow(original.id)}\n              />\n            </div>\n          );\n        },\n        Header: () => {\n          return (\n            <div className=\"flex justify-center items-center\">\n              <input\n                type=\"checkbox\"\n                className=\"checkbox text-center\"\n                checked={selectAll === 1}\n                ref={(input) => {\n                  if (input) {\n                    input.indeterminate = selectAll === 2;\n                  }\n                }}\n                onChange={() => toggleAllRow()}\n              />\n            </div>\n          );\n        },\n        sortable: false,\n        width: 45,\n      },\n      {\n        Header: () => {\n          return <div className=\"text-left\">Mã phiên</div>;\n        },\n        accessor: 'ss_id',\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          return (\n            <div className=\"flex\">\n              <p>{original.ss_id}</p>\n            </div>\n          );\n        },\n      },\n      {\n        Header: () => {\n          return <div className=\"text-left\">Thời gian</div>;\n        },\n        accessor: 'o_time',\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          const convertedMoment = moment\n            .unix(original.o_time / 1000)\n            .format('DD/MM/YYYY HH:mm');\n          return <p>{convertedMoment}</p>;\n        },\n      },\n      {\n        Header: () => {\n          return <div className=\"text-left\">Chuyên gia</div>;\n        },\n        accessor: 'master_name',\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          return (\n            <div className=\"flex items-center gap-x-1\">\n              {/* <img\n                className=\"w-[1.5rem] rounded-lg\"\n                src={faker.image.people(undefined, undefined, true)}\n                alt=\"BotLambotrade\"\n              /> */}\n              <p>{original.master_name}</p>\n            </div>\n          );\n        },\n      },\n      {\n        Header: () => {\n          return <div className=\"text-center\">Loại tài khoản</div>;\n        },\n        accessor: 'account_type',\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          const isDemoAccount = original.account_type === 'DEMO';\n          // const isDemoAccount = false;\n          return (\n            <div className=\"flex justify-center gap-x-1\">\n              {/* <p>{original.account_type}</p> */}\n              <p\n                className={`px-2 ${\n                  isDemoAccount ? 'bg-blue-80' : 'bg-purple-100'\n                } rounded-3xl text-ink-100 text-xs`}\n              >\n                {original.account_type}\n                {/* LIVE */}\n              </p>\n            </div>\n          );\n        },\n      },\n      {\n        Header: () => <div className=\"text-center\">Lệnh vào</div>,\n        accessor: 'o_type',\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          const imageOrderType =\n            original.o_type === 'BUY' ? images.table.buy : images.table.sell;\n          return (\n            <div className=\"text-center\">\n              <img\n                className=\"w-[1.5rem] mx-auto\"\n                alt=\"BotLambotrade\"\n                src={imageOrderType}\n              />\n            </div>\n          );\n        },\n      },\n      {\n        Header: () => <div className=\"text-center\">Kết quả</div>,\n        accessor: 'o_result',\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          const isWinning = original.o_result === 1;\n          const isLosing = original.o_result === -1;\n          const isPending =\n            original.o_result === 0 || original.o_result == null;\n          const isDraw = original.o_result === 0;\n          const isFinished = original.o_status === 'FINISHED';\n          let imageOrderType = <></>;\n          if (isWinning) {\n            if (original.o_type === 'BUY') {\n              imageOrderType = (\n                <img\n                  className=\"w-[1.5rem] mx-auto\"\n                  alt=\"BotLambotrade\"\n                  src={images.table.buy}\n                />\n              );\n            } else if (original.o_type === 'SELL') {\n              imageOrderType = (\n                <img\n                  className=\"w-[1.5rem] mx-auto\"\n                  alt=\"BotLambotrade\"\n                  src={images.table.sell}\n                />\n              );\n            }\n          } else if (isLosing) {\n            if (original.o_type === 'BUY') {\n              imageOrderType = (\n                <img\n                  className=\"w-[1.5rem] mx-auto\"\n                  alt=\"BotLambotrade\"\n                  src={images.table.sell}\n                />\n              );\n            } else if (original.o_type === 'SELL') {\n              imageOrderType = (\n                <img\n                  className=\"w-[1.5rem] mx-auto\"\n                  alt=\"BotLambotrade\"\n                  src={images.table.buy}\n                />\n              );\n            }\n          } else if (isDraw && isFinished) {\n            imageOrderType = (\n              <img\n                className=\"w-[1.5rem] mx-auto\"\n                alt=\"BotLambotrade\"\n                src={images.table.draw}\n              />\n            );\n          } else if (isPending) {\n            imageOrderType = (\n              <p className=\"bg-primary-100 bg-clip-text text-transparent\">\n                ...\n              </p>\n            );\n          }\n          return <div className=\"text-center\">{imageOrderType}</div>;\n        },\n      },\n      // {\n      //   Header: () => <div className=\"text-center\">Kết quả</div>,\n      //   accessor: 'o_result',\n      //   Cell: (props) => {\n      //     const original = props.cell.row.original;\n      //     const isWinning = original.o_result === 1;\n      //     const isLosing = original.o_result === -1;\n      //     const isPending =\n      //       original.o_result === 0 || original.o_result == null;\n      //     const isDraw = original.o_result === 0;\n      //     const isFinished = original.o_status === 'FINISHED';\n      //     return (\n      //       <div className=\"text-center\">\n      //         {isWinning && (\n      //           <img\n      //             className=\"w-[1.5rem] mx-auto\"\n      //             alt=\"BotLambotrade\"\n      //             src={images.table.buy}\n      //           />\n      //         )}\n      //         {isLosing && (\n      //           <img\n      //             className=\"w-[1.5rem] mx-auto\"\n      //             alt=\"BotLambotrade\"\n      //             src={images.table.sell}\n      //           />\n      //         )}\n      //         {isFinished && isDraw ? (\n      //           <img\n      //             className=\"w-[1.5rem] mx-auto\"\n      //             alt=\"BotLambotrade\"\n      //             src={images.table.draw}\n      //           />\n      //         ) : isPending ? (\n      //           <p className=\"bg-primary-100 bg-clip-text text-transparent\">\n      //             ...\n      //           </p>\n      //         ) : (\n      //           <></>\n      //         )}\n      //       </div>\n      //     );\n      //   },\n      // },\n      {\n        Header: () => <div className=\"text-end\">Giá trị lệnh</div>,\n        accessor: 'o_amount',\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          return (\n            <div className=\"text-end\">\n              <span className=\"bg-primary-100 bg-clip-text text-transparent text-sm font-bold\">\n                ${original.o_amount?.toLocaleString('en-US', options)}\n              </span>\n            </div>\n          );\n        },\n      },\n      {\n        Header: () => <div className=\"text-end\">Thanh toán</div>,\n        accessor: 'output',\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          const isWinning = original.o_result === 1;\n          const isLosing = original.o_result === -1;\n          const isPending =\n            original.o_result === 0 || original.o_result == null;\n          const isDraw = original.o_result === 0;\n          const isFinished = original.o_status === 'FINISHED';\n          return (\n            <div className=\"text-end\">\n              {isWinning && (\n                <span className=\"text-green-100 rounded-3xl text-sm font-bold\">\n                  +$\n                  {(original.o_amount * BASE_RATE).toLocaleString(\n                    'en-US',\n                    options\n                  )}\n                </span>\n              )}\n              {isLosing && (\n                <span className=\"text-red-100 rounded-3xl text-sm font-bold\">\n                  -$\n                  {original.o_amount.toLocaleString('en-US', options)}\n                </span>\n              )}\n              {isFinished && isDraw ? (\n                <span className=\"bg-primary-100 bg-clip-text text-transparent rounded-3xl text-sm font-bold\">\n                  ${original.o_amount.toLocaleString('en-US', options)}\n                </span>\n              ) : isPending ? (\n                <span className=\"bg-primary-100 bg-clip-text text-transparent rounded-3xl text-sm font-bold\">\n                  ...\n                </span>\n              ) : (\n                <span className=\"bg-primary-100 bg-clip-text text-transparent rounded-3xl text-sm font-bold\"></span>\n              )}\n            </div>\n          );\n        },\n      },\n    ],\n    [selectAll, selectedIds, toggleAllRow, toggleRow]\n  );\n\n  const tableInstance = useTable({ columns, data });\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    tableInstance;\n\n  const showIsDevelopingModal = () => {\n    dispatch(uiActions.updateIsModalOpen(true));\n  };\n\n  // INTERVAL GET CURRENT SESSION BY LOCAL TIME\n  useEffect(() => {\n    if (!isInitialized) {\n      getCurrentSession();\n      setIsInitialized(true);\n    }\n    const intervalId = setInterval(() => {\n      getCurrentSessionByLocalTime();\n    }, 1000);\n\n    return () => clearInterval(intervalId);\n  }, [getCurrentSession, getCurrentSessionByLocalTime, isInitialized]);\n\n  // TIME OUT 3 MINS FOR GET CURRENT SESSION\n  useEffect(() => {\n    const threeMins = 180000;\n    const interval = setInterval(() => {\n      getCurrentSession();\n    }, threeMins);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [getCurrentSession]);\n\n  // INIT DEFAULT PARTNER BOT ID\n  // useEffect(() => {\n  //   if (!isInitialized && botHistory.results.length > 0) {\n  //     setPartnerBotId(data[0].o_PartnerAcc_owner);\n  //     setIsInitialized(true);\n  //   }\n  // }, [botHistory.results.length, data, isInitialized]);\n\n  // GET ALL COPY TRADE ORDER HISTORY\n  useEffect(() => {\n    getCopyTradeOrderHistory(page + 1);\n  }, [getCopyTradeOrderHistory, page]);\n\n  return (\n    <>\n      <div className=\"h-fit mb-6 bg-background-80 rounded-3xl\">\n        {botHistory.results.length === 0 && (\n          <div className=\"py-[5rem] flex flex-col justify-center items-center gap-y-6\">\n            <img\n              className=\"w-[10.25rem]\"\n              src={images.copy.empty}\n              alt=\"BotLambotrade\"\n            />\n            <p className=\"text-ink-60\">Lịch sử copy trade trống</p>\n          </div>\n        )}\n\n        {botHistory.results.length > 0 && (\n          <div className=\"p-6 flex flex-col gap-y-6\">\n            {/* SEARCH */}\n            <div>\n              <SearchInput\n                inputName=\"search\"\n                inputClassName=\"w-full md:w-[21.375rem]\"\n                searchInput={searchInput}\n                setSearchInput={setSearchInput}\n              />\n            </div>\n\n            {/* SELECTED CHECKBOX */}\n            {Object.values(selectedIds).filter((value) => value === true)\n              .length > 0 && (\n              <div className=\"px-4 py-3 bg-ink-05 rounded-xl flex justify-between items-center\">\n                <p className=\"text-ink-100 font-semibold\">\n                  {`Đã chọn ${\n                    Object.values(selectedIds).filter((value) => value === true)\n                      .length\n                  }`}\n                </p>\n                <button\n                  className=\"px-8 py-3 bg-primary-100 rounded-xl\"\n                  onClick={() => {\n                    // showIsDevelopingModal();\n                    handleOpenPopupModal();\n                  }}\n                >\n                  <p className=\"bg-background-100 bg-clip-text text-transparent font-semibold\">\n                    Xoá\n                  </p>\n                </button>\n              </div>\n            )}\n\n            {/* TABLE */}\n            <div>\n              <div\n                className={`border border-ink-05 rounded-2xl w-full ${\n                  !isDesktop ? 'overflow-x-scroll' : ''\n                }`}\n              >\n                <table className=\"w-full\" {...getTableProps()}>\n                  <thead>\n                    {headerGroups.map((headerGroup) => (\n                      <tr {...headerGroup.getHeaderGroupProps()}>\n                        {headerGroup.headers.map((column) => (\n                          <th\n                            className={`p-4 bg-primary-05 first-of-type:rounded-tl-2xl last-of-type:rounded-tr-2xl text-sm text-ink-100 font-normal whitespace-nowrap text-ellipsis`}\n                            {...column.getHeaderProps()}\n                          >\n                            {column.render('Header')}\n                          </th>\n                        ))}\n                      </tr>\n                    ))}\n                  </thead>\n                  <tbody {...getTableBodyProps()}>\n                    {rows.map((row) => {\n                      prepareRow(row);\n                      return (\n                        <tr\n                          className={`border-b border-ink-10 last:border-0 whitespace-nowrap text-ellipsis`}\n                          {...row.getRowProps()}\n                        >\n                          {row.cells.map((cell) => (\n                            <td\n                              className=\"p-4 text-sm\"\n                              {...cell.getCellProps()}\n                            >\n                              {cell.render('Cell')}\n                            </td>\n                          ))}\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n\n            {/* PAGINATION */}\n            <div\n              className={`flex flex-col justify-center items-end md:flex-row md:justify-end md:items-center gap-2`}\n            >\n              <div>\n                <SelectInput\n                  menuRef={menuRef}\n                  value={selectedPageSizeOption}\n                  onChange={handleSelectPageSize}\n                  inputClassName=\"!py-2 !pr-8 text-sm\"\n                  indicatorContainerClassName=\"!right-3\"\n                  indicatorContainerIconClassName=\"!w-[1rem]\"\n                  menuPortalClassName={`min-w-[10.25rem] ${\n                    isMobile ? 'translate-x-[-3.2rem]' : ''\n                  }`}\n                  name=\"select\"\n                  options={PAGE_SIZE_OPTIONS}\n                />\n              </div>\n\n              <ReactPaginate\n                breakLabel=\"...\"\n                onPageChange={handlePageChange}\n                marginPagesDisplayed={isMobile ? 2 : 3}\n                pageCount={totalPages}\n                previousLabel={\n                  <div\n                    onMouseLeave={() => {\n                      setIsPrevHover(false);\n                    }}\n                    onMouseEnter={() => {\n                      setIsPrevHover(true);\n                    }}\n                    className=\"p-[0.375rem] border-input-ink before:rounded-lg\"\n                  >\n                    {isPrevHover ? (\n                      <img\n                        className=\"w-[1.25rem]\"\n                        src={images.table.pagination_left_arrow_gold}\n                        alt=\"BotLambotrade\"\n                      />\n                    ) : (\n                      // <KeyboardArrowLeft sx={{ fill: 'var(--color-ink-80)' }} />\n                      <img\n                        className=\"w-[1.25rem]\"\n                        src={images.table.pagination_left_arrow}\n                        alt=\"BotLambotrade\"\n                      />\n                    )}\n                  </div>\n                }\n                nextLabel={\n                  <div\n                    onMouseLeave={() => {\n                      setIsNextHover(false);\n                    }}\n                    onMouseEnter={() => {\n                      setIsNextHover(true);\n                    }}\n                    className=\"p-[0.375rem] border-input-ink before:rounded-lg\"\n                  >\n                    {/* <KeyboardArrowRight sx={{ fill: 'var(--color-ink-80)' }} /> */}\n                    {isNextHover ? (\n                      <img\n                        className=\"w-[1.25rem]\"\n                        src={images.table.pagination_right_arrow_gold}\n                        alt=\"BotLambotrade\"\n                      />\n                    ) : (\n                      <img\n                        className=\"w-[1.25rem]\"\n                        src={images.table.pagination_right_arrow}\n                        alt=\"BotLambotrade\"\n                      />\n                    )}\n                  </div>\n                }\n                forcePage={page}\n                pageClassName=\"page-item\"\n                pageLinkClassName=\"page-link relative z-10 py-[0.3125rem] px-3 border-input-ink before:rounded-lg cursor-pointer\"\n                previousClassName=\"page-item flex\"\n                previousLinkClassName=\"page-link\"\n                nextClassName=\"page-item flex\"\n                nextLinkClassName=\"page-link relative z-10\"\n                breakClassName=\"page-item py-[0.375rem] px-3 border-input-ink before:rounded-lg cursor-pointer\"\n                breakLinkClassName=\"page-link z-10\"\n                containerClassName=\"flex items-center gap-x-2 text-ink-80 text-sm\"\n                activeClassName=\"pagination-active border-primary before:rounded-lg\"\n              />\n            </div>\n          </div>\n        )}\n      </div>\n      <CustomModal\n        isOpen={isPopupOpen}\n        handleOpen={handleOpenPopupModal}\n        handleClose={handleClosePopupModal}\n      >\n        <div\n          className={`absolute left-[50%] top-[50%] translate-x-[-50%] translate-y-[-50%] p-6 md:w-[31.25rem] w-[calc(100vw-2rem)] bg-background-80 rounded-3xl text-center`}\n        >\n          <div className=\"flex items-center justify-center\">\n            <img\n              className=\"mb-4 w-[5.5rem]\"\n              src={images.copy.delete}\n              alt=\"BotLambotrade\"\n            />\n          </div>\n          <h3 className=\"mb-2 mx-auto max-w-[18.75rem] text-xl text-ink-100\">\n            Xoá lịch sử Copy Trade\n          </h3>\n          <p className=\"mb-12 mx-auto max-w-[18.75rem] text-ink-80\">\n            Bạn có chắc chắn muốn xoá lịch sử Copy Trade không?\n          </p>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 justify-center items-center gap-4\">\n            <GreyButton onClick={handleClosePopupModal}>Huỷ</GreyButton>\n            <GoldButton\n              onClick={() => {\n                deleteHistoryByListIds();\n                handleClosePopupModal();\n              }}\n            >\n              Xoá\n            </GoldButton>\n          </div>\n        </div>\n      </CustomModal>\n    </>\n  );\n};\n\nexport default CopyTradeHistorySelf;\n","import { useCallback, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport APIs from 'apis';\nimport { useEnqueueSnackbar } from 'hooks/useEnqueueSnackbar';\nimport {\n  AutoBotHistoryTelegramList,\n} from 'types/AutoBotHistoryTelegramList';\nimport { Helmet } from 'react-helmet-async';\nimport CopyTradeHistoryType from './CopyTradeHistoryType';\nimport CopyTradeResultCanvas from './CopyTradeResultCanvas';\nimport CopyTradeHistoryManualSelf from './CopyTradeHistoryManualSelf';\nimport CopyTradeHistoryManualMaster from './CopyTradeHistoryManualMaster';\nimport CopyTradeHistorySelf from './CopyTradeHistorySelf';\n\nconst generateShapes = () => {\n  return [...Array(10)].map((_, i) => ({\n    id: i * Math.random() * 1000,\n    x: i * 24,\n    y: (i % 5) * 24,\n  }));\n};\n\nconst CopyTradeHistory = () => {\n  const [isMaster, setIsMaster] = useState(false);\n  const [isCopyTrade, setIsCopyTrade] = useState(false);\n  const [shapes, setShapes] = useState(generateShapes());\n  const [isFollowing, setIsFollowing] = useState(true);\n  const [searchInput, setSearchInput] = useState('');\n  const [signalGroupedData, setSignalGroupedData] = useState<any>(null);\n  const enqueueSnackbar = useEnqueueSnackbar();\n  const splitSignal = (list: any, size: any) => {\n    let result = [];\n    for (let i = 0; i < list.length; i += size) {\n      let childList = list.slice(i, i + size);\n      result.push(childList);\n    }\n    return result;\n  };\n\n  const getAutoBotOrderHistory = useCallback(\n    () => {\n      const noLoadingAxios = axios.create();\n      noLoadingAxios\n        .get(`${APIs.orderBotListResult}`, {\n          params: {},\n        })\n        .then((res) => {\n          const data: AutoBotHistoryTelegramList = res.data;\n\n          const signalList = data?.results.map((item: any) =>\n            item.o_result === 1 ? true : item.o_result === -1 ? false : null\n          );\n          const _signalGroupedData = splitSignal(signalList, 20);\n          setSignalGroupedData(_signalGroupedData);\n        })\n        .catch(() => {\n          enqueueSnackbar('Không thể lấy lịch sử giao dịch!', {\n            variant: 'error',\n          });\n        });\n    },\n    [enqueueSnackbar]\n  );\n\n  useEffect(() => {\n    const intervalTime = 5000;\n    const interval = setInterval(() => {\n      getAutoBotOrderHistory();\n    }, intervalTime);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [getAutoBotOrderHistory]);\n\n  useEffect(() => {\n    getAutoBotOrderHistory();\n  }, [getAutoBotOrderHistory]);\n\n  return (\n    <>\n      <Helmet>\n        <title>BotLambotrade | Copy Trade</title>\n      </Helmet>\n\n      <CopyTradeHistoryType\n        isCopyTrade={isCopyTrade}\n        setIsCopyTrade={setIsCopyTrade}\n      />\n\n      {/* TRADE THU CONG CA NHAN */}\n      {!isMaster && !isCopyTrade && (\n        <CopyTradeHistoryManualSelf\n          isMaster={isMaster}\n          setIsMaster={setIsMaster}\n          searchInput={searchInput}\n          setSearchInput={setSearchInput}\n        />\n      )}\n\n      {/* TRADE THU CONG CHUYEN GIA */}\n      {isMaster && !isCopyTrade && (\n        <CopyTradeHistoryManualMaster\n          isMaster={isMaster}\n          setIsMaster={setIsMaster}\n          searchInput={searchInput}\n          setSearchInput={setSearchInput}\n        />\n      )}\n\n      {/* COPY TRADE */}\n      {isCopyTrade && (\n        <CopyTradeHistorySelf\n          isMaster={isMaster}\n          setIsMaster={setIsMaster}\n          searchInput={searchInput}\n          setSearchInput={setSearchInput}\n        />\n      )}\n\n      {/* Canvas kết quả  */}\n      <CopyTradeResultCanvas results={signalGroupedData} />\n    </>\n  );\n};\n\nexport default CopyTradeHistory;\n"],"names":["_ref","inputClassName","inputName","searchInput","setSearchInput","_jsxs","children","_jsx","htmlFor","className","fill","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","type","id","name","concat","placeholder","value","onChange","e","target","required","IndicatorsContainer","props","indicatorContainerClassName","indicatorContainerIconClassName","selectProps","components","src","images","alt","IndicatorSeparator","innerProps","_Fragment","MenuList","searchInputIcon","searchInputName","searchInputPlaceHolder","searchInputSymbol","searchInputResetValue","searchInputError","searchInputHelperText","TextInput","searchIcon","symbol","resetValue","error","helperText","Option","isSelected","data","selectOption","useRef","forwardRef","_ref2","ref","label","isLabelOutside","helperTextEnd","fullWidth","options","defaultValue","icon","button","isSelectDisabled","containerClassName","selectContainerClassName","symbolClassName","helperClassName","helperTextClassName","helperTextEndClassName","menuPortalClassName","onBlur","onFocus","onKeyDown","onKeyUp","onMouseOver","onMouseLeave","menuRef","isSelectFocus","setIsSelectFocus","useState","isSelectHover","setIsSelectHover","isPasswordShowing","setIsPasswordShowing","inputRef","inputSpacingWithLabel","onClick","_inputRef$current2","current","focus","stopPropagation","Select","menuPortalTarget","document","body","menuPlacement","classNames","container","state","control","valueContainer","singleValue","menu","menuList","menuPortal","unstyled","isOptionSelected","option","_options$","openMenuOnFocus","actionMeta","isSearchable","isDisabled","prefix","decimalsLimit","decimalScale","fixedDecimalLength","autoComplete","isInputDisabled","searchIconClassName","onValueChange","isInputFocus","setInputFocus","isInputHover","setIsInputHover","passwordType","_inputRef$current3","CurrencyInput","_","values","disabled","allowNegativeValue","disableAbbreviations","decimalSeparator","groupSeparator","maxLength","_inputRef$current4","Cancel","handlePasswordShown","_inputRef$current","prev","ICONS","success","warning","TEXT_COLORS","TITLES","React","message","variant","closeSnackBar","useEnqueueSnackbar","enqueueSnackbar","closeSnackbar","useSnackbar","useCallback","content","key","undefined","CustomSnackbar","handleCloseSnackbar","isCopyTrade","setIsCopyTrade","useMediaQuery","query","isMobile","results","map","resultChild","index","Stage","width","height","Layer","result","Math","random","x","floor","y","Circle","radius","toString","PAGE_SIZE_OPTIONS","TIME_IN_ONE_SESSION","SESSION_TYPES","minimumFractionDigits","maximumFractionDigits","style","isMaster","setIsMaster","selectedIds","setSelectedIds","selectAll","setSelectAll","botHistory","setBotHistory","count","next","previous","partnerBotId","setPartnerBotId","sessionLocal","setSessionLocal","ss_t","r_second","sessionId","setSessionId","isInitialized","setIsInitialized","startSession","setStartSession","ss_id","o_price","c_price","st_time","moment","format","isPopupOpen","setIsPopupOpen","selectedPageSizeOption","setSelectedPageSizeOption","page","setPage","totalPages","setTotalPages","isPrevHover","setIsPrevHover","isNextHover","setIsNextHover","isDesktop","dispatch","useAppDispatch","handleOpenPopupModal","handleClosePopupModal","toggleRow","newSelected","console","log","Object","entries","reduce","length","toggleAllRow","forEach","getCurrentSession","axios","get","APIs","then","res","catch","err","getOrderHistory","params","page_size","ceil","updateOrderHistory","notification","title","description","backgroundColor","uiActions","getCurrentSessionByLocalTime","currentSecond","second","START_SESSION_SECOND_CONVERTED","START_SESSION","abs","middleSessionType","notMiddleSessionType","filter","isInMiddleSession","timeLeft","sessionType","isEndSession","handlePageChange","selected","columns","accessor","Cell","original","cell","row","checked","Header","input","indeterminate","sortable","convertedMoment","o_time","isDemoAccount","account_type","o_PartnerAcc_owner_name","imageOrderType","o_type","isWinning","o_result","isLosing","isPending","isDraw","isFinished","o_status","_original$o_amount","o_amount","toLocaleString","tableInstance","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","useEffect","intervalId","setInterval","clearInterval","interval","o_PartnerAcc_owner","SearchInput","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","getRowProps","cells","getCellProps","SelectInput","handleSelectPageSize","ReactPaginate","breakLabel","onPageChange","marginPagesDisplayed","pageCount","previousLabel","onMouseEnter","nextLabel","forcePage","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","CustomModal","isOpen","handleOpen","handleClose","GreyButton","GoldButton","deleteHistoryByListIds","selectedListIds","getMasterOrderHistory","total_followtrade","total_follow","_original$o_fold","o_fold","pageClassName","getCopyTradeOrderHistory","master_name","CopyTradeHistory","shapes","setShapes","Array","i","isFollowing","setIsFollowing","signalGroupedData","setSignalGroupedData","getAutoBotOrderHistory","_signalGroupedData","splitSignal","list","size","childList","slice","push","item","Helmet","CopyTradeHistoryType","CopyTradeHistoryManualSelf","CopyTradeHistoryManualMaster","CopyTradeHistorySelf","CopyTradeResultCanvas"],"sourceRoot":""}