{"version":3,"file":"static/js/746.d1a67f59.chunk.js","mappings":"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","sources":["svgs/InputClearSvg.tsx","svgs/InputDatePickerSeperatorSvg.tsx","svgs/InputDatePickerSuffixSvg.tsx","components/CustomDatePickerV2/index.tsx","components/CustomInputSpinner/index.tsx","components/CustomRadio/index.tsx","pages/UserManagement/UserHistory.tsx","components/CustomModalTwoButton/index.tsx","pages/UserManagement/UserManagementButton.tsx","pages/UserManagement/UserManagementAdmin.tsx","pages/UserManagement/UserManagementLeader.tsx","components/CustomToggle/index.tsx","pages/UserManagement/UserManagementType.tsx","pages/UserManagement/UserManagementUser.tsx","pages/UserManagement/index.tsx","svgs/TableLeftArrowSvg.tsx","../node_modules/lodash/_baseRandom.js","../node_modules/lodash/_baseTrim.js","../node_modules/lodash/_isIterateeCall.js","../node_modules/lodash/_trimmedEndIndex.js","../node_modules/lodash/random.js","../node_modules/lodash/toFinite.js","../node_modules/lodash/toNumber.js"],"sourcesContent":["import React, { FC } from 'react';\nimport { ISvgIcon } from 'types';\n\nconst InputClearSvg: FC<ISvgIcon> = ({\n  width = '24',\n  height = '24',\n  fill = 'white',\n  fillOpacity = 0.6,\n  className = '',\n}) => {\n  return (\n    <svg\n      width={width}\n      height={height}\n      viewBox=\"0 0 24 24\"\n      fill={fill}\n      className={className}\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22ZM8.19526 15.8047C7.93491 15.5444 7.93491 15.1223 8.19526 14.8619L11.0572 12L8.19526 9.13807C7.93491 8.87772 7.93491 8.45561 8.19526 8.19526C8.45561 7.93491 8.87772 7.93491 9.13807 8.19526L12 11.0572L14.8619 8.19526C15.1223 7.93491 15.5444 7.93491 15.8047 8.19526C16.0651 8.45561 16.0651 8.87772 15.8047 9.13807L12.9428 12L15.8047 14.8619C16.0651 15.1223 16.0651 15.5444 15.8047 15.8047C15.5444 16.0651 15.1223 16.0651 14.8619 15.8047L12 12.9428L9.13807 15.8047C8.87772 16.0651 8.45561 16.0651 8.19526 15.8047Z\"\n        fill={fill}\n        fillOpacity={fillOpacity}\n      />\n    </svg>\n  );\n};\n\nexport default InputClearSvg;\n","import React, { FC } from 'react';\nimport { ISvgIcon } from 'types';\n\nconst InputDatePickerSeperatorSvg: FC<ISvgIcon> = ({\n  width = '24',\n  height = '24',\n  fill = 'white',\n  className = '',\n}) => {\n  return (\n    <svg\n      width={width}\n      height={height}\n      viewBox=\"0 0 24 24\"\n      fill={fill}\n      className={className}\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M16.0032 9.5672C15.6598 9.22373 15.6598 8.66334 16.0032 8.31987C16.1695 8.15356 16.3865 8.0704 16.6251 8.0704C16.8637 8.0704 17.0842 8.16441 17.2506 8.33072L20.3345 11.4147C20.4972 11.5774 20.5912 11.8016 20.5912 12.0329V12.0402C20.5912 12.2679 20.4972 12.4957 20.3345 12.6584L17.2506 15.7424C16.9071 16.0859 16.3467 16.0859 16.0032 15.7424C15.8333 15.5761 15.7429 15.3519 15.7429 15.1169C15.7429 14.8783 15.8369 14.6578 16.0032 14.4915L17.5904 12.9079H4.28554C3.80107 12.9079 3.40698 12.5102 3.40698 12.0257C3.40698 11.5412 3.80107 11.1472 4.28554 11.1472H17.5904L16.0032 9.5672Z\"\n        fill={fill}\n      />\n    </svg>\n  );\n};\n\nexport default InputDatePickerSeperatorSvg;\n","import React, { FC } from 'react';\nimport { ISvgIcon } from 'types';\n\nconst InputDatePickerSuffixSvg: FC<ISvgIcon> = ({\n  width = '24',\n  height = '24',\n  fill = 'white',\n  className = '',\n}) => {\n  return (\n    <svg\n      width={width}\n      height={height}\n      viewBox=\"0 0 24 24\"\n      fill={fill}\n      className={className}\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M17.1138 3.89648C17.1138 3.3442 16.6661 2.89648 16.1138 2.89648C15.5615 2.89648 15.1138 3.3442 15.1138 3.89648L15.1138 6.89648C15.1138 7.44877 15.5615 7.89648 16.1138 7.89648C16.6661 7.89648 17.1138 7.44877 17.1138 6.89648L17.1138 3.89648Z\"\n        fill={fill}\n      />\n      <path\n        d=\"M9.11377 3.89649C9.11377 3.3442 8.66605 2.89649 8.11377 2.89649C7.56148 2.89649 7.11377 3.3442 7.11377 3.89649L7.11377 6.89648C7.11377 7.44877 7.56148 7.89648 8.11377 7.89648C8.66605 7.89648 9.11377 7.44877 9.11377 6.89648L9.11377 3.89649Z\"\n        fill={fill}\n      />\n      <path\n        d=\"M14.1138 4.83252H10.1138L10.1138 6.83252C10.1138 7.93709 9.21834 8.83252 8.11377 8.83252C7.0092 8.83252 6.11377 7.93709 6.11377 6.83252L6.11377 4.92088C5.272 5.02253 4.72327 5.24112 4.25319 5.7112C3.46284 6.50155 3.38339 7.72516 3.3754 10.0215H20.6253C20.6252 7.26179 20.6167 6.58131 19.7466 5.7112C19.2973 5.26191 18.8357 5.04235 18.1138 4.93506L18.1138 6.83252C18.1138 7.93709 17.2183 8.83252 16.1138 8.83252C15.0092 8.83252 14.1138 7.93709 14.1138 6.83252L14.1138 4.83252Z\"\n        fill={fill}\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M20.6253 11.7715H3.37451V15.1036C3.37451 17.932 3.37451 19.3462 4.25319 20.2249C5.13187 21.1036 6.28538 21.1036 9.11381 21.1036H15.1138C17.9422 21.1036 18.8679 21.1036 19.7466 20.2249C20.6253 19.3462 20.6253 17.932 20.6253 15.1036V11.7715ZM6.62451 14.459C6.62451 14.1483 6.87635 13.8965 7.18701 13.8965H8.31201C8.62267 13.8965 8.87451 14.1483 8.87451 14.459V15.584C8.87451 15.8946 8.62267 16.1465 8.31201 16.1465H7.18701C6.87635 16.1465 6.62451 15.8946 6.62451 15.584V14.459ZM11.1245 14.459C11.1245 14.1483 11.3764 13.8965 11.687 13.8965H12.812C13.1227 13.8965 13.3745 14.1483 13.3745 14.459V15.584C13.3745 15.8946 13.1227 16.1465 12.812 16.1465H11.687C11.3764 16.1465 11.1245 15.8946 11.1245 15.584V14.459ZM16.187 13.8965C15.8764 13.8965 15.6245 14.1483 15.6245 14.459V15.584C15.6245 15.8946 15.8764 16.1465 16.187 16.1465H17.312C17.6227 16.1465 17.8745 15.8946 17.8745 15.584V14.459C17.8745 14.1483 17.6227 13.8965 17.312 13.8965H16.187Z\"\n        fill={fill}\n      />\n    </svg>\n  );\n};\n\nexport default InputDatePickerSuffixSvg;\n","import { DatePicker } from \"antd\";\nimport { RangePickerProps } from \"antd/es/date-picker\";\nimport React, { FC } from \"react\";\nimport InputClearSvg from \"svgs/InputClearSvg\";\nimport InputDatePickerSeperatorSvg from \"svgs/InputDatePickerSeperatorSvg\";\nimport InputDatePickerSuffixSvg from \"svgs/InputDatePickerSuffixSvg\";\nimport { twMerge } from \"tailwind-merge\";\nimport \"./CustomRangePickerV2.scss\";\n\nconst dateFormat = \"DD/MM/YYYY\";\n\ninterface CustomRangePickerV2Props {\n  placeholder: [string, string];\n  fullWidth?: boolean;\n  className?: string;\n}\n\nconst CustomRangePickerV2: FC<CustomRangePickerV2Props> = ({\n  placeholder,\n  fullWidth = false,\n  className,\n}) => {\n  const { RangePicker } = DatePicker;\n\n  const onChange: RangePickerProps[\"onChange\"] = (date, dateString) => {\n    console.log(date, dateString);\n  };\n\n  return (\n    <div\n      className={twMerge(`relative`, `${fullWidth} ? \"w-full\" : \"\"`, className)}\n    >\n      <RangePicker\n        className=\"custom-range-picker border-input-ink\"\n        popupClassName=\"popuptest\"\n        dropdownClassName=\"dropdowntest\"\n        format={dateFormat}\n        onChange={onChange}\n        placeholder={placeholder}\n        separator={<InputDatePickerSeperatorSvg />}\n        // <img src={images.input.date_picker_arrow} alt=\"BotLambotrade\" />\n        placement=\"bottomLeft\"\n        suffixIcon={<InputDatePickerSuffixSvg className=\"text-ink-100\" />}\n        clearIcon={<InputClearSvg className=\"text-ink-60\" />}\n      />\n    </div>\n  );\n};\n\nexport default CustomRangePickerV2;\n","import images from 'assets';\nimport React, { FC, useState } from 'react';\nimport CurrencyInput from 'react-currency-input-field';\nimport TextInput from 'components/TextInput';\nimport { CurrencyInputOnChangeValues } from 'react-currency-input-field/dist/components/CurrencyInputProps';\nimport CustomButton from 'components/CustomButton';\n\ninterface CustomInputSpinnerProps {\n  // Text Input props\n  id?: string;\n  name: string;\n  label?: React.ReactNode;\n  isLabelOutside?: boolean;\n  placeholder?: string;\n  value: string | number | readonly string[] | undefined;\n  error?: boolean;\n  helperText?: React.ReactNode;\n  helperTextEnd?: React.ReactNode;\n  fullWidth?: boolean;\n  searchIcon?: string;\n  symbol?: string;\n  prefix?: string;\n  icon?: string | undefined;\n  button?: React.ReactNode;\n  isInputDisabled?: boolean;\n  PREFIX_VALUE?: string;\n  VALUES?: (string | number)[];\n  inputSpinnerWrapperClassName?: string;\n  containerClassName?: string;\n  inputClassName?: string;\n  symbolClassName?: string;\n  helperClassName?: string;\n  helperTextClassName?: string;\n  helperTextEndClassName?: string;\n  resetValue?: () => void;\n  onFixedValueChange: (value: string | number) => void;\n  onChange?: React.ChangeEventHandler<HTMLTextAreaElement | HTMLInputElement>;\n  handleValueMinusOne: () => void;\n  handleValuePlusOne: () => void;\n  onValueChange?:\n    | ((\n        value: string | undefined,\n        name?: string | undefined,\n        values?: CurrencyInputOnChangeValues | undefined\n      ) => void)\n    | undefined;\n  onBlur?: React.FocusEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n  onFocus?: React.FocusEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n  onKeyDown?: React.KeyboardEventHandler<\n    HTMLTextAreaElement | HTMLInputElement\n  >;\n  onKeyUp?: React.KeyboardEventHandler<HTMLTextAreaElement | HTMLInputElement>;\n  onMouseOver?: React.MouseEventHandler<HTMLTextAreaElement | HTMLInputElement>;\n  onMouseLeave?: React.MouseEventHandler<\n    HTMLTextAreaElement | HTMLInputElement\n  >;\n}\n\nconst CustomInputSpinner: FC<CustomInputSpinnerProps> = ({\n  id,\n  name,\n  label,\n  isLabelOutside = false,\n  placeholder,\n  value,\n  error,\n  helperText,\n  helperTextEnd,\n  fullWidth,\n  searchIcon,\n  symbol,\n  icon,\n  button,\n  isInputDisabled,\n  prefix = '$ ',\n  PREFIX_VALUE = '+',\n  VALUES = [],\n  inputSpinnerWrapperClassName = '',\n  containerClassName = '',\n  inputClassName = '',\n  symbolClassName = '',\n  helperClassName = '',\n  helperTextClassName = '',\n  helperTextEndClassName = '',\n  onFixedValueChange,\n  resetValue,\n  onChange,\n  handleValueMinusOne,\n  handleValuePlusOne,\n  onValueChange,\n  onBlur,\n  onFocus,\n  onKeyDown,\n  onKeyUp,\n  onMouseOver,\n  onMouseLeave,\n}) => {\n  const [isMinusFocus, setIsMinusFocus] = useState(false);\n  const [isPlusFocus, setIsPlusFocus] = useState(false);\n  // border border-ink-20 hover:bg-ink-20 hover:border-ink-10\n\n  return (\n    <div>\n      {/* INPUT */}\n      <div\n        className={`flex justify-between gap-x-3 ${inputSpinnerWrapperClassName}`}\n      >\n        <div\n          onClick={handleValueMinusOne}\n          className={`p-3 flex-shrink-0 flex items-center justify-center rounded-xl text-ink-60 cursor-pointer ${\n            isMinusFocus ? 'border-primary' : 'border-input-ink bg-ink-05'\n          }`}\n          onMouseOver={(e) => {\n            setIsMinusFocus(true);\n          }}\n          onMouseLeave={(e) => {\n            setIsMinusFocus(false);\n          }}\n        >\n          {isMinusFocus ? (\n            <img\n              className=\"w-[2rem]\"\n              src={images.input.minus_gold}\n              alt=\"BotLambotrade\"\n            />\n          ) : (\n            <img\n              className=\"w-[2rem]\"\n              src={images.input.minus}\n              alt=\"BotLambotrade\"\n            />\n          )}\n        </div>\n        <TextInput\n          containerClassName=\"flex-grow font-bold\"\n          id={id}\n          name={name}\n          label={label}\n          type=\"number\"\n          value={value}\n          onValueChange={onValueChange}\n          placeholder={placeholder}\n          prefix={prefix}\n          inputClassName=\"!py-[0.875rem] text-center text-xl\"\n          fullWidth={true}\n          onBlur={onBlur}\n          onFocus={onFocus}\n          onKeyDown={onKeyDown}\n          onKeyUp={onKeyUp}\n          onMouseOver={onMouseOver}\n          onMouseLeave={onMouseLeave}\n          // containerClassName=\"w-[25rem]\"\n          // icon={images.input.eye}\n          // button={<CustomButton>Button</CustomButton>}\n        />\n        <div\n          onClick={handleValuePlusOne}\n          className={`p-3 flex-shrink-0 flex items-center justify-center rounded-xl cursor-pointer ${\n            isPlusFocus ? 'border-primary' : 'border-input-ink'\n          }`}\n          onMouseOver={(e) => {\n            setIsPlusFocus(true);\n          }}\n          onMouseLeave={(e) => {\n            setIsPlusFocus(false);\n          }}\n        >\n          <img\n            className=\"w-[2rem]\"\n            src={images.copy.plus_gold}\n            alt=\"BotLambotrade\"\n          />\n        </div>\n      </div>\n\n      {/* BUTTON */}\n      {VALUES.length > 0 && (\n        <div className=\"mt-4 grid grid-flow-col auto-cols-fr gap-x-2\">\n          {VALUES.map((value, index) => {\n            let renderText;\n            if (typeof value === 'string') {\n              renderText = value;\n            } else {\n              renderText = PREFIX_VALUE + value;\n            }\n            return (\n              <div\n                key={index * Math.random() * 100}\n                className=\"flex-grow xl:px-3 xl:py-3 px-2 py-2 text-center bg-ink-05 hover:bg-ink-20 text-ink-100 rounded-xl cursor-pointer\"\n                onClick={() => {\n                  if (onFixedValueChange) {\n                    onFixedValueChange(value);\n                  }\n                }}\n              >\n                {renderText}\n              </div>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CustomInputSpinner;\n","import React, { FC } from 'react';\n\ninterface CustomRadioProps {\n  checked: boolean;\n  label: string;\n  containerClassName?: string;\n  onClick: React.MouseEventHandler<HTMLDivElement> | undefined;\n}\n\nconst CustomRadio: FC<CustomRadioProps> = ({\n  checked,\n  label,\n  containerClassName = '',\n  onClick,\n}) => {\n  return (\n    <div\n      className={`flex items-center gap-x-[0.625rem] rounded-xl p-4 cursor-pointer radio-container-hover ${\n        checked ? 'border-primary-z-0 bg-primary-05' : 'border-input-ink'\n      } ${containerClassName}`}\n      onClick={onClick}\n    >\n      <div className=\"p-[0.125rem]\">\n        <div\n          className={`p-[0.3125rem] flex items-center justify-center z-[100] ${\n            checked ? 'border-radio-primary' : 'border-radio-ink'\n          }`}\n        >\n          <div\n            className={`rounded-full w-[0.625rem] h-[0.625rem] ${\n              checked ? 'bg-primary-100' : ''\n            }`}\n          />\n        </div>\n      </div>\n      <label className={`text-ink-100 cursor-pointer`}>{label}</label>\n    </div>\n  );\n};\n\nexport default CustomRadio;\n","import { faker } from \"@faker-js/faker\";\nimport APIs from \"apis\";\nimport images from \"assets\";\nimport axios from \"axios\";\nimport CustomRangePickerV2 from \"components/CustomDatePickerV2\";\nimport dayjs from \"dayjs\";\nimport { useEnqueueSnackbar } from \"hooks/useEnqueueSnackbar\";\nimport { FC, useCallback, useEffect, useState } from \"react\";\nimport { useAppDispatch } from \"stores/hooks\";\nimport { userActions } from \"stores/userSlice\";\nimport TableLeftArrowSvg from \"svgs/TableLeftArrowSvg\";\nimport { BotAllData } from \"types/BotAllData\";\nimport BotData from \"types/BotData\";\nimport InputSelectOption from \"types/InputSelectOption\";\nimport { UserHistoryProps } from \"types/UserHistoryProps\";\nimport { UserHistoryResponseResult } from \"types/UserHistoryResponse\";\n\ninterface Props {\n  userHistory: UserHistoryProps;\n  setUserHistory: React.Dispatch<React.SetStateAction<UserHistoryProps>>;\n}\n\nconst INITIAL_SELECTED_OPTION: InputSelectOption = {\n  value: \"\",\n  label: \"\",\n};\n\nconst INITIAL_SELECTED_ACCOUNT_TYPE: InputSelectOption = {\n  value: \"LIVE\",\n  label: \"Tài khoản LIVE\",\n};\n\nexport interface ICopyTradeSettingFormik {\n  accountType: string;\n  email: string;\n  balance: number;\n  masterName: string;\n  amountPerOrder: number;\n  multiply: number;\n  takeProfit: number;\n  stopLoss: number;\n}\n\nconst generateFakeData = (): UserHistoryResponseResult[] => {\n  return Array(15)\n    .fill(0)\n    .map((_) => ({\n      id: faker.datatype.uuid(),\n      date: faker.date.between(\"2020-01-01T00:00:00.000Z\", dayjs().toDate()),\n      ip: faker.internet.ip(),\n    }));\n};\n\nconst UserHistory: FC<Props> = ({ userHistory, setUserHistory }) => {\n  // BOT\n  const [allBotDatas, setAllBotDatas] = useState<BotAllData[]>([]);\n  const [partnerBotDatas, setPartnerBotDatas] = useState<BotData[]>([]);\n  const [selectedAccountType, setSelectedAccountType] =\n    useState<InputSelectOption>(INITIAL_SELECTED_ACCOUNT_TYPE);\n  const [selectedBotAccount, setSelectedBotAccount] =\n    useState<InputSelectOption>(INITIAL_SELECTED_OPTION);\n  const [accountOptions, setAccountOptions] = useState<InputSelectOption[]>([]);\n  const [allBotAccountOptions, setAllBotAccountOptions] = useState<\n    InputSelectOption[]\n  >([]);\n  const [historyResults, setAdminResults] = useState<\n    UserHistoryResponseResult[]\n  >(generateFakeData());\n\n  // ! INITIAL PARTNER BOT USEFFECT\n  const [isPartnerBotInitialized, setIsPartnerBotInitialized] = useState(false);\n\n  const dispatch = useAppDispatch();\n  const enqueueSnackbar = useEnqueueSnackbar();\n\n  // BOT SELECT\n  const getAllAccounts = useCallback(() => {\n    axios\n      .get(APIs.allAccounts)\n      .then((res) => {\n        const data = res.data;\n        setAllBotDatas(data);\n      })\n      .catch(() => {\n        enqueueSnackbar(\"Không thể lấy tài khoản master\", { variant: \"error\" });\n      });\n  }, [enqueueSnackbar]);\n\n  const getAllPartnerBots = useCallback(() => {\n    axios\n      .get(APIs.partnerAccount)\n      .then((res) => {\n        const datas: BotData[] = res.data;\n        const partnerBotDatas = datas.filter(\n          (data) => data.status === \"active\"\n        );\n        setPartnerBotDatas(partnerBotDatas);\n      })\n      .catch((err) => {\n        enqueueSnackbar(\"Không thể lấy bot datas\", { variant: \"error\" });\n      });\n  }, [enqueueSnackbar]);\n\n  const convertPartnerBotsToPartnerAccountOptions = useCallback(() => {\n    if (partnerBotDatas && partnerBotDatas.length > 0) {\n      const accountOptions = partnerBotDatas.map((botData) => ({\n        value: botData.id,\n        label: botData.botname,\n      }));\n      setAccountOptions(accountOptions);\n    }\n  }, [partnerBotDatas]);\n\n  const convertAllPartnerBotsToPartnerAccountOptions = useCallback(() => {\n    if (allBotDatas && allBotDatas.length > 0) {\n      const allBotAccountOptions = allBotDatas.map((botData) => ({\n        value: botData.id,\n        label: botData.username,\n      }));\n      setAllBotAccountOptions(allBotAccountOptions);\n    }\n  }, [allBotDatas]);\n\n  useEffect(() => {\n    getAllPartnerBots();\n    getAllAccounts();\n  }, [getAllAccounts, getAllPartnerBots]);\n\n  useEffect(() => {\n    console.log(\"HERE\");\n    if (partnerBotDatas && partnerBotDatas.length > 0) {\n      if (selectedAccountType.value === \"LIVE\" && !isPartnerBotInitialized) {\n        const firstBotOption = {\n          value: partnerBotDatas[0].id,\n          label: partnerBotDatas[0].botname,\n        };\n        setSelectedBotAccount(firstBotOption);\n        setIsPartnerBotInitialized(true);\n        dispatch(userActions.updateSelectedBotAccount(firstBotOption));\n      }\n\n      convertPartnerBotsToPartnerAccountOptions();\n      convertAllPartnerBotsToPartnerAccountOptions();\n    }\n  }, [\n    partnerBotDatas,\n    convertPartnerBotsToPartnerAccountOptions,\n    selectedAccountType,\n    selectedBotAccount.value,\n    convertAllPartnerBotsToPartnerAccountOptions,\n    dispatch,\n    isPartnerBotInitialized,\n  ]);\n\n  return (\n    <>\n      <div className=\"mb-6 h-fit bg-background-80 rounded-3xl\">\n        <div className=\"flex flex-col gap-4 p-6 border-b border-ink-10 md:flex-row md:justify-between md:items-center\">\n          <h1 className=\"text-xl font-semibold text-ink-100\">\n            Lịch sử hoạt động\n          </h1>\n          <button\n            className=\"px-3 py-[0.625rem] w-full md:w-auto rounded-xl flex justify-center items-center gap-[0.625rem] bg-primary-100\"\n            onClick={() => {\n              setUserHistory((prev) => ({\n                ...prev,\n                isShowing: false,\n              }));\n            }}\n          >\n            <TableLeftArrowSvg className=\"text-background-100\" />{\" \"}\n            <p className=\"font-semibold text-transparent bg-background-100 bg-clip-text\">\n              Trở lại\n            </p>\n          </button>\n        </div>\n        {historyResults.length === 0 && (\n          <div className=\"py-[5rem] flex flex-col justify-center items-center gap-y-6\">\n            <img\n              className=\"w-[10.25rem]\"\n              srcSet={`${images.user.empty} 2x`}\n              alt=\"BotLambotrade\"\n            />\n            <p className=\"text-ink-60\">Không có lịch sử hoạt động</p>\n          </div>\n        )}\n        {historyResults.length > 0 && (\n          <div className=\"flex flex-col gap-4 p-4 md:p-6 md:gap-6\">\n            <CustomRangePickerV2 placeholder={[\"Từ Ngày\", \"Đến ngày\"]} />\n            <div className=\"flex flex-col gap-2 p-4 border text-ink-100 border-ink-20 rounded-2xl\">\n              {historyResults.map((data) => (\n                <p>\n                  {dayjs(data.date).format(\"DD/MM/YYYY\")} - {data.ip}\n                </p>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default UserHistory;\n","import CustomModal from 'components/CustomModal';\nimport GoldButton from 'components/GoldButton';\nimport GreyButton from 'components/GreyButton';\nimport React, { FC } from 'react';\n\ninterface CustomModalTwoButtonProps {\n  open: boolean;\n  icon: string;\n  title: string;\n  content: React.ReactNode;\n  handleOpen: () => void;\n  handleClose: () => void;\n  onConfirm: () => void;\n}\n\nconst CustomModalTwoButton: FC<CustomModalTwoButtonProps> = ({\n  open,\n  icon,\n  title,\n  content,\n  handleOpen,\n  handleClose,\n  onConfirm,\n}) => {\n  return (\n    <CustomModal\n      isOpen={open}\n      handleOpen={handleOpen}\n      handleClose={handleClose}\n    >\n      <div\n        className={`absolute left-[50%] top-[50%] translate-x-[-50%] translate-y-[-50%] p-6 md:w-[31.25rem] w-[calc(100vw-2rem)] bg-background-80 rounded-3xl text-center`}\n      >\n        <div className=\"flex items-center justify-center\">\n          <img className=\"mb-4 w-[5.5rem]\" src={icon} alt=\"BotLambotrade\" />\n        </div>\n        <h3 className=\"mb-2 mx-auto max-w-[18.75rem] text-xl text-ink-100\">\n          {title}\n        </h3>\n        <p className=\"mb-12 mx-auto max-w-[18.75rem] text-ink-80\">{content}</p>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 justify-center items-center gap-4\">\n          <GreyButton onClick={handleClose}>Huỷ</GreyButton>\n          <GoldButton onClick={onConfirm}>Xoá</GoldButton>\n        </div>\n      </div>\n    </CustomModal>\n  );\n};\n\nexport default CustomModalTwoButton;\n","import React, { FC, useState } from 'react';\n\ninterface UserManagementButtonProps {\n  children: React.ReactNode;\n  className?: string;\n  classNameHover?: string;\n  background?: string;\n  backgroundHover?: string;\n  textClassName?: string;\n  textClassNameHover?: string;\n  textColor?: string;\n  textColorHover?: string;\n  icon?: string;\n  iconHover?: string;\n  type?: 'button' | 'submit' | 'reset' | undefined;\n  onClick?: React.MouseEventHandler<HTMLButtonElement> | undefined;\n}\n\nconst UserManagementButton: FC<UserManagementButtonProps> = ({\n  children,\n  className = '',\n  classNameHover = '',\n  background = 'bg-primary-05',\n  backgroundHover = 'bg-primary-100',\n  textClassName = '',\n  textClassNameHover = '',\n  textColor = 'bg-primary-100',\n  textColorHover = 'bg-background-100',\n  icon,\n  iconHover,\n  type = 'button',\n  onClick,\n}) => {\n  const [isButtonHover, setIsButtonHover] = useState(false);\n\n  return (\n    <button\n      className={`flex justify-center items-center gap-x-[0.625rem] px-3 py-[0.625rem] rounded-xl ${\n        isButtonHover ? backgroundHover : background\n      } ${isButtonHover ? classNameHover : className}`}\n      type={type}\n      onClick={onClick}\n      onMouseOver={() => {\n        setIsButtonHover(true);\n      }}\n      onMouseLeave={() => {\n        setIsButtonHover(false);\n      }}\n    >\n      {icon && iconHover && (\n        <img src={isButtonHover ? iconHover : icon} alt=\"BotLambotrade\" />\n      )}\n      <p\n        className={`${isButtonHover ? textClassNameHover : textClassName} ${\n          isButtonHover ? textColorHover : textColor\n        } bg-clip-text text-transparent font-bold text-sm`}\n      >\n        {children}\n      </p>\n    </button>\n  );\n};\n\nexport default UserManagementButton;\n","import { faker } from \"@faker-js/faker\";\nimport { CloseOutlined } from \"@mui/icons-material\";\nimport { Tooltip } from \"@mui/material\";\nimport APIs from \"apis\";\nimport images from \"assets\";\nimport axios from \"axios\";\nimport CustomButton from \"components/CustomButton\";\nimport CustomInputSpinner from \"components/CustomInputSpinner\";\nimport CustomModal from \"components/CustomModal\";\nimport CustomModalTwoButton from \"components/CustomModalTwoButton\";\nimport CustomRadio from \"components/CustomRadio\";\nimport CustomValidateModel from \"components/CustomValidateModal\";\nimport SelectInput from \"components/SelectInput\";\nimport TextInput from \"components/TextInput\";\nimport { useFormik } from \"formik\";\nimport { useEnqueueSnackbar } from \"hooks/useEnqueueSnackbar\";\nimport moment from \"moment\";\nimport React, { FC, useCallback, useEffect, useRef, useState } from \"react\";\nimport { CurrencyInputOnChangeValues } from \"react-currency-input-field/dist/components/CurrencyInputProps\";\nimport ReactPaginate from \"react-paginate\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ActionMeta, SingleValue } from \"react-select\";\nimport { useSpring } from \"react-spring\";\nimport { Column, usePagination, useTable } from \"react-table\";\nimport { useAppDispatch, useAppSelector } from \"stores/hooks\";\nimport { uiActions } from \"stores/uiSlice\";\nimport { userActions } from \"stores/userSlice\";\nimport { BotAllData } from \"types/BotAllData\";\nimport { BotBalance } from \"types/BotBalance\";\nimport BotData from \"types/BotData\";\nimport CustomValidateModelProps from \"types/CustomValidateProps\";\nimport InputSelectOption from \"types/InputSelectOption\";\nimport { UserHistoryProps } from \"types/UserHistoryProps\";\nimport UserManagementAdminResponse, {\n  UserManagementAdminResponseResult,\n} from \"types/UserManagementAdminResponse\";\nimport * as Yup from \"yup\";\nimport UserManagementButton from \"./UserManagementButton\";\n\ntype UserManagementAdminProps = {\n  setUserHistory: React.Dispatch<React.SetStateAction<UserHistoryProps>>;\n};\n\ninterface ListMasterCopyTradeSetting {\n  master?: string | number;\n}\n\ninterface ListFollowerCopyTradeSetting {\n  follower?: string | number;\n}\n\ninterface FormikValueType {\n  followerName: string;\n  email: string;\n  role: string;\n  status: string;\n}\n\ntype Conditions = {\n  [key: string]: BubbleOptions;\n};\n\ntype BubbleOptions = {\n  [key: string]: any;\n};\n\ntype SelectedIdsType = {\n  [key: string]: boolean;\n};\n\ninterface TooltipToggle {\n  [x: string | number]: boolean;\n}\n\ninterface InputValue {\n  value: string | number;\n  error: null | string;\n  touched: boolean;\n}\n\nconst PAGE_SIZE_OPTIONS: InputSelectOption[] = [\n  { value: 10, label: \"10/page\" },\n  { value: 20, label: \"20/page\" },\n  { value: 30, label: \"30/page\" },\n  { value: 40, label: \"40/page\" },\n];\n\nconst METHOD_OWN_TYPES: InputSelectOption[] = [\n  { value: \"all\", label: \"Tất cả\" },\n  { value: \"own\", label: \"Phương pháp của tôi\" },\n  { value: \"gifted\", label: \"Phương pháp được tặng\" },\n];\n\nconst PLUS_VALUES = [5, 10, 20, 50, 100, \"All\"];\nconst MULTIPLY_VALUES = [2, 5, 10, 20, 40, 100];\nconst OPTIONS = [\n  {\n    value: 10,\n    name: \"Ten\",\n  },\n  {\n    value: 15,\n    name: \"Fifteen\",\n  },\n  {\n    value: 20,\n    name: \"Twenty\",\n  },\n  {\n    value: 25,\n    name: \"Twenty-five\",\n  },\n];\n\nconst INITIAL_BOT_BALANCE = {\n  balance: 1,\n  demo_balance: 1,\n  usdt_balance: 1,\n};\n\nconst INITIAL_SELECT_OPTIONS: InputSelectOption[] = [\n  {\n    value: \"\",\n    label: \"\",\n  },\n];\n\nconst INITIAL_SELECTED_OPTION: InputSelectOption = {\n  value: \"\",\n  label: \"\",\n};\n\nconst INITIAL_SELECTED_ACCOUNT_TYPE: InputSelectOption = {\n  value: \"LIVE\",\n  label: \"Tài khoản LIVE\",\n};\n\nconst INITIAL_FORMIK_VALUES: FormikValueType = {\n  followerName: \"\",\n  email: \"\",\n  role: \"\",\n  status: \"\",\n};\n\nconst ACCOUNT_TYPES = [\n  {\n    value: \"DEMO\",\n    label: \"Tài khoản DEMO\",\n  },\n  {\n    value: \"LIVE\",\n    label: \"Tài khoản LIVE\",\n  },\n];\n\nexport interface ICopyTradeSettingFormik {\n  accountType: string;\n  email: string;\n  balance: number;\n  masterName: string;\n  amountPerOrder: number;\n  multiply: number;\n  takeProfit: number;\n  stopLoss: number;\n}\n\nconst INITIAL_ADMIN_RESULT: UserManagementAdminResponseResult = {\n  id: 0,\n  follower_name: \"\",\n  email: \"\",\n  role: \"\",\n  status: \"\",\n};\n\nconst options: Intl.NumberFormatOptions = {\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 3,\n  style: \"decimal\",\n};\n\nconst STATUSES_MAP = {\n  active: \"Đang hoạt động\",\n  inactive: \"Đang chặn\",\n};\n\nconst INITIAL_INPUT_VALUE = {\n  value: \"\",\n  error: null,\n  touched: false,\n};\n\nconst generateFakeData = (): UserManagementAdminResponseResult[] => {\n  return Array(10)\n    .fill(0)\n    .map((_, index) => ({\n      id: faker.datatype.uuid(),\n      follower_name: faker.name.fullName(),\n      email: faker.internet.email(),\n      role: index === 0 ? \"Owner\" : \"Được thêm bởi \" + faker.name.fullName(),\n      status: index % 2 === 0 ? \"active\" : \"inactive\",\n    }));\n};\n\nconst DEFAULT_INDEX_OF_CONDITIONS = \"1\";\n\nconst UserManagementAdmin: FC<UserManagementAdminProps> = ({\n  setUserHistory,\n}) => {\n  const [currentTimer, setCurrentTimer] = useState(moment());\n  const [selectedIds, setSelectedIds] = useState<SelectedIdsType>({});\n  const [selectAll, setSelectAll] = useState(0);\n  const [totalRecords, setTotalRecords] = useState(100);\n\n  // BOT\n  const [allBotDatas, setAllBotDatas] = useState<BotAllData[]>([]);\n  const [partnerBotDatas, setPartnerBotDatas] = useState<BotData[]>([]);\n  const [botBalance, setBotBalance] = useState<BotBalance>(INITIAL_BOT_BALANCE);\n  const [selectedAccountType, setSelectedAccountType] =\n    useState<InputSelectOption>(INITIAL_SELECTED_ACCOUNT_TYPE);\n  const [selectedBotAccount, setSelectedBotAccount] =\n    useState<InputSelectOption>(INITIAL_SELECTED_OPTION);\n  const [selectedMasterAccount, setSelectedMasterAccount] =\n    useState<InputSelectOption>(INITIAL_SELECTED_OPTION);\n  const [isMasterAccountValid, setIsMasterAccountValid] = useState(false);\n  const [accountOptions, setAccountOptions] = useState<InputSelectOption[]>([]);\n  const [allBotAccountOptions, setAllBotAccountOptions] = useState<\n    InputSelectOption[]\n  >([]);\n\n  // SETTINGS\n  const [admins, setAdmins] = useState<UserManagementAdminResponse>({\n    count: 3,\n    next: null,\n    previous: null,\n    results: [],\n  });\n  const [adminResults, setAdminResults] = useState<\n    UserManagementAdminResponseResult[]\n  >(generateFakeData());\n  const userData = useAppSelector((state) => state.user.user);\n  const [isDeletingByList, setIsDeletingByList] = useState(false);\n  const [isLimited, setIsLimited] = useState(false);\n\n  // MODAL\n  const [isUpsertModalOpen, setIsUpsertModalOpen] = useState(false);\n  const [isChangePasswordModalOpen, setIsChangePasswordModalOpen] =\n    useState(false);\n  const [isRemovePopupOpen, setIsRemovePopupOpen] = useState(false);\n  const [isBlockPopupOpen, setIsBlockPopupOpen] = useState(false);\n  const [isAuthorizePopupOpen, setIsAuthorizePopupOpen] = useState(false);\n  const [isDeletePopupOpen, setIsDeletePopupOpen] = useState(false);\n  const [isConditionPopupOpen, setIsConditionPopupOpen] = useState(false);\n  const [isSetupPopupOpen, setIsSetupPopupOpen] = useState(false);\n  const [isValidAmountPopupOpen, setIsValidAmountPopupOpen] = useState(false);\n\n  // SEARCH AND FILTER\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [selectedMethodOwnType, setSelectedMethodOwnType] =\n    useState<InputSelectOption>(METHOD_OWN_TYPES[0]);\n\n  // PAGINATION\n  const [selectedPageSizeOption, setSelectedPageSizeOption] =\n    useState<InputSelectOption>(PAGE_SIZE_OPTIONS[0]);\n  const [page, setPage] = useState(0);\n  const [totalPages, setTotalPages] = useState(10);\n  const menuRef = useRef<HTMLDivElement>(null);\n  const [isPrevHover, setIsPrevHover] = useState(false);\n  const [isNextHover, setIsNextHover] = useState(false);\n\n  const [modalAttributes, setModalAttributes] =\n    useState<CustomValidateModelProps>({\n      isOpen: false,\n      icon: \"\",\n      headingMessage: \"\",\n      message: \"\",\n      buttonMessage: \"\",\n      handleOpen: () => {},\n      handleClose: () => {},\n    });\n\n  // ! FORMIK RELATED STATES AND BUY SELL\n  const [formikValues, setFormikValues] = useState<FormikValueType>(\n    INITIAL_FORMIK_VALUES\n  );\n  const [selectedAdminResult, setSelectedAdminResult] =\n    useState<UserManagementAdminResponseResult>(INITIAL_ADMIN_RESULT);\n  const [isEditing, setIsEditing] = useState(false);\n  const [newAdminUsername, setNewAdminUserName] =\n    useState<InputValue>(INITIAL_INPUT_VALUE);\n  const [giftUsername, setGiftUsername] =\n    useState<InputValue>(INITIAL_INPUT_VALUE);\n  const [conditionError, setConditionError] = useState(\"\");\n\n  // ! INITIAL PARTNER BOT USEFFECT\n  const [isPartnerBotInitialized, setIsPartnerBotInitialized] = useState(false);\n  const animationUpsertModalMobile = useSpring({\n    to: {\n      opacity: isUpsertModalOpen ? 1 : 0,\n      transform: isUpsertModalOpen ? \"translateX(0%)\" : \"translateX(-100%)\",\n    },\n  });\n\n  // ! RESPONSIVE\n  const isLargeDesktop = useMediaQuery({\n    query: \"(min-width: 1368px)\",\n  });\n  const isDesktop = useMediaQuery({\n    query: \"(min-width: 1224px)\",\n  });\n  const isTablet = useMediaQuery({\n    query: \"(min-width: 768px)\",\n  });\n  const isMobile = useMediaQuery({\n    query: \"(max-width: 767px)\",\n  });\n\n  const dispatch = useAppDispatch();\n  const enqueueSnackbar = useEnqueueSnackbar();\n  const navigate = useNavigate();\n  const scrollElement = useRef<HTMLDivElement>(null);\n\n  const data = React.useMemo<UserManagementAdminResponseResult[]>(\n    () => adminResults,\n    [adminResults]\n  );\n\n  // Tooltips\n  const [isTooltipOpen, setIsTooltipOpen] = useState<TooltipToggle>({});\n\n  const handleTooltipOpen = useCallback(\n    (rowIndex: string | number) => {\n      console.log(\"handleTooltipOpen\");\n      if (!isTooltipOpen[rowIndex]) {\n        setIsTooltipOpen((prevState) => ({\n          [rowIndex]: true,\n        }));\n      }\n    },\n    [isTooltipOpen]\n  );\n\n  const handleTooltipClose = useCallback(\n    (rowIndex: string | number) => {\n      console.log(\"handleTooltipClose\");\n      if (isTooltipOpen[rowIndex]) {\n        setIsTooltipOpen((prevState) => ({\n          [rowIndex]: false,\n        }));\n      }\n    },\n    [isTooltipOpen]\n  );\n\n  const handleTooltipToggle = (rowIndex: string | number) => {\n    setIsTooltipOpen((prevState) => ({\n      [rowIndex]: !prevState[rowIndex],\n    }));\n  };\n\n  // FUNCTIONS FOR MODAL\n  const showIsDevelopingModal = useCallback(() => {\n    dispatch(uiActions.updateIsModalOpen(true));\n  }, [dispatch]);\n\n  const handleOpenUpsertModal = () => {\n    setIsUpsertModalOpen(true);\n  };\n\n  const handleCloseUpsertModal = () => {\n    setIsUpsertModalOpen(false);\n    setNewAdminUserName(INITIAL_INPUT_VALUE);\n  };\n\n  const handleOpenChangePasswordPopupModal = () => {\n    setIsChangePasswordModalOpen(true);\n  };\n\n  const handleCloseChangePasswordPopupModal = () => {\n    setIsChangePasswordModalOpen(false);\n  };\n\n  const handleOpenRemovePopupModal = () => {\n    setIsRemovePopupOpen(true);\n  };\n\n  const handleCloseRemovePopupModal = () => {\n    setIsRemovePopupOpen(false);\n  };\n\n  const handleOpenBlockPopupModal = () => {\n    setIsBlockPopupOpen(true);\n  };\n\n  const handleCloseBlockPopupModal = () => {\n    setIsBlockPopupOpen(false);\n  };\n\n  const handleOpenAuthorizePopupModal = () => {\n    setIsAuthorizePopupOpen(true);\n  };\n\n  const handleCloseAuthorizePopupModal = () => {\n    setIsAuthorizePopupOpen(false);\n  };\n\n  const handleOpenDeletePopupModal = () => {\n    setIsDeletePopupOpen(true);\n  };\n\n  const handleCloseDeletePopupModal = () => {\n    setIsDeletePopupOpen(false);\n  };\n\n  const handleOpenSetupPopupModal = () => {\n    setIsSetupPopupOpen(true);\n  };\n\n  const handleCloseSetupPopupModal = () => {\n    setIsSetupPopupOpen(false);\n  };\n\n  const handleOpenAccountTradePopupModal = () => {\n    setModalAttributes((prev) => ({\n      ...prev,\n      isOpen: true,\n    }));\n  };\n\n  const handleCloseAccountTradePopupModal = () => {\n    setModalAttributes((prev) => ({\n      ...prev,\n      isOpen: false,\n    }));\n    navigate(\"/account_trade\");\n  };\n\n  // FUNCTIONS FOR CHECKBOX\n  const toggleRow = useCallback(\n    (id: string | number) => {\n      const newSelected = { ...selectedIds };\n      newSelected[id] = !newSelected[id];\n      console.log(newSelected);\n      setSelectedIds(newSelected);\n      const totalSelected = Object.entries(newSelected).reduce(\n        (prev, value) => {\n          if (value[1]) return prev + 1;\n          return prev;\n        },\n        0\n      );\n      if (totalSelected >= data.length) {\n        setSelectAll(1);\n      } else {\n        setSelectAll(0);\n      }\n    },\n    [data.length, selectedIds]\n  );\n\n  const toggleAllRow = useCallback(() => {\n    let newSelected: SelectedIdsType = {};\n\n    if (selectAll === 0) {\n      data.forEach((x) => {\n        if (x.role !== \"Owner\") {\n          newSelected[x.id] = true;\n        }\n      });\n    }\n    setSelectedIds(newSelected);\n    setSelectAll((prev) => (prev === 0 ? 1 : 0));\n  }, [data, selectAll]);\n\n  // COMMON FUNCTIONS\n  // const getAllBotSignalBuySellSettings = useCallback(\n  //   (page: number) => {\n  //     if (partnerBotDatas.length > 0) {\n  //       axios\n  //         .get(`${APIs.botSignalBuySellList}`, {\n  //           params: {\n  //             page,\n  //             page_size: selectedPageSizeOption.value,\n  //           },\n  //         })\n  //         .then((res) => {\n  //           const data: BotSignalPersonal = res.data;\n  //           setBotPersonalSignalData(data);\n  //           setAllBotPersonalSignalResults(data.results);\n  //           if (data.count != null && selectedPageSizeOption.value != null) {\n  //             setTotalPages(\n  //               Math.ceil(data.count / +selectedPageSizeOption.value)\n  //             );\n  //           }\n  //         })\n  //         .catch(() => {\n  //           enqueueSnackbar('Không thể lấy bot settings!', {\n  //             variant: 'error',\n  //           });\n  //         });\n  //     }\n  //   },\n  //   [enqueueSnackbar, partnerBotDatas, selectedPageSizeOption]\n  // );\n\n  const deleteSettingById = () => {\n    axios\n      .delete(`${APIs.deleteBotSignalPersonal}${selectedAdminResult.id}`)\n      .then((res) => {\n        // TODO\n        // getAllBotSignalBuySellSettings(page + 1);\n        setSelectedIds({});\n        setSelectAll(0);\n        enqueueSnackbar(\"Xoá cấu hình thành công!\", { variant: \"success\" });\n      })\n      .catch(() => {\n        enqueueSnackbar(\"Không thể xoá cấu hình!\", { variant: \"error\" });\n      });\n  };\n\n  const deleteSettingByListIds = () => {\n    // ENTRY: string: boolean\n    const selectedListIds = Object.entries(selectedIds)\n      .filter((selected) => selected[1])\n      .map((selected) => selected[0]);\n    axios\n      .delete(`${APIs.deleteBotSignalPersonal}${selectedListIds}`)\n      .then((res) => {\n        // TODO\n        // getAllBotSignalBuySellSettings(page + 1);\n        setSelectedIds({});\n        setSelectAll(0);\n        enqueueSnackbar(\"Xoá cấu hình thành công!\", { variant: \"success\" });\n      })\n      .catch(() => {\n        enqueueSnackbar(\"Xoá cấu hình thất bại!\", { variant: \"error\" });\n      });\n  };\n\n  const updateModelData = useCallback(\n    (botPersonalSignalResult: UserManagementAdminResponseResult) => {\n      // UPDATE FORM MODAL\n      const updatedFormikValues: FormikValueType = {\n        followerName: botPersonalSignalResult.follower_name,\n        email: botPersonalSignalResult.email,\n        role: botPersonalSignalResult.role,\n        status: botPersonalSignalResult.status,\n      };\n\n      console.log(updatedFormikValues);\n      setFormikValues(updatedFormikValues);\n    },\n    []\n  );\n\n  // SEARCH AND FILTER\n  const handleSelectMethodOwnType = (\n    option: SingleValue<InputSelectOption>,\n    actionMeta: ActionMeta<InputSelectOption>\n  ) => {\n    if (option != null) {\n      setSelectedMethodOwnType(option);\n    }\n  };\n\n  // PAGINATION FUNCTION\n  const handleSelectPageSize = (\n    option: SingleValue<InputSelectOption>,\n    actionMeta: ActionMeta<InputSelectOption>\n  ) => {\n    if (option != null) {\n      setSelectedPageSizeOption(option);\n      setPage(0);\n      // getAllBotSignalBuySellSettings(1);\n    }\n  };\n\n  const handlePageChange = useCallback(({ selected }: { selected: number }) => {\n    console.log(selected);\n    const page = selected + 1;\n    setPage(selected);\n    // TODO\n    // getAllBotSignalBuySellSettings(page);\n  }, []);\n\n  // TABLE\n  const columns = React.useMemo<Column<UserManagementAdminResponseResult>[]>(\n    () => [\n      {\n        id: \"checkbox\",\n        accessor: \"checkbox\",\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          return (\n            <div className=\"flex items-center justify-center\">\n              <input\n                type=\"checkbox\"\n                className=\"checkbox\"\n                checked={selectedIds[original.id] === true}\n                onChange={(e) => {\n                  if (original.role !== \"Owner\") {\n                    toggleRow(original.id);\n                  }\n                }}\n                disabled={original.role === \"Owner\"}\n              />\n            </div>\n          );\n        },\n        Header: (props) => {\n          return (\n            <div className=\"flex items-center justify-center\">\n              <input\n                type=\"checkbox\"\n                className=\"text-center checkbox\"\n                checked={selectAll === 1}\n                ref={(input) => {\n                  if (input) {\n                    input.indeterminate = selectAll === 2;\n                  }\n                }}\n                onChange={() => toggleAllRow()}\n              />\n            </div>\n          );\n        },\n        sortable: false,\n        width: 45,\n      },\n      {\n        Header: () => {\n          return <div className=\"text-left\">Biệt danh</div>;\n        },\n        accessor: \"follower_name\",\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          return (\n            <div className=\"flex items-center\">\n              <p className=\"text-sm text-ink-100\">{original.follower_name}</p>\n            </div>\n          );\n        },\n      },\n      {\n        Header: () => {\n          return <div className=\"text-left\">Email</div>;\n        },\n        accessor: \"email\",\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          return (\n            <div className=\"flex items-center\">\n              <p className=\"text-sm text-ink-100\">{original.email}</p>\n            </div>\n          );\n        },\n      },\n      {\n        Header: () => {\n          return <div className=\"text-left\">Vai trò</div>;\n        },\n        accessor: \"role\",\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          const role = original.role;\n          return (\n            <div className=\"flex gap-x-1\">\n              <p\n                className={`${\n                  role === \"Owner\"\n                    ? \"bg-primary-100 bg-clip-text text-transparent\"\n                    : \"text-ink-100\"\n                } font-medium text-sm`}\n              >\n                {role}\n              </p>\n            </div>\n          );\n        },\n      },\n      {\n        Header: () => <div className=\"text-left\">Trạng thái</div>,\n        accessor: \"status\",\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          const status = original.status;\n          return (\n            <div className=\"flex\">\n              <p\n                className={`w-fit px-2 rounded-[0.375rem] text-xs text-ink-100 leading-5 ${\n                  status === \"active\" ? \"bg-green-100\" : \"bg-red-100\"\n                }`}\n              >\n                {status === \"active\"\n                  ? STATUSES_MAP.active\n                  : STATUSES_MAP.inactive}\n              </p>\n            </div>\n          );\n        },\n      },\n      {\n        accessor: \"actions\",\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          return original.role !== \"Owner\" ? (\n            <div className=\"flex justify-center gap-x-1 w-[1.5rem]\">\n              <Tooltip\n                componentsProps={{\n                  tooltip: {\n                    className: \"!px-0 !py-3 !bg-dropdown !rounded-xl\",\n                  },\n                  arrow: {\n                    className:\n                      \"!w-[1rem] !translate-x-[9.6875rem] !before:bg-dropdown\",\n                    sx: {\n                      \"&::before\": {\n                        background: \"var(--bg-dropdown)\",\n                      },\n                    },\n                  },\n                }}\n                title={\n                  <>\n                    <div\n                      className=\"p-3 min-w-[11.25rem] hover:bg-primary-10 flex items-center gap-x-2 cursor-pointer\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        handleOpenRemovePopupModal();\n                        setSelectedAdminResult(original);\n                        handleTooltipClose(original.id);\n                      }}\n                    >\n                      <img\n                        className=\"w-[1.5rem]\"\n                        src={images.user.remove_gold}\n                        alt=\"BotLambotrade\"\n                      />\n                      <p className=\"text-base text-ink-100\">Bỏ quyền Admin</p>\n                    </div>\n                    <div\n                      className=\"p-3 min-w-[11.25rem] hover:bg-primary-10 flex items-center gap-x-2 cursor-pointer\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        // handleOpenUpsertModal();\n                        // setIsEditing(true);\n                        // updateModelData(original);\n                        handleTooltipClose(original.id);\n                        //TODO\n                        setUserHistory({\n                          isShowing: true,\n                          userId: 1,\n                        });\n                      }}\n                    >\n                      <img\n                        className=\"w-[1.5rem]\"\n                        src={images.user.history}\n                        alt=\"BotLambotrade\"\n                      />\n                      <p className=\"text-base text-ink-100\">\n                        Lịch sử hoạt động\n                      </p>\n                    </div>\n                    <div\n                      className=\"p-3 min-w-[11.25rem] hover:bg-primary-10 flex items-center gap-x-2 cursor-pointer\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        handleOpenBlockPopupModal();\n                        // setIsDeletingByList(false);\n                        setSelectedAdminResult(original);\n                        handleTooltipClose(original.id);\n                      }}\n                    >\n                      <img\n                        className=\"w-[1.5rem]\"\n                        src={images.user.block_gold}\n                        alt=\"BotLambotrade\"\n                      />\n                      <p className=\"text-base text-ink-100\">Chặn tài khoản</p>\n                    </div>\n                    <div\n                      className=\"p-3 min-w-[11.25rem] hover:bg-primary-10 flex items-center gap-x-2 cursor-pointer\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        // setIsDeletingByList(false);\n                        setSelectedAdminResult(original);\n                        handleTooltipClose(original.id);\n                        handleOpenSetupPopupModal();\n                      }}\n                    >\n                      <img\n                        className=\"w-[1.5rem]\"\n                        src={images.user.setting_gold}\n                        alt=\"BotLambotrade\"\n                      />\n                      <p className=\"text-base text-ink-100\">Cài đặt lệnh</p>\n                    </div>\n                    <div\n                      className=\"p-3 min-w-[11.25rem] hover:bg-primary-10 flex items-center gap-x-2 cursor-pointer\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        handleOpenAuthorizePopupModal();\n                        // setIsDeletingByList(false);\n                        setSelectedAdminResult(original);\n                        handleTooltipClose(original.id);\n                      }}\n                    >\n                      <img\n                        className=\"w-[1.5rem]\"\n                        src={images.user.bot}\n                        alt=\"BotLambotrade\"\n                      />\n                      <p className=\"text-base text-ink-100\">Cấp quyền Bot</p>\n                    </div>\n                    <div\n                      className=\"p-3 min-w-[11.25rem] hover:bg-primary-10 flex items-center gap-x-2 cursor-pointer\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        handleOpenChangePasswordPopupModal();\n                        // setIsDeletingByList(false);\n                        setSelectedAdminResult(original);\n                        handleTooltipClose(original.id);\n                      }}\n                    >\n                      <img\n                        className=\"w-[1.5rem]\"\n                        src={images.user.lock}\n                        alt=\"BotLambotrade\"\n                      />\n                      <p className=\"text-base text-ink-100\">Đổi mật khẩu</p>\n                    </div>\n                    <div\n                      className=\"p-3 min-w-[11.25rem] hover:bg-primary-10 flex items-center gap-x-2 cursor-pointer\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        handleOpenDeletePopupModal();\n                        // setIsDeletingByList(false);\n                        setSelectedAdminResult(original);\n                        handleTooltipClose(original.id);\n                      }}\n                    >\n                      <img\n                        className=\"w-[1.5rem]\"\n                        src={images.user.delete_gold}\n                        alt=\"BotLambotrade\"\n                      />\n                      <p className=\"text-base text-ink-100\">Xoá tài khoản</p>\n                    </div>\n                  </>\n                }\n                arrow\n                open={isTooltipOpen[original.id]}\n                onOpen={() => {\n                  handleTooltipOpen(original.id);\n                }}\n                onClose={() => {\n                  handleTooltipClose(original.id);\n                }}\n                disableHoverListener={!isDesktop}\n                disableFocusListener={!isDesktop}\n                disableTouchListener={!isDesktop}\n                placement=\"bottom-end\"\n                enterTouchDelay={0}\n                leaveTouchDelay={20000}\n              >\n                <img\n                  className=\"cursor-pointer\"\n                  src={images.table.actions}\n                  alt=\"BotLambotrade\"\n                  onClick={(e) => {\n                    handleTooltipToggle(original.id);\n                  }}\n                />\n              </Tooltip>\n            </div>\n          ) : (\n            <></>\n          );\n        },\n      },\n    ],\n    [\n      handleTooltipClose,\n      handleTooltipOpen,\n      isDesktop,\n      isTooltipOpen,\n      selectAll,\n      selectedIds,\n      setUserHistory,\n      toggleAllRow,\n      toggleRow,\n    ]\n  );\n\n  const tableInstance = useTable({ columns, data }, usePagination);\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    tableInstance;\n\n  const formikChangePassword = useFormik({\n    initialValues: {\n      oldPassword: \"\",\n      newPassword: \"\",\n      confirmNewPassword: \"\",\n      uid: \"\",\n      resetKey: \"\",\n    },\n    validationSchema: Yup.object({\n      newPassword: Yup.string()\n        .required(\"Vui lòng nhập mật khẩu\")\n        .min(6, \"Mật khẩu của bạn phải dài ít nhất 6 ký tự\")\n        .max(20, \"Mật khẩu của bạn không được quá 20 ký tự\"),\n      confirmNewPassword: Yup.string()\n        .required(\"Vui lòng nhập mật khẩu\")\n        .min(6, \"Mật khẩu của bạn phải dài ít nhất 6 ký tự\")\n        .max(20, \"Mật khẩu của bạn không được quá 20 ký tự\")\n        .oneOf([Yup.ref(\"newPassword\"), null], \"Mật khẩu phải khớp\"),\n    }),\n    onSubmit: async (values, helpers) => {\n      const request = {\n        new_password1: values.newPassword,\n        new_password2: values.confirmNewPassword,\n        uid: values.uid,\n        token: values.resetKey,\n      };\n      console.log(request);\n      axios\n        .post(`${APIs.resetPasswordConfirm}`, request)\n        .then((res) => {\n          handleCloseChangePasswordPopupModal();\n          enqueueSnackbar(\"Cập nhập mật khẩu thành công\", {\n            variant: \"success\",\n          });\n        })\n        .catch((err) => {\n          console.log(err);\n          enqueueSnackbar(\"Cập nhập mật khẩu thất bại\", { variant: \"error\" });\n        });\n    },\n  });\n\n  // SETUP FORMIK AND FUNCTIONS\n  const formikSetup = useFormik({\n    initialValues: {\n      multiplyPerSession: 0,\n      multiply: 0,\n    },\n    validationSchema: Yup.object({}),\n    onSubmit: async (values, helpers) => {\n      // console.log(values);\n      // axios\n      //   .post(`${APIs.resetPasswordConfirm}`, request)\n      //   .then((res) => {\n      //     handleCloseChangePasswordPopupModal();\n      //     enqueueSnackbar(\"Cập nhập mật khẩu thành công\", {\n      //       variant: \"success\",\n      //     });\n      //   })\n      //   .catch((err) => {\n      //     console.log(err);\n      //     enqueueSnackbar(\"Cập nhập mật khẩu thất bại\", { variant: \"error\" });\n      //   });\n    },\n  });\n\n  // FUNCTIONS FOR INPUT AMOUNT\n  const handleAmount = (\n    value: number | string | undefined,\n    fieldName: string,\n    values: CurrencyInputOnChangeValues | undefined\n  ): void => {\n    // const valueToSet = value === undefined || +value <= 0 ? 0 : value || ' ';\n    const valueToSet = value === undefined ? \"\" : value;\n    formikSetup.setFieldValue(fieldName, valueToSet);\n  };\n\n  const handleAmountMinusOne = (value: number, fieldName: string) => {\n    if (value - 1 < 1) return;\n    formikSetup.setFieldValue(fieldName, +value - 1);\n  };\n\n  const handleOrderAmountPlusOne = (value: number, fieldName: string) => {\n    formikSetup.setFieldValue(fieldName, +value + 1);\n  };\n\n  // BOT SELECT\n  const getAllAccounts = useCallback(() => {\n    axios\n      .get(APIs.allAccounts)\n      .then((res) => {\n        const data = res.data;\n        setAllBotDatas(data);\n      })\n      .catch(() => {\n        enqueueSnackbar(\"Không thể lấy tài khoản master\", { variant: \"error\" });\n      });\n  }, [enqueueSnackbar]);\n\n  const getAllPartnerBots = useCallback(() => {\n    axios\n      .get(APIs.partnerAccount)\n      .then((res) => {\n        const datas: BotData[] = res.data;\n        const partnerBotDatas = datas.filter(\n          (data) => data.status === \"active\"\n        );\n        setPartnerBotDatas(partnerBotDatas);\n      })\n      .catch((err) => {\n        enqueueSnackbar(\"Không thể lấy bot datas\", { variant: \"error\" });\n      });\n  }, [enqueueSnackbar]);\n\n  const getBalance = useCallback(\n    (id: number | string) => {\n      axios\n        .get(`${APIs.balanceById}${id}/`)\n        .then((res) => {\n          const data: BotBalance = res.data;\n          setBotBalance(data);\n        })\n        .catch(() => {\n          enqueueSnackbar(\"Không thể lấy được số dư ví\", { variant: \"error\" });\n        });\n    },\n    [enqueueSnackbar]\n  );\n\n  const convertPartnerBotsToPartnerAccountOptions = useCallback(() => {\n    if (partnerBotDatas && partnerBotDatas.length > 0) {\n      const accountOptions = partnerBotDatas.map((botData) => ({\n        value: botData.id,\n        label: botData.botname,\n      }));\n      setAccountOptions(accountOptions);\n    }\n  }, [partnerBotDatas]);\n\n  const convertAllPartnerBotsToPartnerAccountOptions = useCallback(() => {\n    if (allBotDatas && allBotDatas.length > 0) {\n      const allBotAccountOptions = allBotDatas.map((botData) => ({\n        value: botData.id,\n        label: botData.username,\n      }));\n      setAllBotAccountOptions(allBotAccountOptions);\n    }\n  }, [allBotDatas]);\n\n  useEffect(() => {\n    getAllPartnerBots();\n    getAllAccounts();\n  }, [getAllAccounts, getAllPartnerBots]);\n\n  useEffect(() => {\n    console.log(\"HERE\");\n    if (partnerBotDatas && partnerBotDatas.length > 0) {\n      if (selectedAccountType.value === \"LIVE\" && !isPartnerBotInitialized) {\n        getBalance(partnerBotDatas[0].id);\n        const firstBotOption = {\n          value: partnerBotDatas[0].id,\n          label: partnerBotDatas[0].botname,\n        };\n        setSelectedBotAccount(firstBotOption);\n        setIsPartnerBotInitialized(true);\n        dispatch(userActions.updateSelectedBotAccount(firstBotOption));\n      } else if (selectedBotAccount.value) {\n        getBalance(selectedBotAccount.value);\n      }\n\n      convertPartnerBotsToPartnerAccountOptions();\n      convertAllPartnerBotsToPartnerAccountOptions();\n    }\n  }, [\n    partnerBotDatas,\n    convertPartnerBotsToPartnerAccountOptions,\n    getBalance,\n    selectedAccountType,\n    selectedBotAccount.value,\n    convertAllPartnerBotsToPartnerAccountOptions,\n    dispatch,\n    isPartnerBotInitialized,\n  ]);\n\n  // TODO\n  // useEffect(() => {\n  //   getAllBotSignalBuySellSettings(page + 1);\n  // }, [getAllBotSignalBuySellSettings, page]);\n\n  return (\n    <>\n      <div className=\"mb-6 h-fit bg-background-80 rounded-3xl\">\n        <div className=\"flex flex-col gap-4 p-6 border-b border-ink-10 md:flex-row md:justify-between md:items-center\">\n          <h1 className=\"text-xl font-semibold text-ink-100\">\n            Danh sách Admin\n          </h1>\n          <button\n            className=\"px-3 py-[0.625rem] w-full md:w-auto rounded-xl flex justify-center items-center gap-[0.625rem] bg-primary-100\"\n            onClick={() => {\n              if (partnerBotDatas.length === 0) {\n                setModalAttributes((prev) => ({\n                  ...prev,\n                  isOpen: true,\n                  icon: images.copy.account_not_integrate,\n                  headingMessage: \"Bạn chưa liên kết tài khoản\",\n                  message: (\n                    <>\n                      Liên kết tài khoản ngay để thực hiện giao dịch cùng đội\n                      ngũ chuyên gia của AI BotTrade\n                    </>\n                  ),\n                  buttonMessage: \"Liên kết tài khoản\",\n                  handleOpen: handleOpenAccountTradePopupModal,\n                  handleClose: handleCloseAccountTradePopupModal,\n                }));\n                return;\n              }\n              handleOpenUpsertModal();\n              setIsEditing(false);\n            }}\n          >\n            <img src={images.copy.plus} alt=\"BotLambotrade\" />\n            <p className=\"font-semibold text-transparent bg-background-100 bg-clip-text\">\n              Thêm mới\n            </p>\n          </button>\n        </div>\n        {adminResults.length === 0 && (\n          <div className=\"py-[5rem] flex flex-col justify-center items-center gap-y-6\">\n            <img\n              className=\"w-[10.25rem]\"\n              srcSet={`${images.user.empty} 2x`}\n              alt=\"BotLambotrade\"\n            />\n            <p className=\"text-ink-60\">Danh sách Admin trống</p>\n          </div>\n        )}\n        {adminResults.length > 0 && (\n          <div className=\"flex flex-col p-6 gap-y-6\">\n            <div className=\"flex flex-col justify-between gap-4 md:flex-row md:items-center\">\n              {/* SEARCH */}\n              <TextInput\n                fullWidth={true}\n                name=\"search\"\n                id=\"search\"\n                type=\"text\"\n                value={searchInput}\n                onChange={(e) => {\n                  setSearchInput(e.target.value);\n                }}\n                resetValue={() => {\n                  setSearchInput(\"\");\n                }}\n                placeholder=\"Tìm kiếm\"\n                searchIcon={images.table.search}\n                searchIconClassName=\"!w-[1.25rem]\"\n                containerClassName=\"w-full md:w-[21.375rem]\"\n                inputClassName=\"!py-2 text-sm\"\n              />\n\n              <div className=\"flex flex-col gap-2 md:flex-row\">\n                <div\n                  className={`p-3 flex items-center gap-2 bg-primary-10 rounded-xl`}\n                >\n                  <p className=\"text-ink-100\">Tổng số lượng Admin:</p>\n                  <span className=\"font-bold text-transparent bg-clip-text bg-primary-100\">\n                    {admins.count?.toLocaleString()}\n                  </span>\n                  <div className=\"pl-2 border-l border-ink-20\">\n                    <img\n                      className=\"w-[1.25rem] cursor-pointer\"\n                      src={images.user.reload}\n                      alt=\"BotLambotrade\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {Object.values(selectedIds).filter((value) => value === true)\n              .length > 0 && (\n              <div className=\"flex flex-col gap-4 px-4 py-3 bg-ink-05 rounded-xl md:flex-row md:justify-between md:items-center\">\n                <p className=\"font-semibold text-ink-100\">\n                  {`Đã chọn ${\n                    Object.values(selectedIds).filter((value) => value === true)\n                      .length\n                  }`}\n                </p>\n                <div className=\"grid items-center justify-center grid-cols-2 gap-4 md:flex\">\n                  <UserManagementButton\n                    icon={images.user.remove_gold}\n                    iconHover={images.user.remove_black}\n                    classNameHover=\"background-animation\"\n                    onClick={() => {\n                      // setIsDeletingByList(true);\n                      // handleOpenPopupModal();\n                      showIsDevelopingModal();\n                    }}\n                  >\n                    Bỏ quyền Admin\n                  </UserManagementButton>\n                  <UserManagementButton\n                    icon={images.user.block_gold}\n                    iconHover={images.user.block_black}\n                    classNameHover=\"background-animation\"\n                    onClick={() => {\n                      showIsDevelopingModal();\n                      // resetAllCurrent();\n                    }}\n                  >\n                    Chặn tài khoản\n                  </UserManagementButton>\n                  <UserManagementButton\n                    icon={images.user.setting_gold}\n                    iconHover={images.user.setting_black}\n                    classNameHover=\"background-animation\"\n                    onClick={() => {\n                      handleOpenSetupPopupModal();\n                      // resetAllCurrent();\n                    }}\n                  >\n                    Cài đặt lệnh\n                  </UserManagementButton>\n                  <UserManagementButton\n                    icon={images.user.delete_gold}\n                    iconHover={images.user.delete_black}\n                    classNameHover=\"background-animation\"\n                    onClick={() => {\n                      showIsDevelopingModal();\n                      // resetAllCurrent();\n                    }}\n                  >\n                    Xoá tài khoản\n                  </UserManagementButton>\n                </div>\n              </div>\n            )}\n\n            <div\n              className={`border border-ink-05 rounded-2xl w-full ${\n                !isLargeDesktop ? \"overflow-x-scroll border-collapse\" : \"\"\n              }`}\n            >\n              <table className=\"w-full\" {...getTableProps()}>\n                <thead>\n                  {headerGroups.map((headerGroup) => (\n                    <tr {...headerGroup.getHeaderGroupProps()}>\n                      {headerGroup.headers.map((column) => (\n                        <th\n                          className={`p-4 last:w-[1%] whitespace-nowrap 2xl:whitespace-normal last:whitespace-nowrap bg-primary-05 first-of-type:rounded-tl-2xl last-of-type:rounded-tr-2xl text-sm text-ink-100 font-normal`}\n                          {...column.getHeaderProps()}\n                        >\n                          {column.render(\"Header\")}\n                        </th>\n                      ))}\n                    </tr>\n                  ))}\n                </thead>\n                <tbody {...getTableBodyProps()}>\n                  {rows.map((row) => {\n                    prepareRow(row);\n                    return (\n                      <tr\n                        className={`border-b border-ink-10 last:border-0 whitespace-nowrap text-ellipsis`}\n                        {...row.getRowProps()}\n                      >\n                        {row.cells.map((cell) => (\n                          <td\n                            className=\"p-4 last:w-[1%] last:whitespace-nowrap\"\n                            {...cell.getCellProps()}\n                          >\n                            {cell.render(\"Cell\")}\n                          </td>\n                        ))}\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            </div>\n\n            {/* PAGINATION */}\n            <div\n              className={`flex flex-col justify-center items-end md:flex-row md:justify-end md:items-center gap-2`}\n            >\n              <div>\n                <SelectInput\n                  menuRef={menuRef}\n                  value={selectedPageSizeOption}\n                  onChange={handleSelectPageSize}\n                  inputClassName=\"!py-2 !pr-8 text-sm\"\n                  indicatorContainerClassName=\"!right-3\"\n                  indicatorContainerIconClassName=\"!w-[1rem]\"\n                  menuPortalClassName={`min-w-[10.25rem] ${\n                    isMobile ? \"translate-x-[-3.2rem]\" : \"\"\n                  }`}\n                  name=\"select\"\n                  options={PAGE_SIZE_OPTIONS}\n                />\n              </div>\n\n              <ReactPaginate\n                breakLabel=\"...\"\n                onPageChange={handlePageChange}\n                marginPagesDisplayed={isMobile ? 2 : 3}\n                pageCount={totalPages}\n                previousLabel={\n                  <div\n                    onMouseLeave={() => {\n                      setIsPrevHover(false);\n                    }}\n                    onMouseEnter={() => {\n                      setIsPrevHover(true);\n                    }}\n                    className=\"p-[0.375rem] border-input-ink before:rounded-lg\"\n                  >\n                    {isPrevHover ? (\n                      <img\n                        className=\"w-[1.25rem]\"\n                        src={images.table.pagination_left_arrow_gold}\n                        alt=\"BotLambotrade\"\n                      />\n                    ) : (\n                      <img\n                        className=\"w-[1.25rem]\"\n                        src={images.table.pagination_left_arrow}\n                        alt=\"BotLambotrade\"\n                      />\n                    )}\n                  </div>\n                }\n                nextLabel={\n                  <div\n                    onMouseLeave={() => {\n                      setIsNextHover(false);\n                    }}\n                    onMouseEnter={() => {\n                      setIsNextHover(true);\n                    }}\n                    className=\"p-[0.375rem] border-input-ink before:rounded-lg\"\n                  >\n                    {isNextHover ? (\n                      <img\n                        className=\"w-[1.25rem]\"\n                        src={images.table.pagination_right_arrow_gold}\n                        alt=\"BotLambotrade\"\n                      />\n                    ) : (\n                      <img\n                        className=\"w-[1.25rem]\"\n                        src={images.table.pagination_right_arrow}\n                        alt=\"BotLambotrade\"\n                      />\n                    )}\n                  </div>\n                }\n                forcePage={page}\n                // pageClassName=\"py-[0.3125rem] px-3 border-input-ink before:rounded-lg cursor-pointer\"\n                pageLinkClassName=\"page-link relative z-10 py-[0.3125rem] px-3 border-input-ink before:rounded-lg cursor-pointer\"\n                previousClassName=\"page-item flex\"\n                previousLinkClassName=\"page-link\"\n                nextClassName=\"page-item flex\"\n                nextLinkClassName=\"page-link relative z-10\"\n                breakClassName=\"page-item py-[0.375rem] px-3 border-input-ink before:rounded-lg cursor-pointer\"\n                breakLinkClassName=\"page-link z-10\"\n                containerClassName=\"flex items-center gap-x-2 text-ink-80 text-sm\"\n                activeClassName=\"pagination-active border-primary before:rounded-lg\"\n              />\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* UPSERT MODAL */}\n      <CustomModal\n        isOpen={isUpsertModalOpen}\n        handleOpen={handleOpenUpsertModal}\n        handleClose={handleCloseUpsertModal}\n      >\n        <div className=\"absolute left-[50%] top-[50%] translate-x-[-50%] translate-y-[-50%] w-[calc(100vw-2rem)] md:w-[31.25rem] bg-background-80 rounded-3xl\">\n          <div className=\"flex items-center justify-between p-6 border-b border-ink-10\">\n            <h3 className=\"text-xl font-semibold text-ink-100\">\n              Thêm mới Admin\n            </h3>\n            <CloseOutlined\n              className=\"cursor-pointer\"\n              onClick={handleCloseUpsertModal}\n            />\n          </div>\n          <div className=\"p-6\">\n            <TextInput\n              id=\"newAdminUsername\"\n              name=\"newAdminUsername\"\n              type=\"text\"\n              label=\"Tên tài khoản\"\n              fullWidth\n              value={newAdminUsername.value}\n              onChange={(e) => {\n                setNewAdminUserName((prev) => ({\n                  ...prev,\n                  value: e.target.value,\n                }));\n              }}\n              onBlur={() => {\n                setNewAdminUserName((prev) => ({ ...prev, touched: true }));\n              }}\n              error={\n                newAdminUsername.touched && Boolean(newAdminUsername.error)\n              }\n              helperText={newAdminUsername.touched && newAdminUsername.error}\n              containerClassName=\"mb-6\"\n            />\n            <div className=\"flex justify-center md:justify-end\">\n              <CustomButton\n                className={`w-full md:w-[12rem] py-4`}\n                background={`${\n                  newAdminUsername.error ? \"bg-ink-10\" : \"bg-primary-100\"\n                }`}\n                textColor={\n                  newAdminUsername.error ? \"bg-primary-60\" : \"bg-background-100\"\n                }\n                textClassName=\"font-bold\"\n                onClick={() => {\n                  if (!newAdminUsername.error) {\n                    handleCloseUpsertModal();\n                  }\n                }}\n              >\n                Lưu\n              </CustomButton>\n            </div>\n          </div>\n        </div>\n      </CustomModal>\n\n      {/* MODAL RESET PASSWORD CONFIRM */}\n      <CustomModal\n        isOpen={isChangePasswordModalOpen}\n        handleOpen={handleOpenChangePasswordPopupModal}\n        handleClose={handleCloseChangePasswordPopupModal}\n      >\n        <div className=\"absolute left-[50%] top-[50%] translate-x-[-50%] translate-y-[-50%] w-[calc(100vw-2rem)] md:w-[31.25rem] bg-background-80 rounded-3xl\">\n          <div className=\"flex items-center justify-between p-6 border-b border-ink-10\">\n            <h3 className=\"text-xl font-semibold text-ink-100\">Đổi mật khẩu</h3>\n            <CloseOutlined\n              className=\"cursor-pointer\"\n              onClick={handleCloseChangePasswordPopupModal}\n            />\n          </div>\n          <div className=\"flex flex-col px-6 pt-6 pb-8\">\n            <TextInput\n              id=\"oldPassword\"\n              name=\"oldPassword\"\n              type=\"password\"\n              label=\"mật khẩu hiện tại\"\n              fullWidth\n              isLabelOutside\n              value={formikChangePassword.values.oldPassword}\n              onChange={formikChangePassword.handleChange}\n              onBlur={formikChangePassword.handleBlur}\n              error={\n                formikChangePassword.touched.oldPassword &&\n                Boolean(formikChangePassword.errors.oldPassword)\n              }\n              helperText={\n                formikChangePassword.touched.oldPassword &&\n                formikChangePassword.errors.oldPassword\n              }\n              helperTextEnd={`${formikChangePassword.values.oldPassword.length}/20`}\n              icon={images.input.eye}\n              containerClassName=\"mb-6\"\n              isInputDisabled={true}\n            />\n            <TextInput\n              id=\"newPassword\"\n              name=\"newPassword\"\n              type=\"password\"\n              label=\"mật khẩu mới\"\n              fullWidth\n              isLabelOutside\n              value={formikChangePassword.values.newPassword}\n              onChange={formikChangePassword.handleChange}\n              onBlur={formikChangePassword.handleBlur}\n              error={\n                formikChangePassword.touched.newPassword &&\n                Boolean(formikChangePassword.errors.newPassword)\n              }\n              helperText={\n                formikChangePassword.touched.newPassword &&\n                formikChangePassword.errors.newPassword\n              }\n              helperTextEnd={`${formikChangePassword.values.newPassword.length}/20`}\n              icon={images.input.eye}\n              containerClassName=\"mb-6\"\n            />\n            <TextInput\n              id=\"confirmNewPassword\"\n              name=\"confirmNewPassword\"\n              type=\"password\"\n              label=\"xác nhận mật khẩu\"\n              fullWidth\n              isLabelOutside\n              value={formikChangePassword.values.confirmNewPassword}\n              onChange={formikChangePassword.handleChange}\n              onBlur={formikChangePassword.handleBlur}\n              error={\n                formikChangePassword.touched.confirmNewPassword &&\n                Boolean(formikChangePassword.errors.confirmNewPassword)\n              }\n              helperText={\n                formikChangePassword.touched.confirmNewPassword &&\n                formikChangePassword.errors.confirmNewPassword\n              }\n              helperTextEnd={`${formikChangePassword.values.confirmNewPassword.length}/20`}\n              icon={images.input.eye}\n              containerClassName=\"mb-12\"\n            />\n            <div className=\"items-center justify-center gap-4\">\n              <CustomButton\n                className=\"w-full py-4\"\n                textClassName=\"font-bold\"\n                onClick={() => {\n                  // TODO\n                  // formikChangePassword.handleSubmit();\n                  showIsDevelopingModal();\n                  handleCloseChangePasswordPopupModal();\n                }}\n              >\n                Xác nhận\n              </CustomButton>\n            </div>\n          </div>\n        </div>\n      </CustomModal>\n\n      {/* Remove Modal */}\n      <CustomModalTwoButton\n        open={isRemovePopupOpen}\n        handleOpen={handleOpenRemovePopupModal}\n        handleClose={handleCloseRemovePopupModal}\n        icon={images.user.remove_gold}\n        title=\"Bỏ quyền Admin\"\n        content=\"Bạn có chắc chắn muốn xoá bỏ quyền Admin này không?\"\n        onConfirm={() => {\n          // TODO\n          // if (isDeletingByList) {\n          //   deleteSettingByListIds();\n          // } else {\n          //   deleteSettingById();\n          // }\n          showIsDevelopingModal();\n          handleCloseDeletePopupModal();\n        }}\n      />\n\n      {/* Block Modal */}\n      <CustomModalTwoButton\n        open={isBlockPopupOpen}\n        handleOpen={handleOpenBlockPopupModal}\n        handleClose={handleCloseBlockPopupModal}\n        icon={images.user.block_gold}\n        title=\"Chặn tài khoản\"\n        content=\"Bạn có chắc chắn muốn chặn tài khoản này không?\"\n        onConfirm={() => {\n          showIsDevelopingModal();\n          handleCloseBlockPopupModal();\n        }}\n      />\n\n      {/* Authorise Modal */}\n      <CustomModalTwoButton\n        open={isAuthorizePopupOpen}\n        handleOpen={handleOpenAuthorizePopupModal}\n        handleClose={handleCloseAuthorizePopupModal}\n        icon={images.user.bot}\n        title=\"Cấp quyền Bot\"\n        content=\"Bạn có chắc chắn muốn cấp quyền Bot này không?\"\n        onConfirm={() => {\n          showIsDevelopingModal();\n          handleCloseAuthorizePopupModal();\n        }}\n      />\n\n      {/* Delete Modal */}\n      <CustomModalTwoButton\n        open={isDeletePopupOpen}\n        handleOpen={handleOpenDeletePopupModal}\n        handleClose={handleCloseDeletePopupModal}\n        icon={images.user.remove_gold}\n        title=\"Xoá tài khoản\"\n        content=\"Bạn có chắc chắn muốn xoá tài khoản này không?\"\n        onConfirm={() => {\n          // if (isDeletingByList) {\n          //   deleteSettingByListIds();\n          // } else {\n          //   deleteSettingById();\n          // }\n          showIsDevelopingModal();\n          handleCloseDeletePopupModal();\n        }}\n      />\n\n      {/* POPUP Validate */}\n      <CustomValidateModel\n        isOpen={modalAttributes.isOpen}\n        icon={modalAttributes.icon}\n        headingMessage={modalAttributes.headingMessage}\n        message={modalAttributes.message}\n        buttonMessage={modalAttributes.buttonMessage}\n        handleOpen={modalAttributes.handleOpen}\n        handleClose={modalAttributes.handleClose}\n      />\n\n      {/* SETUP POPUP MODAL */}\n      <CustomModal\n        isOpen={isSetupPopupOpen}\n        handleOpen={handleOpenSetupPopupModal}\n        handleClose={handleCloseSetupPopupModal}\n      >\n        <div className=\"absolute left-[50%] top-[50%] translate-x-[-50%] translate-y-[-50%] w-[calc(100vw-2rem)] md:w-[31.25rem] bg-background-80 rounded-3xl\">\n          <div className=\"flex items-center justify-between p-6 border-b border-ink-10\">\n            <h3 className=\"text-xl font-semibold text-ink-100\">Cài đặt lệnh</h3>\n            <CloseOutlined\n              className=\"cursor-pointer\"\n              onClick={handleCloseSetupPopupModal}\n            />\n          </div>\n          <div className=\"flex flex-col gap-4 p-6 md:gap-6\">\n            <div className=\"grid items-center justify-center grid-cols-1 gap-4 md:grid-flow-col md:grid-cols-2 md:auto-cols-fr\">\n              <CustomRadio\n                checked={!isLimited}\n                onClick={() => {\n                  setIsLimited(false);\n                }}\n                containerClassName=\"flex-grow\"\n                label=\"Không giới hạn\"\n              />\n              <CustomRadio\n                checked={isLimited}\n                onClick={() => {\n                  setIsLimited(true);\n                }}\n                label=\"Giới hạn\"\n              />\n            </div>\n\n            {/* LỆNH TRONG 1 PHIÊN */}\n            <div>\n              <p className=\"mb-4 text-sm text-ink-100\">LỆNH TRONG 1 PHIÊN</p>\n              <CustomInputSpinner\n                fullWidth={true}\n                name=\"multiplyPerSession\"\n                id=\"multiplyPerSession\"\n                value={formikSetup.values.multiplyPerSession}\n                placeholder=\"Mời nhập giá trị lệnh\"\n                error={\n                  formikSetup.touched.multiplyPerSession &&\n                  Boolean(formikSetup.errors.multiplyPerSession)\n                }\n                helperText={\n                  formikSetup.touched.multiplyPerSession &&\n                  formikSetup.errors.multiplyPerSession\n                }\n                onValueChange={(value, _, values) => {\n                  handleAmount(value, \"multiplyPerSession\", values);\n                }}\n                onBlur={(e) => {\n                  formikSetup.handleBlur(e);\n                }}\n                handleValueMinusOne={() => {\n                  handleAmountMinusOne(\n                    formikSetup.values.multiplyPerSession,\n                    \"multiplyPerSession\"\n                  );\n                }}\n                handleValuePlusOne={() => {\n                  handleOrderAmountPlusOne(\n                    formikSetup.values.multiplyPerSession,\n                    \"multiplyPerSession\"\n                  );\n                }}\n                onFixedValueChange={(value: string | number) => {\n                  const plusAmount =\n                    +formikSetup.values.multiplyPerSession + +value;\n                  formikSetup.setFieldValue(\"multiplyPerSession\", plusAmount);\n                }}\n                prefix=\"X\"\n              />\n            </div>\n\n            {/* HỆ SỐ GẤP LỆNH */}\n            <div>\n              <p className=\"mb-4 text-sm text-ink-100\">HỆ SỐ GẤP LỆNH</p>\n              <CustomInputSpinner\n                fullWidth={true}\n                name=\"multiply\"\n                id=\"multiply\"\n                value={formikSetup.values.multiply}\n                placeholder=\"Mời nhập giá trị lệnh\"\n                error={\n                  formikSetup.touched.multiply &&\n                  Boolean(formikSetup.errors.multiply)\n                }\n                helperText={\n                  formikSetup.touched.multiply && formikSetup.errors.multiply\n                }\n                onValueChange={(value, _, values) => {\n                  handleAmount(value, \"multiply\", values);\n                }}\n                onBlur={(e) => {\n                  formikSetup.handleBlur(e);\n                }}\n                handleValueMinusOne={() => {\n                  handleAmountMinusOne(formikSetup.values.multiply, \"multiply\");\n                }}\n                handleValuePlusOne={() => {\n                  handleOrderAmountPlusOne(\n                    formikSetup.values.multiply,\n                    \"multiply\"\n                  );\n                }}\n                onFixedValueChange={(value: string | number) => {\n                  const plusAmount = +formikSetup.values.multiply + +value;\n                  formikSetup.setFieldValue(\"multiply\", plusAmount);\n                }}\n                prefix=\"X\"\n              />\n            </div>\n\n            <CustomButton\n              className={`py-4 md:min-w-[12rem] basis-1/2 md:basis-auto flex-grow md:flex-initial md:w-fit md:ml-auto cursor-pointer`}\n              background=\"bg-primary-100\"\n              textClassName=\"bg-background-100\"\n              onClick={() => {\n                showIsDevelopingModal();\n                handleCloseSetupPopupModal();\n              }}\n            >\n              Lưu\n            </CustomButton>\n          </div>\n        </div>\n      </CustomModal>\n    </>\n  );\n};\n\nexport default UserManagementAdmin;\n","import { faker } from \"@faker-js/faker\";\nimport { CloseOutlined } from \"@mui/icons-material\";\nimport { Tooltip } from \"@mui/material\";\nimport APIs from \"apis\";\nimport images from \"assets\";\nimport axios from \"axios\";\nimport CustomButton from \"components/CustomButton\";\nimport CustomInputSpinner from \"components/CustomInputSpinner\";\nimport CustomModal from \"components/CustomModal\";\nimport CustomModalTwoButton from \"components/CustomModalTwoButton\";\nimport CustomRadio from \"components/CustomRadio\";\nimport CustomSwitch from \"components/CustomSwitch\";\nimport CustomValidateModel from \"components/CustomValidateModal\";\nimport SelectInput from \"components/SelectInput\";\nimport TextInput from \"components/TextInput\";\nimport { useFormik } from \"formik\";\nimport { useEnqueueSnackbar } from \"hooks/useEnqueueSnackbar\";\nimport random from \"lodash/random\";\nimport moment from \"moment\";\nimport React, { FC, useCallback, useEffect, useRef, useState } from \"react\";\nimport { CurrencyInputOnChangeValues } from \"react-currency-input-field/dist/components/CurrencyInputProps\";\nimport ReactPaginate from \"react-paginate\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ActionMeta, SingleValue } from \"react-select\";\nimport { useSpring } from \"react-spring\";\nimport { Column, usePagination, useTable } from \"react-table\";\nimport { useAppDispatch, useAppSelector } from \"stores/hooks\";\nimport { uiActions } from \"stores/uiSlice\";\nimport { userActions } from \"stores/userSlice\";\nimport { BotAllData } from \"types/BotAllData\";\nimport { BotBalance } from \"types/BotBalance\";\nimport BotData from \"types/BotData\";\nimport CustomValidateModelProps from \"types/CustomValidateProps\";\nimport InputSelectOption from \"types/InputSelectOption\";\nimport { UserHistoryProps } from \"types/UserHistoryProps\";\nimport UserManagementLeaderResponse, {\n  UserManagementLeaderResponseResult,\n} from \"types/UserManagementLeaderResponse\";\nimport * as Yup from \"yup\";\nimport UserManagementButton from \"./UserManagementButton\";\n\ntype UserManagementLeaderProps = {\n  setUserHistory: React.Dispatch<React.SetStateAction<UserHistoryProps>>;\n};\n\ninterface ListMasterCopyTradeSetting {\n  master?: string | number;\n}\n\ninterface ListFollowerCopyTradeSetting {\n  follower?: string | number;\n}\n\ninterface FormikValueType {\n  followerName: string;\n  email: string;\n  role: string;\n  status: string;\n}\n\ntype Conditions = {\n  [key: string]: BubbleOptions;\n};\n\ntype BubbleOptions = {\n  [key: string]: any;\n};\n\ntype SelectedIdsType = {\n  [key: string]: boolean;\n};\n\ninterface TooltipToggle {\n  [x: string | number]: boolean;\n}\n\ninterface InputValue {\n  value: string | number;\n  error: null | string;\n  touched: boolean;\n}\n\nconst PAGE_SIZE_OPTIONS: InputSelectOption[] = [\n  { value: 10, label: \"10/page\" },\n  { value: 20, label: \"20/page\" },\n  { value: 30, label: \"30/page\" },\n  { value: 40, label: \"40/page\" },\n];\n\nconst METHOD_OWN_TYPES: InputSelectOption[] = [\n  { value: \"all\", label: \"Tất cả\" },\n  { value: \"own\", label: \"Phương pháp của tôi\" },\n  { value: \"gifted\", label: \"Phương pháp được tặng\" },\n];\n\nconst PLUS_VALUES = [5, 10, 20, 50, 100, \"All\"];\nconst MULTIPLY_VALUES = [2, 5, 10, 20, 40, 100];\nconst OPTIONS = [\n  {\n    value: 10,\n    name: \"Ten\",\n  },\n  {\n    value: 15,\n    name: \"Fifteen\",\n  },\n  {\n    value: 20,\n    name: \"Twenty\",\n  },\n  {\n    value: 25,\n    name: \"Twenty-five\",\n  },\n];\n\nconst INITIAL_BOT_BALANCE = {\n  balance: 1,\n  demo_balance: 1,\n  usdt_balance: 1,\n};\n\nconst INITIAL_SELECT_OPTIONS: InputSelectOption[] = [\n  {\n    value: \"\",\n    label: \"\",\n  },\n];\n\nconst INITIAL_SELECTED_OPTION: InputSelectOption = {\n  value: \"\",\n  label: \"\",\n};\n\nconst INITIAL_SELECTED_ACCOUNT_TYPE: InputSelectOption = {\n  value: \"LIVE\",\n  label: \"Tài khoản LIVE\",\n};\n\nconst INITIAL_FORMIK_VALUES: FormikValueType = {\n  followerName: \"\",\n  email: \"\",\n  role: \"\",\n  status: \"\",\n};\n\nconst ACCOUNT_TYPES = [\n  {\n    value: \"DEMO\",\n    label: \"Tài khoản DEMO\",\n  },\n  {\n    value: \"LIVE\",\n    label: \"Tài khoản LIVE\",\n  },\n];\n\nexport interface ICopyTradeSettingFormik {\n  accountType: string;\n  email: string;\n  balance: number;\n  masterName: string;\n  amountPerOrder: number;\n  multiply: number;\n  takeProfit: number;\n  stopLoss: number;\n}\n\nconst INITIAL_ADMIN_RESULT: UserManagementLeaderResponseResult = {\n  id: 0,\n  follower_name: \"\",\n  email: \"\",\n  role: \"\",\n  status: \"\",\n  multiply_per_session: 0,\n  multiply: 0,\n};\n\nconst options: Intl.NumberFormatOptions = {\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 3,\n  style: \"decimal\",\n};\n\nconst STATUSES_MAP = {\n  active: \"Đang hoạt động\",\n  inactive: \"Đang chặn\",\n};\n\nconst INITIAL_INPUT_VALUE = {\n  value: \"\",\n  error: null,\n  touched: false,\n};\n\nconst generateFakeData = (): UserManagementLeaderResponseResult[] => {\n  return Array(10)\n    .fill(0)\n    .map((_, index) => ({\n      id: faker.datatype.uuid(),\n      follower_name: faker.name.fullName(),\n      email: faker.internet.email(),\n      role: \"Được thêm bởi \" + faker.name.fullName(),\n      status: index % 2 === 0 ? \"active\" : \"inactive\",\n      multiply_per_session: random(0, 2),\n      multiply: random(0, 2),\n    }));\n};\n\nconst DEFAULT_INDEX_OF_CONDITIONS = \"1\";\n\nconst UserManagementLeader: FC<UserManagementLeaderProps> = ({\n  setUserHistory,\n}) => {\n  const [currentTimer, setCurrentTimer] = useState(moment());\n  const [selectedIds, setSelectedIds] = useState<SelectedIdsType>({});\n  const [selectAll, setSelectAll] = useState(0);\n  const [totalRecords, setTotalRecords] = useState(100);\n\n  // BOT\n  const [allBotDatas, setAllBotDatas] = useState<BotAllData[]>([]);\n  const [partnerBotDatas, setPartnerBotDatas] = useState<BotData[]>([]);\n  const [botBalance, setBotBalance] = useState<BotBalance>(INITIAL_BOT_BALANCE);\n  const [selectedAccountType, setSelectedAccountType] =\n    useState<InputSelectOption>(INITIAL_SELECTED_ACCOUNT_TYPE);\n  const [selectedBotAccount, setSelectedBotAccount] =\n    useState<InputSelectOption>(INITIAL_SELECTED_OPTION);\n  const [selectedMasterAccount, setSelectedMasterAccount] =\n    useState<InputSelectOption>(INITIAL_SELECTED_OPTION);\n  const [isMasterAccountValid, setIsMasterAccountValid] = useState(false);\n  const [accountOptions, setAccountOptions] = useState<InputSelectOption[]>([]);\n  const [allBotAccountOptions, setAllBotAccountOptions] = useState<\n    InputSelectOption[]\n  >([]);\n\n  // SETTINGS\n  const [leaders, setLeaders] = useState<UserManagementLeaderResponse>({\n    count: 10,\n    next: null,\n    previous: null,\n    results: [],\n  });\n  const [adminResults, setAdminResults] = useState<\n    UserManagementLeaderResponseResult[]\n  >(generateFakeData());\n  const userData = useAppSelector((state) => state.user.user);\n  const [isDeletingByList, setIsDeletingByList] = useState(false);\n  const [isLimited, setIsLimited] = useState(false);\n  const [isAutoScan, setIsAutoScan] = useState(false);\n\n  // MODAL\n  const [isUpsertModalOpen, setIsUpsertModalOpen] = useState(false);\n  const [isChangePasswordModalOpen, setIsChangePasswordModalOpen] =\n    useState(false);\n  const [isRemovePopupOpen, setIsRemovePopupOpen] = useState(false);\n  const [isBlockPopupOpen, setIsBlockPopupOpen] = useState(false);\n  const [isAuthorizePopupOpen, setIsAuthorizePopupOpen] = useState(false);\n  const [isDeletePopupOpen, setIsDeletePopupOpen] = useState(false);\n  const [isConditionPopupOpen, setIsConditionPopupOpen] = useState(false);\n  const [isSetupPopupOpen, setIsSetupPopupOpen] = useState(false);\n  const [isValidAmountPopupOpen, setIsValidAmountPopupOpen] = useState(false);\n\n  // SEARCH AND FILTER\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [selectedMethodOwnType, setSelectedMethodOwnType] =\n    useState<InputSelectOption>(METHOD_OWN_TYPES[0]);\n\n  // PAGINATION\n  const [selectedPageSizeOption, setSelectedPageSizeOption] =\n    useState<InputSelectOption>(PAGE_SIZE_OPTIONS[0]);\n  const [page, setPage] = useState(0);\n  const [totalPages, setTotalPages] = useState(10);\n  const menuRef = useRef<HTMLDivElement>(null);\n  const [isPrevHover, setIsPrevHover] = useState(false);\n  const [isNextHover, setIsNextHover] = useState(false);\n\n  const [modalAttributes, setModalAttributes] =\n    useState<CustomValidateModelProps>({\n      isOpen: false,\n      icon: \"\",\n      headingMessage: \"\",\n      message: \"\",\n      buttonMessage: \"\",\n      handleOpen: () => {},\n      handleClose: () => {},\n    });\n\n  // ! FORMIK RELATED STATES AND BUY SELL\n  const [formikValues, setFormikValues] = useState<FormikValueType>(\n    INITIAL_FORMIK_VALUES\n  );\n  const [selectedAdminResult, setSelectedAdminResult] =\n    useState<UserManagementLeaderResponseResult>(INITIAL_ADMIN_RESULT);\n  const [isEditing, setIsEditing] = useState(false);\n  const [newAdminUsername, setNewAdminUserName] =\n    useState<InputValue>(INITIAL_INPUT_VALUE);\n  const [giftUsername, setGiftUsername] =\n    useState<InputValue>(INITIAL_INPUT_VALUE);\n  const [conditionError, setConditionError] = useState(\"\");\n\n  // ! INITIAL PARTNER BOT USEFFECT\n  const [isPartnerBotInitialized, setIsPartnerBotInitialized] = useState(false);\n  const animationUpsertModalMobile = useSpring({\n    to: {\n      opacity: isUpsertModalOpen ? 1 : 0,\n      transform: isUpsertModalOpen ? \"translateX(0%)\" : \"translateX(-100%)\",\n    },\n  });\n\n  // ! RESPONSIVE\n  const isLargeDesktop = useMediaQuery({\n    query: \"(min-width: 1368px)\",\n  });\n  const isDesktop = useMediaQuery({\n    query: \"(min-width: 1224px)\",\n  });\n  const isTablet = useMediaQuery({\n    query: \"(min-width: 768px)\",\n  });\n  const isMobile = useMediaQuery({\n    query: \"(max-width: 767px)\",\n  });\n\n  const dispatch = useAppDispatch();\n  const enqueueSnackbar = useEnqueueSnackbar();\n  const navigate = useNavigate();\n  const scrollElement = useRef<HTMLDivElement>(null);\n\n  const data = React.useMemo<UserManagementLeaderResponseResult[]>(\n    () => adminResults,\n    [adminResults]\n  );\n\n  // Tooltips\n  const [isTooltipOpen, setIsTooltipOpen] = useState<TooltipToggle>({});\n\n  const handleTooltipOpen = useCallback(\n    (rowIndex: string | number) => {\n      console.log(\"handleTooltipOpen\");\n      if (!isTooltipOpen[rowIndex]) {\n        setIsTooltipOpen((prevState) => ({\n          [rowIndex]: true,\n        }));\n      }\n    },\n    [isTooltipOpen]\n  );\n\n  const handleTooltipClose = useCallback(\n    (rowIndex: string | number) => {\n      console.log(\"handleTooltipClose\");\n      if (isTooltipOpen[rowIndex]) {\n        setIsTooltipOpen((prevState) => ({\n          [rowIndex]: false,\n        }));\n      }\n    },\n    [isTooltipOpen]\n  );\n\n  const handleTooltipToggle = (rowIndex: string | number) => {\n    setIsTooltipOpen((prevState) => ({\n      [rowIndex]: !prevState[rowIndex],\n    }));\n  };\n\n  // FUNCTIONS FOR MODAL\n  const showIsDevelopingModal = useCallback(() => {\n    dispatch(uiActions.updateIsModalOpen(true));\n  }, [dispatch]);\n\n  const handleOpenUpsertModal = () => {\n    setIsUpsertModalOpen(true);\n  };\n\n  const handleCloseUpsertModal = () => {\n    setIsUpsertModalOpen(false);\n    setNewAdminUserName(INITIAL_INPUT_VALUE);\n  };\n\n  const handleOpenChangePasswordPopupModal = () => {\n    setIsChangePasswordModalOpen(true);\n  };\n\n  const handleCloseChangePasswordPopupModal = () => {\n    setIsChangePasswordModalOpen(false);\n  };\n\n  const handleOpenRemovePopupModal = () => {\n    setIsRemovePopupOpen(true);\n  };\n\n  const handleCloseRemovePopupModal = () => {\n    setIsRemovePopupOpen(false);\n  };\n\n  const handleOpenBlockPopupModal = () => {\n    setIsBlockPopupOpen(true);\n  };\n\n  const handleCloseBlockPopupModal = () => {\n    setIsBlockPopupOpen(false);\n  };\n\n  const handleOpenAuthorizePopupModal = () => {\n    setIsAuthorizePopupOpen(true);\n  };\n\n  const handleCloseAuthorizePopupModal = () => {\n    setIsAuthorizePopupOpen(false);\n  };\n\n  const handleOpenDeletePopupModal = () => {\n    setIsDeletePopupOpen(true);\n  };\n\n  const handleCloseDeletePopupModal = () => {\n    setIsDeletePopupOpen(false);\n  };\n\n  const handleOpenSetupPopupModal = () => {\n    setIsSetupPopupOpen(true);\n  };\n\n  const handleCloseSetupPopupModal = () => {\n    setIsSetupPopupOpen(false);\n  };\n\n  const handleOpenAccountTradePopupModal = () => {\n    setModalAttributes((prev) => ({\n      ...prev,\n      isOpen: true,\n    }));\n  };\n\n  const handleCloseAccountTradePopupModal = () => {\n    setModalAttributes((prev) => ({\n      ...prev,\n      isOpen: false,\n    }));\n    navigate(\"/account_trade\");\n  };\n\n  // FUNCTIONS FOR CHECKBOX\n  const toggleRow = useCallback(\n    (id: string | number) => {\n      const newSelected = { ...selectedIds };\n      newSelected[id] = !newSelected[id];\n      console.log(newSelected);\n      setSelectedIds(newSelected);\n      const totalSelected = Object.entries(newSelected).reduce(\n        (prev, value) => {\n          if (value[1]) return prev + 1;\n          return prev;\n        },\n        0\n      );\n      if (totalSelected >= data.length) {\n        setSelectAll(1);\n      } else {\n        setSelectAll(0);\n      }\n    },\n    [data.length, selectedIds]\n  );\n\n  const toggleAllRow = useCallback(() => {\n    let newSelected: SelectedIdsType = {};\n\n    if (selectAll === 0) {\n      data.forEach((x) => {\n        newSelected[x.id] = true;\n      });\n    }\n    setSelectedIds(newSelected);\n    setSelectAll((prev) => (prev === 0 ? 1 : 0));\n  }, [data, selectAll]);\n\n  // COMMON FUNCTIONS\n  // const getAllBotSignalBuySellSettings = useCallback(\n  //   (page: number) => {\n  //     if (partnerBotDatas.length > 0) {\n  //       axios\n  //         .get(`${APIs.botSignalBuySellList}`, {\n  //           params: {\n  //             page,\n  //             page_size: selectedPageSizeOption.value,\n  //           },\n  //         })\n  //         .then((res) => {\n  //           const data: BotSignalPersonal = res.data;\n  //           setBotPersonalSignalData(data);\n  //           setAllBotPersonalSignalResults(data.results);\n  //           if (data.count != null && selectedPageSizeOption.value != null) {\n  //             setTotalPages(\n  //               Math.ceil(data.count / +selectedPageSizeOption.value)\n  //             );\n  //           }\n  //         })\n  //         .catch(() => {\n  //           enqueueSnackbar('Không thể lấy bot settings!', {\n  //             variant: 'error',\n  //           });\n  //         });\n  //     }\n  //   },\n  //   [enqueueSnackbar, partnerBotDatas, selectedPageSizeOption]\n  // );\n\n  const deleteSettingById = () => {\n    axios\n      .delete(`${APIs.deleteBotSignalPersonal}${selectedAdminResult.id}`)\n      .then((res) => {\n        // TODO\n        // getAllBotSignalBuySellSettings(page + 1);\n        setSelectedIds({});\n        setSelectAll(0);\n        enqueueSnackbar(\"Xoá cấu hình thành công!\", { variant: \"success\" });\n      })\n      .catch(() => {\n        enqueueSnackbar(\"Không thể xoá cấu hình!\", { variant: \"error\" });\n      });\n  };\n\n  const deleteSettingByListIds = () => {\n    // ENTRY: string: boolean\n    const selectedListIds = Object.entries(selectedIds)\n      .filter((selected) => selected[1])\n      .map((selected) => selected[0]);\n    axios\n      .delete(`${APIs.deleteBotSignalPersonal}${selectedListIds}`)\n      .then((res) => {\n        // TODO\n        // getAllBotSignalBuySellSettings(page + 1);\n        setSelectedIds({});\n        setSelectAll(0);\n        enqueueSnackbar(\"Xoá cấu hình thành công!\", { variant: \"success\" });\n      })\n      .catch(() => {\n        enqueueSnackbar(\"Xoá cấu hình thất bại!\", { variant: \"error\" });\n      });\n  };\n\n  const updateModelData = useCallback(\n    (botPersonalSignalResult: UserManagementLeaderResponseResult) => {\n      // UPDATE FORM MODAL\n      const updatedFormikValues: FormikValueType = {\n        followerName: botPersonalSignalResult.follower_name,\n        email: botPersonalSignalResult.email,\n        role: botPersonalSignalResult.role,\n        status: botPersonalSignalResult.status,\n      };\n\n      console.log(updatedFormikValues);\n      setFormikValues(updatedFormikValues);\n    },\n    []\n  );\n\n  // SEARCH AND FILTER\n  const handleSelectMethodOwnType = (\n    option: SingleValue<InputSelectOption>,\n    actionMeta: ActionMeta<InputSelectOption>\n  ) => {\n    if (option != null) {\n      setSelectedMethodOwnType(option);\n    }\n  };\n\n  // PAGINATION FUNCTION\n  const handleSelectPageSize = (\n    option: SingleValue<InputSelectOption>,\n    actionMeta: ActionMeta<InputSelectOption>\n  ) => {\n    if (option != null) {\n      setSelectedPageSizeOption(option);\n      setPage(0);\n      // getAllBotSignalBuySellSettings(1);\n    }\n  };\n\n  const handlePageChange = useCallback(({ selected }: { selected: number }) => {\n    console.log(selected);\n    const page = selected + 1;\n    setPage(selected);\n    // TODO\n    // getAllBotSignalBuySellSettings(page);\n  }, []);\n\n  // TABLE\n  const columns = React.useMemo<Column<UserManagementLeaderResponseResult>[]>(\n    () => [\n      {\n        id: \"checkbox\",\n        accessor: \"checkbox\",\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          return (\n            <div className=\"flex items-center justify-center\">\n              <input\n                type=\"checkbox\"\n                className=\"checkbox\"\n                checked={selectedIds[original.id] === true}\n                onChange={(e) => {\n                  toggleRow(original.id);\n                }}\n              />\n            </div>\n          );\n        },\n        Header: (props) => {\n          return (\n            <div className=\"flex items-center justify-center\">\n              <input\n                type=\"checkbox\"\n                className=\"text-center checkbox\"\n                checked={selectAll === 1}\n                ref={(input) => {\n                  if (input) {\n                    input.indeterminate = selectAll === 2;\n                  }\n                }}\n                onChange={() => toggleAllRow()}\n              />\n            </div>\n          );\n        },\n        sortable: false,\n        width: 45,\n      },\n      {\n        Header: () => {\n          return <div className=\"text-left\">Biệt danh</div>;\n        },\n        accessor: \"follower_name\",\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          return (\n            <div className=\"flex items-center\">\n              <p className=\"text-sm text-ink-100\">{original.follower_name}</p>\n            </div>\n          );\n        },\n      },\n      {\n        Header: () => {\n          return <div className=\"text-left\">Email</div>;\n        },\n        accessor: \"email\",\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          return (\n            <div className=\"flex items-center\">\n              <p className=\"text-sm text-ink-100\">{original.email}</p>\n            </div>\n          );\n        },\n      },\n      {\n        Header: () => {\n          return <div className=\"text-left\">Vai trò</div>;\n        },\n        accessor: \"role\",\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          const role = original.role;\n          return (\n            <div className=\"flex gap-x-1\">\n              <p\n                className={`${\n                  role === \"Owner\"\n                    ? \"bg-primary-100 bg-clip-text text-transparent\"\n                    : \"text-ink-100\"\n                } font-medium text-sm`}\n              >\n                {role}\n              </p>\n            </div>\n          );\n        },\n      },\n      {\n        Header: () => <div className=\"text-left\">Trạng thái</div>,\n        accessor: \"setup\",\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          const multiply = original.multiply;\n          const multiplyPerSession = original.multiply_per_session;\n\n          const isNoSetup = multiply === 0 && multiplyPerSession === 0;\n\n          return (\n            <div className=\"flex text-xs\">\n              {isNoSetup && (\n                <p\n                  className={`w-fit px-2 rounded-3xl text-ink-100 leading-5 bg-purple-100`}\n                >\n                  Không giới hạn/Phiên\n                </p>\n              )}\n              {!isNoSetup && (\n                <div className=\"flex\">\n                  <p\n                    className={`w-fit px-2 rounded-3xl text-ink-100 leading-5 bg-blue-100`}\n                  >\n                    HSL/Phiên: X{multiplyPerSession}\n                  </p>\n                  <p>/</p>\n                  <p\n                    className={`w-fit px-2 rounded-3xl text-ink-100 leading-5 bg-orange-100`}\n                  >\n                    HSGL: X{multiply}\n                  </p>\n                </div>\n              )}\n            </div>\n          );\n        },\n      },\n      {\n        Header: () => <div className=\"text-left\">Trạng thái</div>,\n        accessor: \"status\",\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          const status = original.status;\n          return (\n            <div className=\"flex\">\n              <p\n                className={`w-fit px-2 rounded-[0.375rem] text-xs text-ink-100 leading-5 ${\n                  status === \"active\" ? \"bg-green-100\" : \"bg-red-100\"\n                }`}\n              >\n                {status === \"active\"\n                  ? STATUSES_MAP.active\n                  : STATUSES_MAP.inactive}\n              </p>\n            </div>\n          );\n        },\n      },\n      {\n        accessor: \"actions\",\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          return original.role !== \"Owner\" ? (\n            <div className=\"flex justify-center gap-x-1 w-[1.5rem]\">\n              <Tooltip\n                componentsProps={{\n                  tooltip: {\n                    className: \"!px-0 !py-3 !bg-dropdown !rounded-xl\",\n                  },\n                  arrow: {\n                    className:\n                      \"!w-[1rem] !translate-x-[9.6875rem] !before:bg-dropdown\",\n                    sx: {\n                      \"&::before\": {\n                        background: \"var(--bg-dropdown)\",\n                      },\n                    },\n                  },\n                }}\n                title={\n                  <>\n                    <div\n                      className=\"p-3 min-w-[11.25rem] hover:bg-primary-10 flex items-center gap-x-2 cursor-pointer\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        handleOpenRemovePopupModal();\n                        setSelectedAdminResult(original);\n                        handleTooltipClose(original.id);\n                      }}\n                    >\n                      <img\n                        className=\"w-[1.5rem]\"\n                        src={images.user.remove_gold}\n                        alt=\"BotLambotrade\"\n                      />\n                      <p className=\"text-base text-ink-100\">Bỏ quyền Leader</p>\n                    </div>\n                    <div\n                      className=\"p-3 min-w-[11.25rem] hover:bg-primary-10 flex items-center gap-x-2 cursor-pointer\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        // handleOpenUpsertModal();\n                        // setIsEditing(true);\n                        // updateModelData(original);\n                        handleTooltipClose(original.id);\n                        //TODO\n                        setUserHistory({\n                          isShowing: true,\n                          userId: 1,\n                        });\n                      }}\n                    >\n                      <img\n                        className=\"w-[1.5rem]\"\n                        src={images.user.history}\n                        alt=\"BotLambotrade\"\n                      />\n                      <p className=\"text-base text-ink-100\">\n                        Lịch sử hoạt động\n                      </p>\n                    </div>\n                    <div\n                      className=\"p-3 min-w-[11.25rem] hover:bg-primary-10 flex items-center gap-x-2 cursor-pointer\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        handleOpenBlockPopupModal();\n                        // setIsDeletingByList(false);\n                        setSelectedAdminResult(original);\n                        handleTooltipClose(original.id);\n                      }}\n                    >\n                      <img\n                        className=\"w-[1.5rem]\"\n                        src={images.user.block_gold}\n                        alt=\"BotLambotrade\"\n                      />\n                      <p className=\"text-base text-ink-100\">Chặn tài khoản</p>\n                    </div>\n                    <div\n                      className=\"p-3 min-w-[11.25rem] hover:bg-primary-10 flex items-center gap-x-2 cursor-pointer\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        // setIsDeletingByList(false);\n                        setSelectedAdminResult(original);\n                        handleTooltipClose(original.id);\n                        handleOpenSetupPopupModal();\n                      }}\n                    >\n                      <img\n                        className=\"w-[1.5rem]\"\n                        src={images.user.setting_gold}\n                        alt=\"BotLambotrade\"\n                      />\n                      <p className=\"text-base text-ink-100\">Cài đặt lệnh</p>\n                    </div>\n                    <div\n                      className=\"p-3 min-w-[11.25rem] hover:bg-primary-10 flex items-center gap-x-2 cursor-pointer\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        handleOpenAuthorizePopupModal();\n                        // setIsDeletingByList(false);\n                        setSelectedAdminResult(original);\n                        handleTooltipClose(original.id);\n                      }}\n                    >\n                      <img\n                        className=\"w-[1.5rem]\"\n                        src={images.user.bot}\n                        alt=\"BotLambotrade\"\n                      />\n                      <p className=\"text-base text-ink-100\">Cấp quyền Bot</p>\n                    </div>\n                    <div\n                      className=\"p-3 min-w-[11.25rem] hover:bg-primary-10 flex items-center gap-x-2 cursor-pointer\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        handleOpenChangePasswordPopupModal();\n                        // setIsDeletingByList(false);\n                        setSelectedAdminResult(original);\n                        handleTooltipClose(original.id);\n                      }}\n                    >\n                      <img\n                        className=\"w-[1.5rem]\"\n                        src={images.user.lock}\n                        alt=\"BotLambotrade\"\n                      />\n                      <p className=\"text-base text-ink-100\">Đổi mật khẩu</p>\n                    </div>\n                    <div\n                      className=\"p-3 min-w-[11.25rem] hover:bg-primary-10 flex items-center gap-x-2 cursor-pointer\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        handleOpenDeletePopupModal();\n                        // setIsDeletingByList(false);\n                        setSelectedAdminResult(original);\n                        handleTooltipClose(original.id);\n                      }}\n                    >\n                      <img\n                        className=\"w-[1.5rem]\"\n                        src={images.user.delete_gold}\n                        alt=\"BotLambotrade\"\n                      />\n                      <p className=\"text-base text-ink-100\">Xoá tài khoản</p>\n                    </div>\n                  </>\n                }\n                arrow\n                open={isTooltipOpen[original.id]}\n                onOpen={() => {\n                  handleTooltipOpen(original.id);\n                }}\n                onClose={() => {\n                  handleTooltipClose(original.id);\n                }}\n                disableHoverListener={!isDesktop}\n                disableFocusListener={!isDesktop}\n                disableTouchListener={!isDesktop}\n                placement=\"bottom-end\"\n                enterTouchDelay={0}\n                leaveTouchDelay={20000}\n              >\n                <img\n                  className=\"cursor-pointer\"\n                  src={images.table.actions}\n                  alt=\"BotLambotrade\"\n                  onClick={(e) => {\n                    handleTooltipToggle(original.id);\n                  }}\n                />\n              </Tooltip>\n            </div>\n          ) : (\n            <></>\n          );\n        },\n      },\n    ],\n    [\n      handleTooltipClose,\n      handleTooltipOpen,\n      isDesktop,\n      isTooltipOpen,\n      selectAll,\n      selectedIds,\n      setUserHistory,\n      toggleAllRow,\n      toggleRow,\n    ]\n  );\n\n  const tableInstance = useTable({ columns, data }, usePagination);\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    tableInstance;\n\n  const formikChangePassword = useFormik({\n    initialValues: {\n      oldPassword: \"\",\n      newPassword: \"\",\n      confirmNewPassword: \"\",\n      uid: \"\",\n      resetKey: \"\",\n    },\n    validationSchema: Yup.object({\n      newPassword: Yup.string()\n        .required(\"Vui lòng nhập mật khẩu\")\n        .min(6, \"Mật khẩu của bạn phải dài ít nhất 6 ký tự\")\n        .max(20, \"Mật khẩu của bạn không được quá 20 ký tự\"),\n      confirmNewPassword: Yup.string()\n        .required(\"Vui lòng nhập mật khẩu\")\n        .min(6, \"Mật khẩu của bạn phải dài ít nhất 6 ký tự\")\n        .max(20, \"Mật khẩu của bạn không được quá 20 ký tự\")\n        .oneOf([Yup.ref(\"newPassword\"), null], \"Mật khẩu phải khớp\"),\n    }),\n    onSubmit: async (values, helpers) => {\n      const request = {\n        new_password1: values.newPassword,\n        new_password2: values.confirmNewPassword,\n        uid: values.uid,\n        token: values.resetKey,\n      };\n      console.log(request);\n      axios\n        .post(`${APIs.resetPasswordConfirm}`, request)\n        .then((res) => {\n          handleCloseChangePasswordPopupModal();\n          enqueueSnackbar(\"Cập nhập mật khẩu thành công\", {\n            variant: \"success\",\n          });\n        })\n        .catch((err) => {\n          console.log(err);\n          enqueueSnackbar(\"Cập nhập mật khẩu thất bại\", { variant: \"error\" });\n        });\n    },\n  });\n\n  // SETUP FORMIK AND FUNCTIONS\n  const formikSetup = useFormik({\n    initialValues: {\n      multiplyPerSession: 0,\n      multiply: 0,\n    },\n    validationSchema: Yup.object({}),\n    onSubmit: async (values, helpers) => {\n      // console.log(values);\n      // axios\n      //   .post(`${APIs.resetPasswordConfirm}`, request)\n      //   .then((res) => {\n      //     handleCloseChangePasswordPopupModal();\n      //     enqueueSnackbar(\"Cập nhập mật khẩu thành công\", {\n      //       variant: \"success\",\n      //     });\n      //   })\n      //   .catch((err) => {\n      //     console.log(err);\n      //     enqueueSnackbar(\"Cập nhập mật khẩu thất bại\", { variant: \"error\" });\n      //   });\n    },\n  });\n\n  // FUNCTIONS FOR INPUT AMOUNT\n  const handleAmount = (\n    value: number | string | undefined,\n    fieldName: string,\n    values: CurrencyInputOnChangeValues | undefined\n  ): void => {\n    // const valueToSet = value === undefined || +value <= 0 ? 0 : value || ' ';\n    const valueToSet = value === undefined ? \"\" : value;\n    formikSetup.setFieldValue(fieldName, valueToSet);\n  };\n\n  const handleAmountMinusOne = (value: number, fieldName: string) => {\n    if (value - 1 < 1) return;\n    formikSetup.setFieldValue(fieldName, +value - 1);\n  };\n\n  const handleOrderAmountPlusOne = (value: number, fieldName: string) => {\n    formikSetup.setFieldValue(fieldName, +value + 1);\n  };\n\n  // BOT SELECT\n  const getAllAccounts = useCallback(() => {\n    axios\n      .get(APIs.allAccounts)\n      .then((res) => {\n        const data = res.data;\n        setAllBotDatas(data);\n      })\n      .catch(() => {\n        enqueueSnackbar(\"Không thể lấy tài khoản master\", { variant: \"error\" });\n      });\n  }, [enqueueSnackbar]);\n\n  const getAllPartnerBots = useCallback(() => {\n    axios\n      .get(APIs.partnerAccount)\n      .then((res) => {\n        const datas: BotData[] = res.data;\n        const partnerBotDatas = datas.filter(\n          (data) => data.status === \"active\"\n        );\n        setPartnerBotDatas(partnerBotDatas);\n      })\n      .catch((err) => {\n        enqueueSnackbar(\"Không thể lấy bot datas\", { variant: \"error\" });\n      });\n  }, [enqueueSnackbar]);\n\n  const getBalance = useCallback(\n    (id: number | string) => {\n      axios\n        .get(`${APIs.balanceById}${id}/`)\n        .then((res) => {\n          const data: BotBalance = res.data;\n          setBotBalance(data);\n        })\n        .catch(() => {\n          enqueueSnackbar(\"Không thể lấy được số dư ví\", { variant: \"error\" });\n        });\n    },\n    [enqueueSnackbar]\n  );\n\n  const convertPartnerBotsToPartnerAccountOptions = useCallback(() => {\n    if (partnerBotDatas && partnerBotDatas.length > 0) {\n      const accountOptions = partnerBotDatas.map((botData) => ({\n        value: botData.id,\n        label: botData.botname,\n      }));\n      setAccountOptions(accountOptions);\n    }\n  }, [partnerBotDatas]);\n\n  const convertAllPartnerBotsToPartnerAccountOptions = useCallback(() => {\n    if (allBotDatas && allBotDatas.length > 0) {\n      const allBotAccountOptions = allBotDatas.map((botData) => ({\n        value: botData.id,\n        label: botData.username,\n      }));\n      setAllBotAccountOptions(allBotAccountOptions);\n    }\n  }, [allBotDatas]);\n\n  useEffect(() => {\n    getAllPartnerBots();\n    getAllAccounts();\n  }, [getAllAccounts, getAllPartnerBots]);\n\n  useEffect(() => {\n    console.log(\"HERE\");\n    if (partnerBotDatas && partnerBotDatas.length > 0) {\n      if (selectedAccountType.value === \"LIVE\" && !isPartnerBotInitialized) {\n        getBalance(partnerBotDatas[0].id);\n        const firstBotOption = {\n          value: partnerBotDatas[0].id,\n          label: partnerBotDatas[0].botname,\n        };\n        setSelectedBotAccount(firstBotOption);\n        setIsPartnerBotInitialized(true);\n        dispatch(userActions.updateSelectedBotAccount(firstBotOption));\n      } else if (selectedBotAccount.value) {\n        getBalance(selectedBotAccount.value);\n      }\n\n      convertPartnerBotsToPartnerAccountOptions();\n      convertAllPartnerBotsToPartnerAccountOptions();\n    }\n  }, [\n    partnerBotDatas,\n    convertPartnerBotsToPartnerAccountOptions,\n    getBalance,\n    selectedAccountType,\n    selectedBotAccount.value,\n    convertAllPartnerBotsToPartnerAccountOptions,\n    dispatch,\n    isPartnerBotInitialized,\n  ]);\n\n  // TODO\n  // useEffect(() => {\n  //   getAllBotSignalBuySellSettings(page + 1);\n  // }, [getAllBotSignalBuySellSettings, page]);\n\n  return (\n    <>\n      <div className=\"mb-6 h-fit bg-background-80 rounded-3xl\">\n        <div className=\"flex flex-col gap-4 p-6 border-b border-ink-10 md:flex-row md:justify-between md:items-center\">\n          <h1 className=\"text-xl font-semibold text-ink-100\">\n            Danh sách Admin\n          </h1>\n          <button\n            className=\"px-3 py-[0.625rem] w-full md:w-auto rounded-xl flex justify-center items-center gap-[0.625rem] bg-primary-100\"\n            onClick={() => {\n              if (partnerBotDatas.length === 0) {\n                setModalAttributes((prev) => ({\n                  ...prev,\n                  isOpen: true,\n                  icon: images.copy.account_not_integrate,\n                  headingMessage: \"Bạn chưa liên kết tài khoản\",\n                  message: (\n                    <>\n                      Liên kết tài khoản ngay để thực hiện giao dịch cùng đội\n                      ngũ chuyên gia của AI BotTrade\n                    </>\n                  ),\n                  buttonMessage: \"Liên kết tài khoản\",\n                  handleOpen: handleOpenAccountTradePopupModal,\n                  handleClose: handleCloseAccountTradePopupModal,\n                }));\n                return;\n              }\n              handleOpenUpsertModal();\n              setIsEditing(false);\n            }}\n          >\n            <img src={images.copy.plus} alt=\"BotLambotrade\" />\n            <p className=\"font-semibold text-transparent bg-background-100 bg-clip-text\">\n              Thêm mới\n            </p>\n          </button>\n        </div>\n        {adminResults.length === 0 && (\n          <div className=\"py-[5rem] flex flex-col justify-center items-center gap-y-6\">\n            <img\n              className=\"w-[10.25rem]\"\n              srcSet={`${images.user.empty} 2x`}\n              alt=\"BotLambotrade\"\n            />\n            <p className=\"text-ink-60\">Danh sách Leader trống</p>\n          </div>\n        )}\n        {adminResults.length > 0 && (\n          <div className=\"flex flex-col p-6 gap-y-6\">\n            <div className=\"flex flex-col justify-between gap-4 md:flex-row md:items-center\">\n              {/* SEARCH */}\n              <TextInput\n                fullWidth={true}\n                name=\"search\"\n                id=\"search\"\n                type=\"text\"\n                value={searchInput}\n                onChange={(e) => {\n                  setSearchInput(e.target.value);\n                }}\n                resetValue={() => {\n                  setSearchInput(\"\");\n                }}\n                placeholder=\"Tìm kiếm\"\n                searchIcon={images.table.search}\n                searchIconClassName=\"!w-[1.25rem]\"\n                containerClassName=\"w-full md:w-[21.375rem]\"\n                inputClassName=\"!py-2 text-sm\"\n              />\n\n              <div className=\"flex flex-col gap-2 md:flex-row\">\n                <div\n                  className={`p-3 flex items-center gap-2 bg-primary-10 rounded-xl`}\n                >\n                  <p className=\"text-ink-100\">Tổng số lượng Leader:</p>\n                  <span className=\"font-bold text-transparent bg-clip-text bg-primary-100\">\n                    {leaders.count?.toLocaleString()}\n                  </span>\n                  <div className=\"pl-2 border-l border-ink-20\">\n                    <img\n                      className=\"w-[1.25rem] cursor-pointer\"\n                      src={images.user.reload}\n                      alt=\"BotLambotrade\"\n                    />\n                  </div>\n                </div>\n                {/* <div\n                  className={`p-3 flex items-center gap-2 bg-primary-10 rounded-xl`}\n                >\n                  <p className=\"text-ink-100\">Tự động quét thành viên</p>\n                  <CustomSwitch\n                    checked={isAutoScan}\n                    onChange={(e) => {\n                      setIsAutoScan((prev) => !prev);\n                    }}\n                  />\n                </div> */}\n              </div>\n            </div>\n\n            {Object.values(selectedIds).filter((value) => value === true)\n              .length > 0 && (\n              <div className=\"flex flex-col gap-4 px-4 py-3 bg-ink-05 rounded-xl md:flex-row md:justify-between md:items-center\">\n                <p className=\"font-semibold text-ink-100\">\n                  {`Đã chọn ${\n                    Object.values(selectedIds).filter((value) => value === true)\n                      .length\n                  }`}\n                </p>\n                <div className=\"grid items-center justify-center grid-cols-2 gap-4 md:flex\">\n                  <UserManagementButton\n                    icon={images.user.remove_gold}\n                    iconHover={images.user.remove_black}\n                    classNameHover=\"background-animation\"\n                    onClick={() => {\n                      // setIsDeletingByList(true);\n                      // handleOpenPopupModal();\n                      showIsDevelopingModal();\n                    }}\n                  >\n                    Bỏ quyền Leader\n                  </UserManagementButton>\n                  <UserManagementButton\n                    icon={images.user.block_gold}\n                    iconHover={images.user.block_black}\n                    classNameHover=\"background-animation\"\n                    onClick={() => {\n                      showIsDevelopingModal();\n                      // resetAllCurrent();\n                    }}\n                  >\n                    Chặn tài khoản\n                  </UserManagementButton>\n                  <UserManagementButton\n                    icon={images.user.setting_gold}\n                    iconHover={images.user.setting_black}\n                    classNameHover=\"background-animation\"\n                    onClick={() => {\n                      handleOpenSetupPopupModal();\n                      // resetAllCurrent();\n                    }}\n                  >\n                    Cài đặt lệnh\n                  </UserManagementButton>\n                  <UserManagementButton\n                    icon={images.user.delete_gold}\n                    iconHover={images.user.delete_black}\n                    classNameHover=\"background-animation\"\n                    onClick={() => {\n                      showIsDevelopingModal();\n                      // resetAllCurrent();\n                    }}\n                  >\n                    Xoá tài khoản\n                  </UserManagementButton>\n                </div>\n              </div>\n            )}\n\n            <div\n              className={`border border-ink-05 rounded-2xl w-full ${\n                !isLargeDesktop ? \"overflow-x-scroll border-collapse\" : \"\"\n              }`}\n            >\n              <table className=\"w-full\" {...getTableProps()}>\n                <thead>\n                  {headerGroups.map((headerGroup) => (\n                    <tr {...headerGroup.getHeaderGroupProps()}>\n                      {headerGroup.headers.map((column) => (\n                        <th\n                          className={`p-4 last:w-[1%] whitespace-nowrap 2xl:whitespace-normal last:whitespace-nowrap bg-primary-05 first-of-type:rounded-tl-2xl last-of-type:rounded-tr-2xl text-sm text-ink-100 font-normal`}\n                          {...column.getHeaderProps()}\n                        >\n                          {column.render(\"Header\")}\n                        </th>\n                      ))}\n                    </tr>\n                  ))}\n                </thead>\n                <tbody {...getTableBodyProps()}>\n                  {rows.map((row) => {\n                    prepareRow(row);\n                    return (\n                      <tr\n                        className={`border-b border-ink-10 last:border-0 whitespace-nowrap text-ellipsis`}\n                        {...row.getRowProps()}\n                      >\n                        {row.cells.map((cell) => (\n                          <td\n                            className=\"p-4 last:w-[1%] last:whitespace-nowrap\"\n                            {...cell.getCellProps()}\n                          >\n                            {cell.render(\"Cell\")}\n                          </td>\n                        ))}\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            </div>\n\n            {/* PAGINATION */}\n            <div\n              className={`flex flex-col justify-center items-end md:flex-row md:justify-end md:items-center gap-2`}\n            >\n              <div>\n                <SelectInput\n                  menuRef={menuRef}\n                  value={selectedPageSizeOption}\n                  onChange={handleSelectPageSize}\n                  inputClassName=\"!py-2 !pr-8 text-sm\"\n                  indicatorContainerClassName=\"!right-3\"\n                  indicatorContainerIconClassName=\"!w-[1rem]\"\n                  menuPortalClassName={`min-w-[10.25rem] ${\n                    isMobile ? \"translate-x-[-3.2rem]\" : \"\"\n                  }`}\n                  name=\"select\"\n                  options={PAGE_SIZE_OPTIONS}\n                />\n              </div>\n\n              <ReactPaginate\n                breakLabel=\"...\"\n                onPageChange={handlePageChange}\n                marginPagesDisplayed={isMobile ? 2 : 3}\n                pageCount={totalPages}\n                previousLabel={\n                  <div\n                    onMouseLeave={() => {\n                      setIsPrevHover(false);\n                    }}\n                    onMouseEnter={() => {\n                      setIsPrevHover(true);\n                    }}\n                    className=\"p-[0.375rem] border-input-ink before:rounded-lg\"\n                  >\n                    {isPrevHover ? (\n                      <img\n                        className=\"w-[1.25rem]\"\n                        src={images.table.pagination_left_arrow_gold}\n                        alt=\"BotLambotrade\"\n                      />\n                    ) : (\n                      <img\n                        className=\"w-[1.25rem]\"\n                        src={images.table.pagination_left_arrow}\n                        alt=\"BotLambotrade\"\n                      />\n                    )}\n                  </div>\n                }\n                nextLabel={\n                  <div\n                    onMouseLeave={() => {\n                      setIsNextHover(false);\n                    }}\n                    onMouseEnter={() => {\n                      setIsNextHover(true);\n                    }}\n                    className=\"p-[0.375rem] border-input-ink before:rounded-lg\"\n                  >\n                    {isNextHover ? (\n                      <img\n                        className=\"w-[1.25rem]\"\n                        src={images.table.pagination_right_arrow_gold}\n                        alt=\"BotLambotrade\"\n                      />\n                    ) : (\n                      <img\n                        className=\"w-[1.25rem]\"\n                        src={images.table.pagination_right_arrow}\n                        alt=\"BotLambotrade\"\n                      />\n                    )}\n                  </div>\n                }\n                forcePage={page}\n                // pageClassName=\"py-[0.3125rem] px-3 border-input-ink before:rounded-lg cursor-pointer\"\n                pageLinkClassName=\"page-link relative z-10 py-[0.3125rem] px-3 border-input-ink before:rounded-lg cursor-pointer\"\n                previousClassName=\"page-item flex\"\n                previousLinkClassName=\"page-link\"\n                nextClassName=\"page-item flex\"\n                nextLinkClassName=\"page-link relative z-10\"\n                breakClassName=\"page-item py-[0.375rem] px-3 border-input-ink before:rounded-lg cursor-pointer\"\n                breakLinkClassName=\"page-link z-10\"\n                containerClassName=\"flex items-center gap-x-2 text-ink-80 text-sm\"\n                activeClassName=\"pagination-active border-primary before:rounded-lg\"\n              />\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* UPSERT MODAL */}\n      <CustomModal\n        isOpen={isUpsertModalOpen}\n        handleOpen={handleOpenUpsertModal}\n        handleClose={handleCloseUpsertModal}\n      >\n        <div className=\"absolute left-[50%] top-[50%] translate-x-[-50%] translate-y-[-50%] w-[calc(100vw-2rem)] md:w-[31.25rem] bg-background-80 rounded-3xl\">\n          <div className=\"flex items-center justify-between p-6 border-b border-ink-10\">\n            <h3 className=\"text-xl font-semibold text-ink-100\">\n              Thêm mới Leader\n            </h3>\n            <CloseOutlined\n              className=\"cursor-pointer\"\n              onClick={handleCloseUpsertModal}\n            />\n          </div>\n          <div className=\"p-6\">\n            <TextInput\n              id=\"newAdminUsername\"\n              name=\"newAdminUsername\"\n              type=\"text\"\n              label=\"Tên tài khoản\"\n              fullWidth\n              value={newAdminUsername.value}\n              onChange={(e) => {\n                setNewAdminUserName((prev) => ({\n                  ...prev,\n                  value: e.target.value,\n                }));\n              }}\n              onBlur={() => {\n                setNewAdminUserName((prev) => ({ ...prev, touched: true }));\n              }}\n              error={\n                newAdminUsername.touched && Boolean(newAdminUsername.error)\n              }\n              helperText={newAdminUsername.touched && newAdminUsername.error}\n              containerClassName=\"mb-6\"\n            />\n            <div className=\"flex justify-center md:justify-end\">\n              <CustomButton\n                className={`w-full md:w-[12rem] py-4`}\n                background={`${\n                  newAdminUsername.error ? \"bg-ink-10\" : \"bg-primary-100\"\n                }`}\n                textColor={\n                  newAdminUsername.error ? \"bg-primary-60\" : \"bg-background-100\"\n                }\n                textClassName=\"font-bold\"\n                onClick={() => {\n                  if (!newAdminUsername.error) {\n                    handleCloseUpsertModal();\n                  }\n                }}\n              >\n                Lưu\n              </CustomButton>\n            </div>\n          </div>\n        </div>\n      </CustomModal>\n\n      {/* MODAL RESET PASSWORD CONFIRM */}\n      <CustomModal\n        isOpen={isChangePasswordModalOpen}\n        handleOpen={handleOpenChangePasswordPopupModal}\n        handleClose={handleCloseChangePasswordPopupModal}\n      >\n        <div className=\"absolute left-[50%] top-[50%] translate-x-[-50%] translate-y-[-50%] w-[calc(100vw-2rem)] md:w-[31.25rem] bg-background-80 rounded-3xl\">\n          <div className=\"flex items-center justify-between p-6 border-b border-ink-10\">\n            <h3 className=\"text-xl font-semibold text-ink-100\">Đổi mật khẩu</h3>\n            <CloseOutlined\n              className=\"cursor-pointer\"\n              onClick={handleCloseChangePasswordPopupModal}\n            />\n          </div>\n          <div className=\"flex flex-col px-6 pt-6 pb-8\">\n            <TextInput\n              id=\"oldPassword\"\n              name=\"oldPassword\"\n              type=\"password\"\n              label=\"mật khẩu hiện tại\"\n              fullWidth\n              isLabelOutside\n              value={formikChangePassword.values.oldPassword}\n              onChange={formikChangePassword.handleChange}\n              onBlur={formikChangePassword.handleBlur}\n              error={\n                formikChangePassword.touched.oldPassword &&\n                Boolean(formikChangePassword.errors.oldPassword)\n              }\n              helperText={\n                formikChangePassword.touched.oldPassword &&\n                formikChangePassword.errors.oldPassword\n              }\n              helperTextEnd={`${formikChangePassword.values.oldPassword.length}/20`}\n              icon={images.input.eye}\n              containerClassName=\"mb-6\"\n              isInputDisabled={true}\n            />\n            <TextInput\n              id=\"newPassword\"\n              name=\"newPassword\"\n              type=\"password\"\n              label=\"mật khẩu mới\"\n              fullWidth\n              isLabelOutside\n              value={formikChangePassword.values.newPassword}\n              onChange={formikChangePassword.handleChange}\n              onBlur={formikChangePassword.handleBlur}\n              error={\n                formikChangePassword.touched.newPassword &&\n                Boolean(formikChangePassword.errors.newPassword)\n              }\n              helperText={\n                formikChangePassword.touched.newPassword &&\n                formikChangePassword.errors.newPassword\n              }\n              helperTextEnd={`${formikChangePassword.values.newPassword.length}/20`}\n              icon={images.input.eye}\n              containerClassName=\"mb-6\"\n            />\n            <TextInput\n              id=\"confirmNewPassword\"\n              name=\"confirmNewPassword\"\n              type=\"password\"\n              label=\"xác nhận mật khẩu\"\n              fullWidth\n              isLabelOutside\n              value={formikChangePassword.values.confirmNewPassword}\n              onChange={formikChangePassword.handleChange}\n              onBlur={formikChangePassword.handleBlur}\n              error={\n                formikChangePassword.touched.confirmNewPassword &&\n                Boolean(formikChangePassword.errors.confirmNewPassword)\n              }\n              helperText={\n                formikChangePassword.touched.confirmNewPassword &&\n                formikChangePassword.errors.confirmNewPassword\n              }\n              helperTextEnd={`${formikChangePassword.values.confirmNewPassword.length}/20`}\n              icon={images.input.eye}\n              containerClassName=\"mb-12\"\n            />\n            <div className=\"items-center justify-center gap-4\">\n              <CustomButton\n                className=\"w-full py-4\"\n                textClassName=\"font-bold\"\n                onClick={() => {\n                  // TODO\n                  // formikChangePassword.handleSubmit();\n                  showIsDevelopingModal();\n                  handleCloseChangePasswordPopupModal();\n                }}\n              >\n                Xác nhận\n              </CustomButton>\n            </div>\n          </div>\n        </div>\n      </CustomModal>\n\n      {/* Remove Modal */}\n      <CustomModalTwoButton\n        open={isRemovePopupOpen}\n        handleOpen={handleOpenRemovePopupModal}\n        handleClose={handleCloseRemovePopupModal}\n        icon={images.user.remove_gold}\n        title=\"Bỏ quyền Leader\"\n        content=\"Bạn có chắc chắn muốn xoá bỏ quyền Leader này không?\"\n        onConfirm={() => {\n          // TODO\n          // if (isDeletingByList) {\n          //   deleteSettingByListIds();\n          // } else {\n          //   deleteSettingById();\n          // }\n          showIsDevelopingModal();\n          handleCloseDeletePopupModal();\n        }}\n      />\n\n      {/* Block Modal */}\n      <CustomModalTwoButton\n        open={isBlockPopupOpen}\n        handleOpen={handleOpenBlockPopupModal}\n        handleClose={handleCloseBlockPopupModal}\n        icon={images.user.block_gold}\n        title=\"Chặn tài khoản\"\n        content=\"Bạn có chắc chắn muốn chặn tài khoản này không?\"\n        onConfirm={() => {\n          showIsDevelopingModal();\n          handleCloseBlockPopupModal();\n        }}\n      />\n\n      {/* Authorise Modal */}\n      <CustomModalTwoButton\n        open={isAuthorizePopupOpen}\n        handleOpen={handleOpenAuthorizePopupModal}\n        handleClose={handleCloseAuthorizePopupModal}\n        icon={images.user.bot}\n        title=\"Cấp quyền Bot\"\n        content=\"Bạn có chắc chắn muốn cấp quyền Bot này không?\"\n        onConfirm={() => {\n          showIsDevelopingModal();\n          handleCloseAuthorizePopupModal();\n        }}\n      />\n\n      {/* Delete Modal */}\n      <CustomModalTwoButton\n        open={isDeletePopupOpen}\n        handleOpen={handleOpenDeletePopupModal}\n        handleClose={handleCloseDeletePopupModal}\n        icon={images.user.remove_gold}\n        title=\"Xoá tài khoản\"\n        content=\"Bạn có chắc chắn muốn xoá tài khoản này không?\"\n        onConfirm={() => {\n          // if (isDeletingByList) {\n          //   deleteSettingByListIds();\n          // } else {\n          //   deleteSettingById();\n          // }\n          showIsDevelopingModal();\n          handleCloseDeletePopupModal();\n        }}\n      />\n\n      {/* POPUP Validate */}\n      <CustomValidateModel\n        isOpen={modalAttributes.isOpen}\n        icon={modalAttributes.icon}\n        headingMessage={modalAttributes.headingMessage}\n        message={modalAttributes.message}\n        buttonMessage={modalAttributes.buttonMessage}\n        handleOpen={modalAttributes.handleOpen}\n        handleClose={modalAttributes.handleClose}\n      />\n\n      {/* SETUP POPUP MODAL */}\n      <CustomModal\n        isOpen={isSetupPopupOpen}\n        handleOpen={handleOpenSetupPopupModal}\n        handleClose={handleCloseSetupPopupModal}\n      >\n        <div className=\"absolute left-[50%] top-[50%] translate-x-[-50%] translate-y-[-50%] w-[calc(100vw-2rem)] md:w-[31.25rem] bg-background-80 rounded-3xl\">\n          <div className=\"flex items-center justify-between p-6 border-b border-ink-10\">\n            <h3 className=\"text-xl font-semibold text-ink-100\">Cài đặt lệnh</h3>\n            <CloseOutlined\n              className=\"cursor-pointer\"\n              onClick={handleCloseSetupPopupModal}\n            />\n          </div>\n          <div className=\"flex flex-col gap-4 p-6 md:gap-6\">\n            <div className=\"grid items-center justify-center grid-cols-1 gap-4 md:grid-flow-col md:grid-cols-2 md:auto-cols-fr\">\n              <CustomRadio\n                checked={!isLimited}\n                onClick={() => {\n                  setIsLimited(false);\n                }}\n                containerClassName=\"flex-grow\"\n                label=\"Không giới hạn\"\n              />\n              <CustomRadio\n                checked={isLimited}\n                onClick={() => {\n                  setIsLimited(true);\n                }}\n                label=\"Giới hạn\"\n              />\n            </div>\n\n            {/* LỆNH TRONG 1 PHIÊN */}\n            <div>\n              <p className=\"mb-4 text-sm text-ink-100\">LỆNH TRONG 1 PHIÊN</p>\n              <CustomInputSpinner\n                fullWidth={true}\n                name=\"multiplyPerSession\"\n                id=\"multiplyPerSession\"\n                value={formikSetup.values.multiplyPerSession}\n                placeholder=\"Mời nhập giá trị lệnh\"\n                error={\n                  formikSetup.touched.multiplyPerSession &&\n                  Boolean(formikSetup.errors.multiplyPerSession)\n                }\n                helperText={\n                  formikSetup.touched.multiplyPerSession &&\n                  formikSetup.errors.multiplyPerSession\n                }\n                onValueChange={(value, _, values) => {\n                  handleAmount(value, \"multiplyPerSession\", values);\n                }}\n                onBlur={(e) => {\n                  formikSetup.handleBlur(e);\n                }}\n                handleValueMinusOne={() => {\n                  handleAmountMinusOne(\n                    formikSetup.values.multiplyPerSession,\n                    \"multiplyPerSession\"\n                  );\n                }}\n                handleValuePlusOne={() => {\n                  handleOrderAmountPlusOne(\n                    formikSetup.values.multiplyPerSession,\n                    \"multiplyPerSession\"\n                  );\n                }}\n                onFixedValueChange={(value: string | number) => {\n                  const plusAmount =\n                    +formikSetup.values.multiplyPerSession + +value;\n                  formikSetup.setFieldValue(\"multiplyPerSession\", plusAmount);\n                }}\n                prefix=\"X\"\n              />\n            </div>\n\n            {/* HỆ SỐ GẤP LỆNH */}\n            <div>\n              <p className=\"mb-4 text-sm text-ink-100\">HỆ SỐ GẤP LỆNH</p>\n              <CustomInputSpinner\n                fullWidth={true}\n                name=\"multiply\"\n                id=\"multiply\"\n                value={formikSetup.values.multiply}\n                placeholder=\"Mời nhập giá trị lệnh\"\n                error={\n                  formikSetup.touched.multiply &&\n                  Boolean(formikSetup.errors.multiply)\n                }\n                helperText={\n                  formikSetup.touched.multiply && formikSetup.errors.multiply\n                }\n                onValueChange={(value, _, values) => {\n                  handleAmount(value, \"multiply\", values);\n                }}\n                onBlur={(e) => {\n                  formikSetup.handleBlur(e);\n                }}\n                handleValueMinusOne={() => {\n                  handleAmountMinusOne(formikSetup.values.multiply, \"multiply\");\n                }}\n                handleValuePlusOne={() => {\n                  handleOrderAmountPlusOne(\n                    formikSetup.values.multiply,\n                    \"multiply\"\n                  );\n                }}\n                onFixedValueChange={(value: string | number) => {\n                  const plusAmount = +formikSetup.values.multiply + +value;\n                  formikSetup.setFieldValue(\"multiply\", plusAmount);\n                }}\n                prefix=\"X\"\n              />\n            </div>\n\n            <CustomButton\n              className={`py-4 md:min-w-[12rem] basis-1/2 md:basis-auto flex-grow md:flex-initial md:w-fit md:ml-auto cursor-pointer`}\n              background=\"bg-primary-100\"\n              textClassName=\"bg-background-100\"\n              onClick={() => {\n                showIsDevelopingModal();\n                handleCloseSetupPopupModal();\n              }}\n            >\n              Lưu\n            </CustomButton>\n          </div>\n        </div>\n      </CustomModal>\n    </>\n  );\n};\n\nexport default UserManagementLeader;\n","import CustomSwitch from 'components/CustomSwitch';\nimport { FC } from 'react';\n\ninterface CustomToggleProps {\n  className?: string;\n  content: string;\n  checked: boolean;\n  onChange: () => void;\n}\n\nconst CustomToggle: FC<CustomToggleProps> = ({\n  className = '',\n  content,\n  checked,\n  onChange,\n}) => {\n  return (\n    <div\n      className={`p-3 flex items-center gap-2 bg-primary-10 rounded-xl ${className}`}\n    >\n      <p className=\"text-ink-100\">{content}</p>\n      <CustomSwitch checked={checked} onChange={onChange} />\n    </div>\n  );\n};\n\nexport default CustomToggle;\n","import CustomToggle from \"components/CustomToggle\";\nimport React, { FC } from \"react\";\nimport { useAppSelector } from \"stores/hooks\";\nimport { isAdmin, isLeader } from \"utils/helpers\";\n\ntype Roles = {\n  isAdmin: boolean;\n  isLeader: boolean;\n  isUser: boolean;\n};\n\nconst DEFAULT_ROLES: Roles = {\n  isAdmin: false,\n  isLeader: false,\n  isUser: false,\n};\n\ntype UserManagementTypeProps = {\n  selectedRoles: Roles;\n  setSelectedRoles: React.Dispatch<React.SetStateAction<Roles>>;\n  isAutoScanUsers: boolean;\n  setIsAutoScanUsers: React.Dispatch<React.SetStateAction<boolean>>;\n};\n\nconst UserManagementType: FC<UserManagementTypeProps> = ({\n  selectedRoles,\n  setSelectedRoles,\n  isAutoScanUsers,\n  setIsAutoScanUsers,\n}) => {\n  const user = useAppSelector((state) => state.user.user);\n\n  return (\n    <div className=\"flex flex-col items-start justify-between gap-4 mb-6 md:flex-row md:items-center\">\n      {/* OPTIONS */}\n      <div className={`flex items-center gap-4`}>\n        {isAdmin(user) && (\n          <div\n            className={`rounded-xl px-6 py-3 cursor-pointer ${\n              selectedRoles.isAdmin\n                ? \"border-primary bg-primary-10\"\n                : \"bg-primary-05\"\n            } whitespace-nowrap`}\n            onClick={() => {\n              setSelectedRoles((prev) => ({\n                ...DEFAULT_ROLES,\n                isAdmin: true,\n              }));\n            }}\n          >\n            <p\n              className={`${\n                selectedRoles.isAdmin\n                  ? \"bg-primary-100 bg-clip-text text-transparent font-semibold\"\n                  : \"text-ink-60 font-medium\"\n              }`}\n            >\n              Admin\n            </p>\n          </div>\n        )}\n        {isLeader(user) && (\n          <div\n            className={`px-6 py-3 rounded-xl cursor-pointer ${\n              selectedRoles.isLeader\n                ? \"border-primary bg-primary-10\"\n                : \"bg-primary-05\"\n            } whitespace-nowrap`}\n            onClick={() => {\n              setSelectedRoles((prev) => ({\n                ...DEFAULT_ROLES,\n                isLeader: true,\n              }));\n            }}\n          >\n            <p\n              className={`${\n                selectedRoles.isLeader\n                  ? \"bg-primary-100 bg-clip-text text-transparent font-semibold\"\n                  : \"text-ink-60 font-medium\"\n              }`}\n            >\n              Leader\n            </p>\n          </div>\n        )}\n        <div\n          className={`px-6 py-3 rounded-xl cursor-pointer ${\n            selectedRoles.isUser\n              ? \"border-primary bg-primary-10\"\n              : \"bg-primary-05\"\n          } whitespace-nowrap`}\n          onClick={() => {\n            setSelectedRoles((prev) => ({\n              ...DEFAULT_ROLES,\n              isUser: true,\n            }));\n          }}\n        >\n          <p\n            className={`${\n              selectedRoles.isUser\n                ? \"bg-primary-100 bg-clip-text text-transparent font-semibold\"\n                : \"text-ink-60 font-medium\"\n            }`}\n          >\n            User\n          </p>\n        </div>\n      </div>\n\n      {/* SWITCH */}\n      <CustomToggle\n        content=\"Tự động quét thành viên\"\n        checked={isAutoScanUsers}\n        onChange={() => {\n          setIsAutoScanUsers((prev) => !prev);\n        }}\n      />\n    </div>\n  );\n};\n\nexport default UserManagementType;\n","import { faker } from \"@faker-js/faker\";\nimport { CloseOutlined } from \"@mui/icons-material\";\nimport { Tooltip } from \"@mui/material\";\nimport APIs from \"apis\";\nimport images from \"assets\";\nimport axios from \"axios\";\nimport CustomButton from \"components/CustomButton\";\nimport CustomModal from \"components/CustomModal\";\nimport CustomModalTwoButton from \"components/CustomModalTwoButton\";\nimport CustomSwitch from \"components/CustomSwitch\";\nimport CustomValidateModel from \"components/CustomValidateModal\";\nimport SelectInput from \"components/SelectInput\";\nimport TextInput from \"components/TextInput\";\nimport { useFormik } from \"formik\";\nimport { useEnqueueSnackbar } from \"hooks/useEnqueueSnackbar\";\nimport moment from \"moment\";\nimport React, { FC, useCallback, useEffect, useRef, useState } from \"react\";\nimport { CurrencyInputOnChangeValues } from \"react-currency-input-field/dist/components/CurrencyInputProps\";\nimport ReactPaginate from \"react-paginate\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ActionMeta, SingleValue } from \"react-select\";\nimport { useSpring } from \"react-spring\";\nimport { Column, usePagination, useTable } from \"react-table\";\nimport { useAppDispatch, useAppSelector } from \"stores/hooks\";\nimport { uiActions } from \"stores/uiSlice\";\nimport { userActions } from \"stores/userSlice\";\nimport { BotAllData } from \"types/BotAllData\";\nimport { BotBalance } from \"types/BotBalance\";\nimport BotData from \"types/BotData\";\nimport CustomValidateModelProps from \"types/CustomValidateProps\";\nimport InputSelectOption from \"types/InputSelectOption\";\nimport { UserHistoryProps } from \"types/UserHistoryProps\";\nimport UserManagementUserResponse, {\n  UserManagementUserResponseResult,\n} from \"types/UserManagementUserResponse\";\nimport * as Yup from \"yup\";\nimport UserManagementButton from \"./UserManagementButton\";\n\ntype UserManagementUserProps = {\n  setUserHistory: React.Dispatch<React.SetStateAction<UserHistoryProps>>;\n};\n\ninterface ListMasterCopyTradeSetting {\n  master?: string | number;\n}\n\ninterface ListFollowerCopyTradeSetting {\n  follower?: string | number;\n}\n\ninterface FormikValueType {\n  followerName: string;\n  email: string;\n  status: string;\n}\n\ntype Conditions = {\n  [key: string]: BubbleOptions;\n};\n\ntype BubbleOptions = {\n  [key: string]: any;\n};\n\ntype SelectedIdsType = {\n  [key: string]: boolean;\n};\n\ninterface TooltipToggle {\n  [x: string | number]: boolean;\n}\n\ninterface InputValue {\n  value: string | number;\n  error: null | string;\n  touched: boolean;\n}\n\nconst PAGE_SIZE_OPTIONS: InputSelectOption[] = [\n  { value: 10, label: \"10/page\" },\n  { value: 20, label: \"20/page\" },\n  { value: 30, label: \"30/page\" },\n  { value: 40, label: \"40/page\" },\n];\n\nconst METHOD_OWN_TYPES: InputSelectOption[] = [\n  { value: \"all\", label: \"Tất cả\" },\n  { value: \"own\", label: \"Phương pháp của tôi\" },\n  { value: \"gifted\", label: \"Phương pháp được tặng\" },\n];\n\nconst PLUS_VALUES = [5, 10, 20, 50, 100, \"All\"];\nconst MULTIPLY_VALUES = [2, 5, 10, 20, 40, 100];\nconst OPTIONS = [\n  {\n    value: 10,\n    name: \"Ten\",\n  },\n  {\n    value: 15,\n    name: \"Fifteen\",\n  },\n  {\n    value: 20,\n    name: \"Twenty\",\n  },\n  {\n    value: 25,\n    name: \"Twenty-five\",\n  },\n];\n\nconst INITIAL_BOT_BALANCE = {\n  balance: 1,\n  demo_balance: 1,\n  usdt_balance: 1,\n};\n\nconst INITIAL_SELECT_OPTIONS: InputSelectOption[] = [\n  {\n    value: \"\",\n    label: \"\",\n  },\n];\n\nconst INITIAL_SELECTED_OPTION: InputSelectOption = {\n  value: \"\",\n  label: \"\",\n};\n\nconst INITIAL_SELECTED_ACCOUNT_TYPE: InputSelectOption = {\n  value: \"LIVE\",\n  label: \"Tài khoản LIVE\",\n};\n\nconst INITIAL_FORMIK_VALUES: FormikValueType = {\n  followerName: \"\",\n  email: \"\",\n  status: \"\",\n};\n\nconst ACCOUNT_TYPES = [\n  {\n    value: \"DEMO\",\n    label: \"Tài khoản DEMO\",\n  },\n  {\n    value: \"LIVE\",\n    label: \"Tài khoản LIVE\",\n  },\n];\n\nexport interface ICopyTradeSettingFormik {\n  accountType: string;\n  email: string;\n  balance: number;\n  masterName: string;\n  amountPerOrder: number;\n  multiply: number;\n  takeProfit: number;\n  stopLoss: number;\n}\n\nconst INITIAL_ADMIN_RESULT: UserManagementUserResponseResult = {\n  id: 0,\n  follower_name: \"\",\n  email: \"\",\n  status: \"\",\n};\n\nconst options: Intl.NumberFormatOptions = {\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 3,\n  style: \"decimal\",\n};\n\nconst STATUSES_MAP = {\n  active: \"Đang hoạt động\",\n  inactive: \"Đang chặn\",\n};\n\nconst INITIAL_INPUT_VALUE = {\n  value: \"\",\n  error: null,\n  touched: false,\n};\n\nconst generateFakeData = (): UserManagementUserResponseResult[] => {\n  return Array(10)\n    .fill(0)\n    .map((_, index) => ({\n      id: faker.datatype.uuid(),\n      follower_name: faker.name.fullName(),\n      email: faker.internet.email(),\n      status: index % 2 === 0 ? \"active\" : \"inactive\",\n    }));\n};\n\nconst DEFAULT_INDEX_OF_CONDITIONS = \"1\";\n\nconst UserManagementUser: FC<UserManagementUserProps> = ({\n  setUserHistory,\n}) => {\n  const [currentTimer, setCurrentTimer] = useState(moment());\n  const [selectedIds, setSelectedIds] = useState<SelectedIdsType>({});\n  const [selectAll, setSelectAll] = useState(0);\n  const [totalRecords, setTotalRecords] = useState(100);\n\n  // BOT\n  const [allBotDatas, setAllBotDatas] = useState<BotAllData[]>([]);\n  const [partnerBotDatas, setPartnerBotDatas] = useState<BotData[]>([]);\n  const [botBalance, setBotBalance] = useState<BotBalance>(INITIAL_BOT_BALANCE);\n  const [selectedAccountType, setSelectedAccountType] =\n    useState<InputSelectOption>(INITIAL_SELECTED_ACCOUNT_TYPE);\n  const [selectedBotAccount, setSelectedBotAccount] =\n    useState<InputSelectOption>(INITIAL_SELECTED_OPTION);\n  const [selectedMasterAccount, setSelectedMasterAccount] =\n    useState<InputSelectOption>(INITIAL_SELECTED_OPTION);\n  const [isMasterAccountValid, setIsMasterAccountValid] = useState(false);\n  const [accountOptions, setAccountOptions] = useState<InputSelectOption[]>([]);\n  const [allBotAccountOptions, setAllBotAccountOptions] = useState<\n    InputSelectOption[]\n  >([]);\n\n  // SETTINGS\n  const [users, setAdmins] = useState<UserManagementUserResponse>({\n    count: 10000,\n    next: null,\n    previous: null,\n    results: [],\n  });\n  const [adminResults, setAdminResults] = useState<\n    UserManagementUserResponseResult[]\n  >(generateFakeData());\n  const userData = useAppSelector((state) => state.user.user);\n  const [isDeletingByList, setIsDeletingByList] = useState(false);\n  const [isLimited, setIsLimited] = useState(false);\n  const [isAutoScan, setIsAutoScan] = useState(false);\n\n  // MODAL\n  const [isUpsertModalOpen, setIsUpsertModalOpen] = useState(false);\n  const [isChangePasswordModalOpen, setIsChangePasswordModalOpen] =\n    useState(false);\n  const [isRemovePopupOpen, setIsRemovePopupOpen] = useState(false);\n  const [isBlockPopupOpen, setIsBlockPopupOpen] = useState(false);\n  const [isAuthorizePopupOpen, setIsAuthorizePopupOpen] = useState(false);\n  const [isDeletePopupOpen, setIsDeletePopupOpen] = useState(false);\n  const [isConditionPopupOpen, setIsConditionPopupOpen] = useState(false);\n  const [isSetupPopupOpen, setIsSetupPopupOpen] = useState(false);\n  const [isValidAmountPopupOpen, setIsValidAmountPopupOpen] = useState(false);\n\n  // SEARCH AND FILTER\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [selectedMethodOwnType, setSelectedMethodOwnType] =\n    useState<InputSelectOption>(METHOD_OWN_TYPES[0]);\n\n  // PAGINATION\n  const [selectedPageSizeOption, setSelectedPageSizeOption] =\n    useState<InputSelectOption>(PAGE_SIZE_OPTIONS[0]);\n  const [page, setPage] = useState(0);\n  const [totalPages, setTotalPages] = useState(10);\n  const menuRef = useRef<HTMLDivElement>(null);\n  const [isPrevHover, setIsPrevHover] = useState(false);\n  const [isNextHover, setIsNextHover] = useState(false);\n\n  const [modalAttributes, setModalAttributes] =\n    useState<CustomValidateModelProps>({\n      isOpen: false,\n      icon: \"\",\n      headingMessage: \"\",\n      message: \"\",\n      buttonMessage: \"\",\n      handleOpen: () => {},\n      handleClose: () => {},\n    });\n\n  // ! FORMIK RELATED STATES AND BUY SELL\n  const [formikValues, setFormikValues] = useState<FormikValueType>(\n    INITIAL_FORMIK_VALUES\n  );\n  const [selectedAdminResult, setSelectedAdminResult] =\n    useState<UserManagementUserResponseResult>(INITIAL_ADMIN_RESULT);\n  const [isEditing, setIsEditing] = useState(false);\n  const [newAdminUsername, setNewAdminUserName] =\n    useState<InputValue>(INITIAL_INPUT_VALUE);\n  const [giftUsername, setGiftUsername] =\n    useState<InputValue>(INITIAL_INPUT_VALUE);\n  const [conditionError, setConditionError] = useState(\"\");\n\n  // ! INITIAL PARTNER BOT USEFFECT\n  const [isPartnerBotInitialized, setIsPartnerBotInitialized] = useState(false);\n  const animationUpsertModalMobile = useSpring({\n    to: {\n      opacity: isUpsertModalOpen ? 1 : 0,\n      transform: isUpsertModalOpen ? \"translateX(0%)\" : \"translateX(-100%)\",\n    },\n  });\n\n  // ! RESPONSIVE\n  const isLargeDesktop = useMediaQuery({\n    query: \"(min-width: 1368px)\",\n  });\n  const isDesktop = useMediaQuery({\n    query: \"(min-width: 1224px)\",\n  });\n  const isTablet = useMediaQuery({\n    query: \"(min-width: 768px)\",\n  });\n  const isMobile = useMediaQuery({\n    query: \"(max-width: 767px)\",\n  });\n\n  const dispatch = useAppDispatch();\n  const enqueueSnackbar = useEnqueueSnackbar();\n  const navigate = useNavigate();\n  const scrollElement = useRef<HTMLDivElement>(null);\n\n  const data = React.useMemo<UserManagementUserResponseResult[]>(\n    () => adminResults,\n    [adminResults]\n  );\n\n  // Tooltips\n  const [isTooltipOpen, setIsTooltipOpen] = useState<TooltipToggle>({});\n\n  const handleTooltipOpen = useCallback(\n    (rowIndex: string | number) => {\n      console.log(\"handleTooltipOpen\");\n      if (!isTooltipOpen[rowIndex]) {\n        setIsTooltipOpen((prevState) => ({\n          [rowIndex]: true,\n        }));\n      }\n    },\n    [isTooltipOpen]\n  );\n\n  const handleTooltipClose = useCallback(\n    (rowIndex: string | number) => {\n      console.log(\"handleTooltipClose\");\n      if (isTooltipOpen[rowIndex]) {\n        setIsTooltipOpen((prevState) => ({\n          [rowIndex]: false,\n        }));\n      }\n    },\n    [isTooltipOpen]\n  );\n\n  const handleTooltipToggle = (rowIndex: string | number) => {\n    setIsTooltipOpen((prevState) => ({\n      [rowIndex]: !prevState[rowIndex],\n    }));\n  };\n\n  // FUNCTIONS FOR MODAL\n  const showIsDevelopingModal = useCallback(() => {\n    dispatch(uiActions.updateIsModalOpen(true));\n  }, [dispatch]);\n\n  const handleOpenUpsertModal = () => {\n    setIsUpsertModalOpen(true);\n  };\n\n  const handleCloseUpsertModal = () => {\n    setIsUpsertModalOpen(false);\n    setNewAdminUserName(INITIAL_INPUT_VALUE);\n  };\n\n  const handleOpenChangePasswordPopupModal = () => {\n    setIsChangePasswordModalOpen(true);\n  };\n\n  const handleCloseChangePasswordPopupModal = () => {\n    setIsChangePasswordModalOpen(false);\n  };\n\n  const handleOpenRemovePopupModal = () => {\n    setIsRemovePopupOpen(true);\n  };\n\n  const handleCloseRemovePopupModal = () => {\n    setIsRemovePopupOpen(false);\n  };\n\n  const handleOpenBlockPopupModal = () => {\n    setIsBlockPopupOpen(true);\n  };\n\n  const handleCloseBlockPopupModal = () => {\n    setIsBlockPopupOpen(false);\n  };\n\n  const handleOpenAuthorizePopupModal = () => {\n    setIsAuthorizePopupOpen(true);\n  };\n\n  const handleCloseAuthorizePopupModal = () => {\n    setIsAuthorizePopupOpen(false);\n  };\n\n  const handleOpenDeletePopupModal = () => {\n    setIsDeletePopupOpen(true);\n  };\n\n  const handleCloseDeletePopupModal = () => {\n    setIsDeletePopupOpen(false);\n  };\n\n  const handleOpenSetupPopupModal = () => {\n    setIsSetupPopupOpen(true);\n  };\n\n  const handleCloseSetupPopupModal = () => {\n    setIsSetupPopupOpen(false);\n  };\n\n  const handleOpenAccountTradePopupModal = () => {\n    setModalAttributes((prev) => ({\n      ...prev,\n      isOpen: true,\n    }));\n  };\n\n  const handleCloseAccountTradePopupModal = () => {\n    setModalAttributes((prev) => ({\n      ...prev,\n      isOpen: false,\n    }));\n    navigate(\"/account_trade\");\n  };\n\n  // FUNCTIONS FOR CHECKBOX\n  const toggleRow = useCallback(\n    (id: string | number) => {\n      const newSelected = { ...selectedIds };\n      newSelected[id] = !newSelected[id];\n      console.log(newSelected);\n      setSelectedIds(newSelected);\n      const totalSelected = Object.entries(newSelected).reduce(\n        (prev, value) => {\n          if (value[1]) return prev + 1;\n          return prev;\n        },\n        0\n      );\n      if (totalSelected >= data.length) {\n        setSelectAll(1);\n      } else {\n        setSelectAll(0);\n      }\n    },\n    [data.length, selectedIds]\n  );\n\n  const toggleAllRow = useCallback(() => {\n    let newSelected: SelectedIdsType = {};\n\n    if (selectAll === 0) {\n      data.forEach((x) => {\n        newSelected[x.id] = true;\n      });\n    }\n    setSelectedIds(newSelected);\n    setSelectAll((prev) => (prev === 0 ? 1 : 0));\n  }, [data, selectAll]);\n\n  // COMMON FUNCTIONS\n  // const getAllBotSignalBuySellSettings = useCallback(\n  //   (page: number) => {\n  //     if (partnerBotDatas.length > 0) {\n  //       axios\n  //         .get(`${APIs.botSignalBuySellList}`, {\n  //           params: {\n  //             page,\n  //             page_size: selectedPageSizeOption.value,\n  //           },\n  //         })\n  //         .then((res) => {\n  //           const data: BotSignalPersonal = res.data;\n  //           setBotPersonalSignalData(data);\n  //           setAllBotPersonalSignalResults(data.results);\n  //           if (data.count != null && selectedPageSizeOption.value != null) {\n  //             setTotalPages(\n  //               Math.ceil(data.count / +selectedPageSizeOption.value)\n  //             );\n  //           }\n  //         })\n  //         .catch(() => {\n  //           enqueueSnackbar('Không thể lấy bot settings!', {\n  //             variant: 'error',\n  //           });\n  //         });\n  //     }\n  //   },\n  //   [enqueueSnackbar, partnerBotDatas, selectedPageSizeOption]\n  // );\n\n  const deleteSettingById = () => {\n    axios\n      .delete(`${APIs.deleteBotSignalPersonal}${selectedAdminResult.id}`)\n      .then((res) => {\n        // TODO\n        // getAllBotSignalBuySellSettings(page + 1);\n        setSelectedIds({});\n        setSelectAll(0);\n        enqueueSnackbar(\"Xoá cấu hình thành công!\", { variant: \"success\" });\n      })\n      .catch(() => {\n        enqueueSnackbar(\"Không thể xoá cấu hình!\", { variant: \"error\" });\n      });\n  };\n\n  const deleteSettingByListIds = () => {\n    // ENTRY: string: boolean\n    const selectedListIds = Object.entries(selectedIds)\n      .filter((selected) => selected[1])\n      .map((selected) => selected[0]);\n    axios\n      .delete(`${APIs.deleteBotSignalPersonal}${selectedListIds}`)\n      .then((res) => {\n        // TODO\n        // getAllBotSignalBuySellSettings(page + 1);\n        setSelectedIds({});\n        setSelectAll(0);\n        enqueueSnackbar(\"Xoá cấu hình thành công!\", { variant: \"success\" });\n      })\n      .catch(() => {\n        enqueueSnackbar(\"Xoá cấu hình thất bại!\", { variant: \"error\" });\n      });\n  };\n\n  const updateModelData = useCallback(\n    (botPersonalSignalResult: UserManagementUserResponseResult) => {\n      // UPDATE FORM MODAL\n      const updatedFormikValues: FormikValueType = {\n        followerName: botPersonalSignalResult.follower_name,\n        email: botPersonalSignalResult.email,\n        status: botPersonalSignalResult.status,\n      };\n\n      console.log(updatedFormikValues);\n      setFormikValues(updatedFormikValues);\n    },\n    []\n  );\n\n  // SEARCH AND FILTER\n  const handleSelectMethodOwnType = (\n    option: SingleValue<InputSelectOption>,\n    actionMeta: ActionMeta<InputSelectOption>\n  ) => {\n    if (option != null) {\n      setSelectedMethodOwnType(option);\n    }\n  };\n\n  // PAGINATION FUNCTION\n  const handleSelectPageSize = (\n    option: SingleValue<InputSelectOption>,\n    actionMeta: ActionMeta<InputSelectOption>\n  ) => {\n    if (option != null) {\n      setSelectedPageSizeOption(option);\n      setPage(0);\n      // getAllBotSignalBuySellSettings(1);\n    }\n  };\n\n  const handlePageChange = useCallback(({ selected }: { selected: number }) => {\n    console.log(selected);\n    const page = selected + 1;\n    setPage(selected);\n    // TODO\n    // getAllBotSignalBuySellSettings(page);\n  }, []);\n\n  // TABLE\n  const columns = React.useMemo<Column<UserManagementUserResponseResult>[]>(\n    () => [\n      {\n        id: \"checkbox\",\n        accessor: \"checkbox\",\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          return (\n            <div className=\"flex items-center justify-center\">\n              <input\n                type=\"checkbox\"\n                className=\"checkbox\"\n                checked={selectedIds[original.id] === true}\n                onChange={(e) => {\n                  toggleRow(original.id);\n                }}\n              />\n            </div>\n          );\n        },\n        Header: (props) => {\n          return (\n            <div className=\"flex items-center justify-center\">\n              <input\n                type=\"checkbox\"\n                className=\"text-center checkbox\"\n                checked={selectAll === 1}\n                ref={(input) => {\n                  if (input) {\n                    input.indeterminate = selectAll === 2;\n                  }\n                }}\n                onChange={() => toggleAllRow()}\n              />\n            </div>\n          );\n        },\n        sortable: false,\n        width: 45,\n      },\n      {\n        Header: () => {\n          return <div className=\"text-left\">Biệt danh</div>;\n        },\n        accessor: \"follower_name\",\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          return (\n            <div className=\"flex items-center\">\n              <p className=\"text-sm text-ink-100\">{original.follower_name}</p>\n            </div>\n          );\n        },\n      },\n      {\n        Header: () => {\n          return <div className=\"text-left\">Email</div>;\n        },\n        accessor: \"email\",\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          return (\n            <div className=\"flex items-center\">\n              <p className=\"text-sm text-ink-100\">{original.email}</p>\n            </div>\n          );\n        },\n      },\n      {\n        Header: () => <div className=\"text-left\">Trạng thái</div>,\n        accessor: \"status\",\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          const status = original.status;\n          return (\n            <div className=\"flex\">\n              <p\n                className={`w-fit px-2 rounded-[0.375rem] text-xs text-ink-100 leading-5 ${\n                  status === \"active\" ? \"bg-green-100\" : \"bg-red-100\"\n                }`}\n              >\n                {status === \"active\"\n                  ? STATUSES_MAP.active\n                  : STATUSES_MAP.inactive}\n              </p>\n            </div>\n          );\n        },\n      },\n      {\n        accessor: \"actions\",\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          return (\n            <div className=\"flex justify-center gap-x-1 w-[1.5rem]\">\n              <Tooltip\n                componentsProps={{\n                  tooltip: {\n                    className: \"!px-0 !py-3 !bg-dropdown !rounded-xl\",\n                  },\n                  arrow: {\n                    className:\n                      \"!w-[1rem] !translate-x-[9.6875rem] !before:bg-dropdown\",\n                    sx: {\n                      \"&::before\": {\n                        background: \"var(--bg-dropdown)\",\n                      },\n                    },\n                  },\n                }}\n                title={\n                  <>\n                    <div\n                      className=\"p-3 min-w-[11.25rem] hover:bg-primary-10 flex items-center gap-x-2 cursor-pointer\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        // handleOpenUpsertModal();\n                        // setIsEditing(true);\n                        // updateModelData(original);\n                        handleTooltipClose(original.id);\n                        //TODO\n                        setUserHistory({\n                          isShowing: true,\n                          userId: 1,\n                        });\n                      }}\n                    >\n                      <img\n                        className=\"w-[1.5rem]\"\n                        src={images.user.history}\n                        alt=\"BotLambotrade\"\n                      />\n                      <p className=\"text-base text-ink-100\">\n                        Lịch sử hoạt động\n                      </p>\n                    </div>\n                    <div\n                      className=\"p-3 min-w-[11.25rem] hover:bg-primary-10 flex items-center gap-x-2 cursor-pointer\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        handleOpenBlockPopupModal();\n                        // setIsDeletingByList(false);\n                        setSelectedAdminResult(original);\n                        handleTooltipClose(original.id);\n                      }}\n                    >\n                      <img\n                        className=\"w-[1.5rem]\"\n                        src={images.user.block_gold}\n                        alt=\"BotLambotrade\"\n                      />\n                      <p className=\"text-base text-ink-100\">Chặn tài khoản</p>\n                    </div>\n                    <div\n                      className=\"p-3 min-w-[11.25rem] hover:bg-primary-10 flex items-center gap-x-2 cursor-pointer\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        handleOpenAuthorizePopupModal();\n                        // setIsDeletingByList(false);\n                        setSelectedAdminResult(original);\n                        handleTooltipClose(original.id);\n                      }}\n                    >\n                      <img\n                        className=\"w-[1.5rem]\"\n                        src={images.user.bot}\n                        alt=\"BotLambotrade\"\n                      />\n                      <p className=\"text-base text-ink-100\">Cấp quyền Bot</p>\n                    </div>\n                    <div\n                      className=\"p-3 min-w-[11.25rem] hover:bg-primary-10 flex items-center gap-x-2 cursor-pointer\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        handleOpenChangePasswordPopupModal();\n                        // setIsDeletingByList(false);\n                        setSelectedAdminResult(original);\n                        handleTooltipClose(original.id);\n                      }}\n                    >\n                      <img\n                        className=\"w-[1.5rem]\"\n                        src={images.user.lock}\n                        alt=\"BotLambotrade\"\n                      />\n                      <p className=\"text-base text-ink-100\">Đổi mật khẩu</p>\n                    </div>\n                    <div\n                      className=\"p-3 min-w-[11.25rem] hover:bg-primary-10 flex items-center gap-x-2 cursor-pointer\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        handleOpenDeletePopupModal();\n                        // setIsDeletingByList(false);\n                        setSelectedAdminResult(original);\n                        handleTooltipClose(original.id);\n                      }}\n                    >\n                      <img\n                        className=\"w-[1.5rem]\"\n                        src={images.user.delete_gold}\n                        alt=\"BotLambotrade\"\n                      />\n                      <p className=\"text-base text-ink-100\">Xoá tài khoản</p>\n                    </div>\n                  </>\n                }\n                arrow\n                open={isTooltipOpen[original.id]}\n                onOpen={() => {\n                  handleTooltipOpen(original.id);\n                }}\n                onClose={() => {\n                  handleTooltipClose(original.id);\n                }}\n                disableHoverListener={!isDesktop}\n                disableFocusListener={!isDesktop}\n                disableTouchListener={!isDesktop}\n                placement=\"bottom-end\"\n                enterTouchDelay={0}\n                leaveTouchDelay={20000}\n              >\n                <img\n                  className=\"cursor-pointer\"\n                  src={images.table.actions}\n                  alt=\"BotLambotrade\"\n                  onClick={(e) => {\n                    handleTooltipToggle(original.id);\n                  }}\n                />\n              </Tooltip>\n            </div>\n          );\n        },\n      },\n    ],\n    [\n      handleTooltipClose,\n      handleTooltipOpen,\n      isDesktop,\n      isTooltipOpen,\n      selectAll,\n      selectedIds,\n      setUserHistory,\n      toggleAllRow,\n      toggleRow,\n    ]\n  );\n\n  const tableInstance = useTable({ columns, data }, usePagination);\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    tableInstance;\n\n  const formikChangePassword = useFormik({\n    initialValues: {\n      oldPassword: \"\",\n      newPassword: \"\",\n      confirmNewPassword: \"\",\n      uid: \"\",\n      resetKey: \"\",\n    },\n    validationSchema: Yup.object({\n      newPassword: Yup.string()\n        .required(\"Vui lòng nhập mật khẩu\")\n        .min(6, \"Mật khẩu của bạn phải dài ít nhất 6 ký tự\")\n        .max(20, \"Mật khẩu của bạn không được quá 20 ký tự\"),\n      confirmNewPassword: Yup.string()\n        .required(\"Vui lòng nhập mật khẩu\")\n        .min(6, \"Mật khẩu của bạn phải dài ít nhất 6 ký tự\")\n        .max(20, \"Mật khẩu của bạn không được quá 20 ký tự\")\n        .oneOf([Yup.ref(\"newPassword\"), null], \"Mật khẩu phải khớp\"),\n    }),\n    onSubmit: async (values, helpers) => {\n      const request = {\n        new_password1: values.newPassword,\n        new_password2: values.confirmNewPassword,\n        uid: values.uid,\n        token: values.resetKey,\n      };\n      console.log(request);\n      axios\n        .post(`${APIs.resetPasswordConfirm}`, request)\n        .then((res) => {\n          handleCloseChangePasswordPopupModal();\n          enqueueSnackbar(\"Cập nhập mật khẩu thành công\", {\n            variant: \"success\",\n          });\n        })\n        .catch((err) => {\n          console.log(err);\n          enqueueSnackbar(\"Cập nhập mật khẩu thất bại\", { variant: \"error\" });\n        });\n    },\n  });\n\n  // SETUP FORMIK AND FUNCTIONS\n  const formikSetup = useFormik({\n    initialValues: {\n      multiplyPerSession: 0,\n      multiply: 0,\n    },\n    validationSchema: Yup.object({}),\n    onSubmit: async (values, helpers) => {\n      // console.log(values);\n      // axios\n      //   .post(`${APIs.resetPasswordConfirm}`, request)\n      //   .then((res) => {\n      //     handleCloseChangePasswordPopupModal();\n      //     enqueueSnackbar(\"Cập nhập mật khẩu thành công\", {\n      //       variant: \"success\",\n      //     });\n      //   })\n      //   .catch((err) => {\n      //     console.log(err);\n      //     enqueueSnackbar(\"Cập nhập mật khẩu thất bại\", { variant: \"error\" });\n      //   });\n    },\n  });\n\n  // FUNCTIONS FOR INPUT AMOUNT\n  const handleAmount = (\n    value: number | string | undefined,\n    fieldName: string,\n    values: CurrencyInputOnChangeValues | undefined\n  ): void => {\n    // const valueToSet = value === undefined || +value <= 0 ? 0 : value || ' ';\n    const valueToSet = value === undefined ? \"\" : value;\n    formikSetup.setFieldValue(fieldName, valueToSet);\n  };\n\n  const handleAmountMinusOne = (value: number, fieldName: string) => {\n    if (value - 1 < 1) return;\n    formikSetup.setFieldValue(fieldName, +value - 1);\n  };\n\n  const handleOrderAmountPlusOne = (value: number, fieldName: string) => {\n    formikSetup.setFieldValue(fieldName, +value + 1);\n  };\n\n  // BOT SELECT\n  const getAllAccounts = useCallback(() => {\n    axios\n      .get(APIs.allAccounts)\n      .then((res) => {\n        const data = res.data;\n        setAllBotDatas(data);\n      })\n      .catch(() => {\n        enqueueSnackbar(\"Không thể lấy tài khoản master\", { variant: \"error\" });\n      });\n  }, [enqueueSnackbar]);\n\n  const getAllPartnerBots = useCallback(() => {\n    axios\n      .get(APIs.partnerAccount)\n      .then((res) => {\n        const datas: BotData[] = res.data;\n        const partnerBotDatas = datas.filter(\n          (data) => data.status === \"active\"\n        );\n        setPartnerBotDatas(partnerBotDatas);\n      })\n      .catch((err) => {\n        enqueueSnackbar(\"Không thể lấy bot datas\", { variant: \"error\" });\n      });\n  }, [enqueueSnackbar]);\n\n  const getBalance = useCallback(\n    (id: number | string) => {\n      axios\n        .get(`${APIs.balanceById}${id}/`)\n        .then((res) => {\n          const data: BotBalance = res.data;\n          setBotBalance(data);\n        })\n        .catch(() => {\n          enqueueSnackbar(\"Không thể lấy được số dư ví\", { variant: \"error\" });\n        });\n    },\n    [enqueueSnackbar]\n  );\n\n  const convertPartnerBotsToPartnerAccountOptions = useCallback(() => {\n    if (partnerBotDatas && partnerBotDatas.length > 0) {\n      const accountOptions = partnerBotDatas.map((botData) => ({\n        value: botData.id,\n        label: botData.botname,\n      }));\n      setAccountOptions(accountOptions);\n    }\n  }, [partnerBotDatas]);\n\n  const convertAllPartnerBotsToPartnerAccountOptions = useCallback(() => {\n    if (allBotDatas && allBotDatas.length > 0) {\n      const allBotAccountOptions = allBotDatas.map((botData) => ({\n        value: botData.id,\n        label: botData.username,\n      }));\n      setAllBotAccountOptions(allBotAccountOptions);\n    }\n  }, [allBotDatas]);\n\n  useEffect(() => {\n    getAllPartnerBots();\n    getAllAccounts();\n  }, [getAllAccounts, getAllPartnerBots]);\n\n  useEffect(() => {\n    console.log(\"HERE\");\n    if (partnerBotDatas && partnerBotDatas.length > 0) {\n      if (selectedAccountType.value === \"LIVE\" && !isPartnerBotInitialized) {\n        getBalance(partnerBotDatas[0].id);\n        const firstBotOption = {\n          value: partnerBotDatas[0].id,\n          label: partnerBotDatas[0].botname,\n        };\n        setSelectedBotAccount(firstBotOption);\n        setIsPartnerBotInitialized(true);\n        dispatch(userActions.updateSelectedBotAccount(firstBotOption));\n      } else if (selectedBotAccount.value) {\n        getBalance(selectedBotAccount.value);\n      }\n\n      convertPartnerBotsToPartnerAccountOptions();\n      convertAllPartnerBotsToPartnerAccountOptions();\n    }\n  }, [\n    partnerBotDatas,\n    convertPartnerBotsToPartnerAccountOptions,\n    getBalance,\n    selectedAccountType,\n    selectedBotAccount.value,\n    convertAllPartnerBotsToPartnerAccountOptions,\n    dispatch,\n    isPartnerBotInitialized,\n  ]);\n\n  // TODO\n  // useEffect(() => {\n  //   getAllBotSignalBuySellSettings(page + 1);\n  // }, [getAllBotSignalBuySellSettings, page]);\n\n  return (\n    <>\n      <div className=\"mb-6 h-fit bg-background-80 rounded-3xl\">\n        <div className=\"flex flex-col gap-4 p-6 border-b border-ink-10 md:flex-row md:justify-between md:items-center\">\n          <h1 className=\"text-xl font-semibold text-ink-100\">\n            Danh sách Admin\n          </h1>\n          <button\n            className=\"px-3 py-[0.625rem] w-full md:w-auto rounded-xl flex justify-center items-center gap-[0.625rem] bg-primary-100\"\n            onClick={() => {\n              if (partnerBotDatas.length === 0) {\n                setModalAttributes((prev) => ({\n                  ...prev,\n                  isOpen: true,\n                  icon: images.copy.account_not_integrate,\n                  headingMessage: \"Bạn chưa liên kết tài khoản\",\n                  message: (\n                    <>\n                      Liên kết tài khoản ngay để thực hiện giao dịch cùng đội\n                      ngũ chuyên gia của AI BotTrade\n                    </>\n                  ),\n                  buttonMessage: \"Liên kết tài khoản\",\n                  handleOpen: handleOpenAccountTradePopupModal,\n                  handleClose: handleCloseAccountTradePopupModal,\n                }));\n                return;\n              }\n              handleOpenUpsertModal();\n              setIsEditing(false);\n            }}\n          >\n            <img src={images.copy.plus} alt=\"BotLambotrade\" />\n            <p className=\"font-semibold text-transparent bg-background-100 bg-clip-text\">\n              Thêm mới\n            </p>\n          </button>\n        </div>\n        {adminResults.length === 0 && (\n          <div className=\"py-[5rem] flex flex-col justify-center items-center gap-y-6\">\n            <img\n              className=\"w-[10.25rem]\"\n              srcSet={`${images.user.empty} 2x`}\n              alt=\"BotLambotrade\"\n            />\n            <p className=\"text-ink-60\">Danh sách User trống</p>\n          </div>\n        )}\n        {adminResults.length > 0 && (\n          <div className=\"flex flex-col p-6 gap-y-6\">\n            <div className=\"flex flex-col justify-between gap-4 md:flex-row md:items-center\">\n              {/* SEARCH */}\n              <TextInput\n                fullWidth={true}\n                name=\"search\"\n                id=\"search\"\n                type=\"text\"\n                value={searchInput}\n                onChange={(e) => {\n                  setSearchInput(e.target.value);\n                }}\n                resetValue={() => {\n                  setSearchInput(\"\");\n                }}\n                placeholder=\"Tìm kiếm\"\n                searchIcon={images.table.search}\n                searchIconClassName=\"!w-[1.25rem]\"\n                containerClassName=\"w-full md:w-[21.375rem]\"\n                inputClassName=\"!py-2 text-sm\"\n              />\n\n              <div className=\"flex flex-col gap-2 md:flex-row\">\n                <div\n                  className={`p-3 flex items-center gap-2 bg-primary-10 rounded-xl`}\n                >\n                  <p className=\"text-ink-100\">Tổng số lượng User:</p>\n                  <span className=\"font-bold text-transparent bg-clip-text bg-primary-100\">\n                    {users.count?.toLocaleString()}\n                  </span>\n                  <div className=\"pl-2 border-l border-ink-20\">\n                    <img\n                      className=\"w-[1.25rem] cursor-pointer\"\n                      src={images.user.reload}\n                      alt=\"BotLambotrade\"\n                    />\n                  </div>\n                </div>\n                {/* <div\n                  className={`p-3 flex items-center gap-2 bg-primary-10 rounded-xl`}\n                >\n                  <p className=\"text-ink-100\">Tự động quét thành viên</p>\n                  <CustomSwitch\n                    checked={isAutoScan}\n                    onChange={(e) => {\n                      setIsAutoScan((prev) => !prev);\n                    }}\n                  />\n                </div> */}\n              </div>\n            </div>\n\n            {Object.values(selectedIds).filter((value) => value === true)\n              .length > 0 && (\n              <div className=\"flex flex-col gap-4 px-4 py-3 bg-ink-05 rounded-xl md:flex-row md:justify-between md:items-center\">\n                <p className=\"font-semibold text-ink-100\">\n                  {`Đã chọn ${\n                    Object.values(selectedIds).filter((value) => value === true)\n                      .length\n                  }`}\n                </p>\n                <div className=\"grid items-center justify-center grid-cols-2 gap-4 md:flex\">\n                  <UserManagementButton\n                    icon={images.user.block_gold}\n                    iconHover={images.user.block_black}\n                    classNameHover=\"background-animation\"\n                    onClick={() => {\n                      showIsDevelopingModal();\n                      // resetAllCurrent();\n                    }}\n                  >\n                    Chặn tài khoản\n                  </UserManagementButton>\n                  <UserManagementButton\n                    icon={images.user.delete_gold}\n                    iconHover={images.user.delete_black}\n                    classNameHover=\"background-animation\"\n                    onClick={() => {\n                      showIsDevelopingModal();\n                      // resetAllCurrent();\n                    }}\n                  >\n                    Xoá tài khoản\n                  </UserManagementButton>\n                </div>\n              </div>\n            )}\n\n            <div\n              className={`border border-ink-05 rounded-2xl w-full ${\n                !isLargeDesktop ? \"overflow-x-scroll border-collapse\" : \"\"\n              }`}\n            >\n              <table className=\"w-full\" {...getTableProps()}>\n                <thead>\n                  {headerGroups.map((headerGroup) => (\n                    <tr {...headerGroup.getHeaderGroupProps()}>\n                      {headerGroup.headers.map((column) => (\n                        <th\n                          className={`p-4 last:w-[1%] whitespace-nowrap 2xl:whitespace-normal last:whitespace-nowrap bg-primary-05 first-of-type:rounded-tl-2xl last-of-type:rounded-tr-2xl text-sm text-ink-100 font-normal`}\n                          {...column.getHeaderProps()}\n                        >\n                          {column.render(\"Header\")}\n                        </th>\n                      ))}\n                    </tr>\n                  ))}\n                </thead>\n                <tbody {...getTableBodyProps()}>\n                  {rows.map((row) => {\n                    prepareRow(row);\n                    return (\n                      <tr\n                        className={`border-b border-ink-10 last:border-0 whitespace-nowrap text-ellipsis`}\n                        {...row.getRowProps()}\n                      >\n                        {row.cells.map((cell) => (\n                          <td\n                            className=\"p-4 last:w-[1%] last:whitespace-nowrap\"\n                            {...cell.getCellProps()}\n                          >\n                            {cell.render(\"Cell\")}\n                          </td>\n                        ))}\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            </div>\n\n            {/* PAGINATION */}\n            <div\n              className={`flex flex-col justify-center items-end md:flex-row md:justify-end md:items-center gap-2`}\n            >\n              <div>\n                <SelectInput\n                  menuRef={menuRef}\n                  value={selectedPageSizeOption}\n                  onChange={handleSelectPageSize}\n                  inputClassName=\"!py-2 !pr-8 text-sm\"\n                  indicatorContainerClassName=\"!right-3\"\n                  indicatorContainerIconClassName=\"!w-[1rem]\"\n                  menuPortalClassName={`min-w-[10.25rem] ${\n                    isMobile ? \"translate-x-[-3.2rem]\" : \"\"\n                  }`}\n                  name=\"select\"\n                  options={PAGE_SIZE_OPTIONS}\n                />\n              </div>\n\n              <ReactPaginate\n                breakLabel=\"...\"\n                onPageChange={handlePageChange}\n                marginPagesDisplayed={isMobile ? 2 : 3}\n                pageCount={totalPages}\n                previousLabel={\n                  <div\n                    onMouseLeave={() => {\n                      setIsPrevHover(false);\n                    }}\n                    onMouseEnter={() => {\n                      setIsPrevHover(true);\n                    }}\n                    className=\"p-[0.375rem] border-input-ink before:rounded-lg\"\n                  >\n                    {isPrevHover ? (\n                      <img\n                        className=\"w-[1.25rem]\"\n                        src={images.table.pagination_left_arrow_gold}\n                        alt=\"BotLambotrade\"\n                      />\n                    ) : (\n                      <img\n                        className=\"w-[1.25rem]\"\n                        src={images.table.pagination_left_arrow}\n                        alt=\"BotLambotrade\"\n                      />\n                    )}\n                  </div>\n                }\n                nextLabel={\n                  <div\n                    onMouseLeave={() => {\n                      setIsNextHover(false);\n                    }}\n                    onMouseEnter={() => {\n                      setIsNextHover(true);\n                    }}\n                    className=\"p-[0.375rem] border-input-ink before:rounded-lg\"\n                  >\n                    {isNextHover ? (\n                      <img\n                        className=\"w-[1.25rem]\"\n                        src={images.table.pagination_right_arrow_gold}\n                        alt=\"BotLambotrade\"\n                      />\n                    ) : (\n                      <img\n                        className=\"w-[1.25rem]\"\n                        src={images.table.pagination_right_arrow}\n                        alt=\"BotLambotrade\"\n                      />\n                    )}\n                  </div>\n                }\n                forcePage={page}\n                // pageClassName=\"py-[0.3125rem] px-3 border-input-ink before:rounded-lg cursor-pointer\"\n                pageLinkClassName=\"page-link relative z-10 py-[0.3125rem] px-3 border-input-ink before:rounded-lg cursor-pointer\"\n                previousClassName=\"page-item flex\"\n                previousLinkClassName=\"page-link\"\n                nextClassName=\"page-item flex\"\n                nextLinkClassName=\"page-link relative z-10\"\n                breakClassName=\"page-item py-[0.375rem] px-3 border-input-ink before:rounded-lg cursor-pointer\"\n                breakLinkClassName=\"page-link z-10\"\n                containerClassName=\"flex items-center gap-x-2 text-ink-80 text-sm\"\n                activeClassName=\"pagination-active border-primary before:rounded-lg\"\n              />\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* UPSERT MODAL */}\n      <CustomModal\n        isOpen={isUpsertModalOpen}\n        handleOpen={handleOpenUpsertModal}\n        handleClose={handleCloseUpsertModal}\n      >\n        <div className=\"absolute left-[50%] top-[50%] translate-x-[-50%] translate-y-[-50%] w-[calc(100vw-2rem)] md:w-[31.25rem] bg-background-80 rounded-3xl\">\n          <div className=\"flex items-center justify-between p-6 border-b border-ink-10\">\n            <h3 className=\"text-xl font-semibold text-ink-100\">\n              Thêm mới Leader\n            </h3>\n            <CloseOutlined\n              className=\"cursor-pointer\"\n              onClick={handleCloseUpsertModal}\n            />\n          </div>\n          <div className=\"p-6\">\n            <TextInput\n              id=\"newAdminUsername\"\n              name=\"newAdminUsername\"\n              type=\"text\"\n              label=\"Tên tài khoản\"\n              fullWidth\n              value={newAdminUsername.value}\n              onChange={(e) => {\n                setNewAdminUserName((prev) => ({\n                  ...prev,\n                  value: e.target.value,\n                }));\n              }}\n              onBlur={() => {\n                setNewAdminUserName((prev) => ({ ...prev, touched: true }));\n              }}\n              error={\n                newAdminUsername.touched && Boolean(newAdminUsername.error)\n              }\n              helperText={newAdminUsername.touched && newAdminUsername.error}\n              containerClassName=\"mb-6\"\n            />\n            <div className=\"flex justify-center md:justify-end\">\n              <CustomButton\n                className={`w-full md:w-[12rem] py-4`}\n                background={`${\n                  newAdminUsername.error ? \"bg-ink-10\" : \"bg-primary-100\"\n                }`}\n                textColor={\n                  newAdminUsername.error ? \"bg-primary-60\" : \"bg-background-100\"\n                }\n                textClassName=\"font-bold\"\n                onClick={() => {\n                  if (!newAdminUsername.error) {\n                    handleCloseUpsertModal();\n                  }\n                }}\n              >\n                Lưu\n              </CustomButton>\n            </div>\n          </div>\n        </div>\n      </CustomModal>\n\n      {/* MODAL RESET PASSWORD CONFIRM */}\n      <CustomModal\n        isOpen={isChangePasswordModalOpen}\n        handleOpen={handleOpenChangePasswordPopupModal}\n        handleClose={handleCloseChangePasswordPopupModal}\n      >\n        <div className=\"absolute left-[50%] top-[50%] translate-x-[-50%] translate-y-[-50%] w-[calc(100vw-2rem)] md:w-[31.25rem] bg-background-80 rounded-3xl\">\n          <div className=\"flex items-center justify-between p-6 border-b border-ink-10\">\n            <h3 className=\"text-xl font-semibold text-ink-100\">Đổi mật khẩu</h3>\n            <CloseOutlined\n              className=\"cursor-pointer\"\n              onClick={handleCloseChangePasswordPopupModal}\n            />\n          </div>\n          <div className=\"flex flex-col px-6 pt-6 pb-8\">\n            <TextInput\n              id=\"oldPassword\"\n              name=\"oldPassword\"\n              type=\"password\"\n              label=\"mật khẩu hiện tại\"\n              fullWidth\n              isLabelOutside\n              value={formikChangePassword.values.oldPassword}\n              onChange={formikChangePassword.handleChange}\n              onBlur={formikChangePassword.handleBlur}\n              error={\n                formikChangePassword.touched.oldPassword &&\n                Boolean(formikChangePassword.errors.oldPassword)\n              }\n              helperText={\n                formikChangePassword.touched.oldPassword &&\n                formikChangePassword.errors.oldPassword\n              }\n              helperTextEnd={`${formikChangePassword.values.oldPassword.length}/20`}\n              icon={images.input.eye}\n              containerClassName=\"mb-6\"\n              isInputDisabled={true}\n            />\n            <TextInput\n              id=\"newPassword\"\n              name=\"newPassword\"\n              type=\"password\"\n              label=\"mật khẩu mới\"\n              fullWidth\n              isLabelOutside\n              value={formikChangePassword.values.newPassword}\n              onChange={formikChangePassword.handleChange}\n              onBlur={formikChangePassword.handleBlur}\n              error={\n                formikChangePassword.touched.newPassword &&\n                Boolean(formikChangePassword.errors.newPassword)\n              }\n              helperText={\n                formikChangePassword.touched.newPassword &&\n                formikChangePassword.errors.newPassword\n              }\n              helperTextEnd={`${formikChangePassword.values.newPassword.length}/20`}\n              icon={images.input.eye}\n              containerClassName=\"mb-6\"\n            />\n            <TextInput\n              id=\"confirmNewPassword\"\n              name=\"confirmNewPassword\"\n              type=\"password\"\n              label=\"xác nhận mật khẩu\"\n              fullWidth\n              isLabelOutside\n              value={formikChangePassword.values.confirmNewPassword}\n              onChange={formikChangePassword.handleChange}\n              onBlur={formikChangePassword.handleBlur}\n              error={\n                formikChangePassword.touched.confirmNewPassword &&\n                Boolean(formikChangePassword.errors.confirmNewPassword)\n              }\n              helperText={\n                formikChangePassword.touched.confirmNewPassword &&\n                formikChangePassword.errors.confirmNewPassword\n              }\n              helperTextEnd={`${formikChangePassword.values.confirmNewPassword.length}/20`}\n              icon={images.input.eye}\n              containerClassName=\"mb-12\"\n            />\n            <div className=\"items-center justify-center gap-4\">\n              <CustomButton\n                className=\"w-full py-4\"\n                textClassName=\"font-bold\"\n                onClick={() => {\n                  // TODO\n                  // formikChangePassword.handleSubmit();\n                  showIsDevelopingModal();\n                  handleCloseChangePasswordPopupModal();\n                }}\n              >\n                Xác nhận\n              </CustomButton>\n            </div>\n          </div>\n        </div>\n      </CustomModal>\n\n      {/* Block Modal */}\n      <CustomModalTwoButton\n        open={isBlockPopupOpen}\n        handleOpen={handleOpenBlockPopupModal}\n        handleClose={handleCloseBlockPopupModal}\n        icon={images.user.block_gold}\n        title=\"Chặn tài khoản\"\n        content=\"Bạn có chắc chắn muốn chặn tài khoản này không?\"\n        onConfirm={() => {\n          showIsDevelopingModal();\n          handleCloseBlockPopupModal();\n        }}\n      />\n\n      {/* Authorise Modal */}\n      <CustomModalTwoButton\n        open={isAuthorizePopupOpen}\n        handleOpen={handleOpenAuthorizePopupModal}\n        handleClose={handleCloseAuthorizePopupModal}\n        icon={images.user.bot}\n        title=\"Cấp quyền Bot\"\n        content=\"Bạn có chắc chắn muốn cấp quyền Bot này không?\"\n        onConfirm={() => {\n          showIsDevelopingModal();\n          handleCloseAuthorizePopupModal();\n        }}\n      />\n\n      {/* Delete Modal */}\n      <CustomModalTwoButton\n        open={isDeletePopupOpen}\n        handleOpen={handleOpenDeletePopupModal}\n        handleClose={handleCloseDeletePopupModal}\n        icon={images.user.remove_gold}\n        title=\"Xoá tài khoản\"\n        content=\"Bạn có chắc chắn muốn xoá tài khoản này không?\"\n        onConfirm={() => {\n          // if (isDeletingByList) {\n          //   deleteSettingByListIds();\n          // } else {\n          //   deleteSettingById();\n          // }\n          showIsDevelopingModal();\n          handleCloseDeletePopupModal();\n        }}\n      />\n\n      {/* POPUP Validate */}\n      <CustomValidateModel\n        isOpen={modalAttributes.isOpen}\n        icon={modalAttributes.icon}\n        headingMessage={modalAttributes.headingMessage}\n        message={modalAttributes.message}\n        buttonMessage={modalAttributes.buttonMessage}\n        handleOpen={modalAttributes.handleOpen}\n        handleClose={modalAttributes.handleClose}\n      />\n    </>\n  );\n};\n\nexport default UserManagementUser;\n","import { useEnqueueSnackbar } from \"hooks/useEnqueueSnackbar\";\nimport { useEffect, useState } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAppSelector } from \"stores/hooks\";\nimport { UserHistoryProps } from \"types/UserHistoryProps\";\nimport { doesHaveAuthority, isAdmin, isLeader } from \"utils/helpers\";\nimport UserHistory from \"./UserHistory\";\nimport UserManagementAdmin from \"./UserManagementAdmin\";\nimport UserManagementLeader from \"./UserManagementLeader\";\nimport AdminManagementType from \"./UserManagementType\";\nimport UserManagementUser from \"./UserManagementUser\";\n\nconst UserManagement = () => {\n  const [selectedRoles, setSelectedRoles] = useState({\n    isAdmin: true,\n    isLeader: false,\n    isUser: false,\n  });\n  const [userHistory, setUserHistory] = useState<UserHistoryProps>({\n    isShowing: false,\n    userId: 0,\n  });\n  const navigate = useNavigate();\n  const enqueueSnackbar = useEnqueueSnackbar();\n  const user = useAppSelector((state) => state.user.user);\n  const [isAutoScanUsers, setIsAutoScanUsers] = useState(false);\n\n  useEffect(() => {\n    if (!doesHaveAuthority(user)) {\n      enqueueSnackbar(\"You don't have authority to access this page\", {\n        variant: \"warning\",\n      });\n      navigate(\"/\");\n    }\n  }, [enqueueSnackbar, navigate, user]);\n\n  return (\n    <>\n      <Helmet>\n        <title>BotLambotrade | Bot Trade</title>\n      </Helmet>\n\n      <AdminManagementType\n        selectedRoles={selectedRoles}\n        setSelectedRoles={setSelectedRoles}\n        isAutoScanUsers={isAutoScanUsers}\n        setIsAutoScanUsers={setIsAutoScanUsers}\n      />\n\n      {!userHistory.isShowing && selectedRoles.isAdmin && isAdmin(user) && (\n        <UserManagementAdmin setUserHistory={setUserHistory} />\n      )}\n      {!userHistory.isShowing && selectedRoles.isLeader && isLeader(user) && (\n        <UserManagementLeader setUserHistory={setUserHistory} />\n      )}\n      {!userHistory.isShowing && selectedRoles.isUser && isLeader(user) && (\n        <UserManagementUser setUserHistory={setUserHistory} />\n      )}\n      {userHistory.isShowing && (\n        <UserHistory\n          userHistory={userHistory}\n          setUserHistory={setUserHistory}\n        />\n      )}\n    </>\n  );\n};\n\nexport default UserManagement;\n","import React, { FC } from 'react';\nimport { ISvgIcon } from 'types';\n\nconst TableLeftArrowSvg: FC<ISvgIcon> = ({\n  width = '24',\n  height = '24',\n  fill = '#0F0E0C',\n  className = '',\n}) => {\n  return (\n    <svg\n      width={width}\n      height={height}\n      viewBox=\"0 0 24 24\"\n      fill={fill}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={className}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M16.1109 4.91668C15.6778 4.50425 14.9757 4.50425 14.5426 4.91668L7.88924 11.2533C7.45619 11.6657 7.45619 12.3344 7.88924 12.7468L14.5426 19.0834C14.9757 19.4958 15.6778 19.4958 16.1109 19.0834C16.5439 18.6709 16.5439 18.0022 16.1109 17.5898L10.2416 12L16.1109 6.41023C16.5439 5.9978 16.5439 5.32911 16.1109 4.91668Z\"\n        fill={fill}\n      />\n    </svg>\n  );\n};\n\nexport default TableLeftArrowSvg;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\nmodule.exports = baseRandom;\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","var baseRandom = require('./_baseRandom'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toFinite = require('./toFinite');\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseFloat = parseFloat;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min,\n    nativeRandom = Math.random;\n\n/**\n * Produces a random number between the inclusive `lower` and `upper` bounds.\n * If only one argument is provided a number between `0` and the given number\n * is returned. If `floating` is `true`, or either `lower` or `upper` are\n * floats, a floating-point number is returned instead of an integer.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Number\n * @param {number} [lower=0] The lower bound.\n * @param {number} [upper=1] The upper bound.\n * @param {boolean} [floating] Specify returning a floating-point number.\n * @returns {number} Returns the random number.\n * @example\n *\n * _.random(0, 5);\n * // => an integer between 0 and 5\n *\n * _.random(5);\n * // => also an integer between 0 and 5\n *\n * _.random(5, true);\n * // => a floating-point number between 0 and 5\n *\n * _.random(1.2, 5.2);\n * // => a floating-point number between 1.2 and 5.2\n */\nfunction random(lower, upper, floating) {\n  if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n    upper = floating = undefined;\n  }\n  if (floating === undefined) {\n    if (typeof upper == 'boolean') {\n      floating = upper;\n      upper = undefined;\n    }\n    else if (typeof lower == 'boolean') {\n      floating = lower;\n      lower = undefined;\n    }\n  }\n  if (lower === undefined && upper === undefined) {\n    lower = 0;\n    upper = 1;\n  }\n  else {\n    lower = toFinite(lower);\n    if (upper === undefined) {\n      upper = lower;\n      lower = 0;\n    } else {\n      upper = toFinite(upper);\n    }\n  }\n  if (lower > upper) {\n    var temp = lower;\n    lower = upper;\n    upper = temp;\n  }\n  if (floating || lower % 1 || upper % 1) {\n    var rand = nativeRandom();\n    return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n  }\n  return baseRandom(lower, upper);\n}\n\nmodule.exports = random;\n","var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n"],"names":["_ref","width","height","fill","fillOpacity","className","_jsx","viewBox","xmlns","children","fillRule","clipRule","d","_jsxs","placeholder","fullWidth","RangePicker","DatePicker","twMerge","concat","popupClassName","dropdownClassName","format","onChange","date","dateString","console","log","separator","InputDatePickerSeperatorSvg","placement","suffixIcon","InputDatePickerSuffixSvg","clearIcon","InputClearSvg","id","name","label","isLabelOutside","value","error","helperText","helperTextEnd","searchIcon","symbol","icon","button","isInputDisabled","prefix","PREFIX_VALUE","VALUES","inputSpinnerWrapperClassName","containerClassName","inputClassName","symbolClassName","helperClassName","helperTextClassName","helperTextEndClassName","onFixedValueChange","resetValue","handleValueMinusOne","handleValuePlusOne","onValueChange","onBlur","onFocus","onKeyDown","onKeyUp","onMouseOver","onMouseLeave","isMinusFocus","setIsMinusFocus","useState","isPlusFocus","setIsPlusFocus","onClick","e","src","images","alt","TextInput","type","length","map","index","renderText","Math","random","checked","INITIAL_SELECTED_OPTION","INITIAL_SELECTED_ACCOUNT_TYPE","userHistory","setUserHistory","allBotDatas","setAllBotDatas","partnerBotDatas","setPartnerBotDatas","selectedAccountType","setSelectedAccountType","selectedBotAccount","setSelectedBotAccount","accountOptions","setAccountOptions","allBotAccountOptions","setAllBotAccountOptions","historyResults","setAdminResults","Array","_","faker","dayjs","toDate","ip","isPartnerBotInitialized","setIsPartnerBotInitialized","dispatch","useAppDispatch","enqueueSnackbar","useEnqueueSnackbar","getAllAccounts","useCallback","axios","APIs","then","res","data","catch","variant","getAllPartnerBots","filter","status","err","convertPartnerBotsToPartnerAccountOptions","botData","botname","convertAllPartnerBotsToPartnerAccountOptions","username","useEffect","firstBotOption","userActions","_Fragment","prev","isShowing","TableLeftArrowSvg","srcSet","CustomRangePickerV2","open","title","content","handleOpen","handleClose","onConfirm","CustomModal","isOpen","GreyButton","GoldButton","classNameHover","background","backgroundHover","textClassName","textClassNameHover","textColor","textColorHover","iconHover","isButtonHover","setIsButtonHover","PAGE_SIZE_OPTIONS","METHOD_OWN_TYPES","INITIAL_BOT_BALANCE","balance","demo_balance","usdt_balance","INITIAL_FORMIK_VALUES","followerName","email","role","INITIAL_ADMIN_RESULT","follower_name","STATUSES_MAP","INITIAL_INPUT_VALUE","touched","_admins$count","currentTimer","setCurrentTimer","moment","selectedIds","setSelectedIds","selectAll","setSelectAll","totalRecords","setTotalRecords","botBalance","setBotBalance","selectedMasterAccount","setSelectedMasterAccount","isMasterAccountValid","setIsMasterAccountValid","admins","setAdmins","count","next","previous","results","adminResults","isDeletingByList","setIsDeletingByList","useAppSelector","state","user","isLimited","setIsLimited","isUpsertModalOpen","setIsUpsertModalOpen","isChangePasswordModalOpen","setIsChangePasswordModalOpen","isRemovePopupOpen","setIsRemovePopupOpen","isBlockPopupOpen","setIsBlockPopupOpen","isAuthorizePopupOpen","setIsAuthorizePopupOpen","isDeletePopupOpen","setIsDeletePopupOpen","isConditionPopupOpen","setIsConditionPopupOpen","isSetupPopupOpen","setIsSetupPopupOpen","isValidAmountPopupOpen","setIsValidAmountPopupOpen","searchInput","setSearchInput","selectedMethodOwnType","setSelectedMethodOwnType","selectedPageSizeOption","setSelectedPageSizeOption","page","setPage","totalPages","setTotalPages","menuRef","useRef","isPrevHover","setIsPrevHover","isNextHover","setIsNextHover","modalAttributes","setModalAttributes","headingMessage","message","buttonMessage","formikValues","setFormikValues","selectedAdminResult","setSelectedAdminResult","isEditing","setIsEditing","newAdminUsername","setNewAdminUserName","giftUsername","setGiftUsername","conditionError","setConditionError","isLargeDesktop","useSpring","to","opacity","transform","useMediaQuery","query","isDesktop","isMobile","navigate","useNavigate","React","isTooltipOpen","setIsTooltipOpen","handleTooltipOpen","rowIndex","prevState","handleTooltipClose","showIsDevelopingModal","uiActions","handleOpenUpsertModal","handleCloseUpsertModal","handleOpenChangePasswordPopupModal","handleCloseChangePasswordPopupModal","handleOpenRemovePopupModal","handleOpenBlockPopupModal","handleCloseBlockPopupModal","handleOpenAuthorizePopupModal","handleCloseAuthorizePopupModal","handleOpenDeletePopupModal","handleCloseDeletePopupModal","handleOpenSetupPopupModal","handleCloseSetupPopupModal","handleOpenAccountTradePopupModal","handleCloseAccountTradePopupModal","toggleRow","newSelected","Object","entries","reduce","toggleAllRow","forEach","x","handlePageChange","botPersonalSignalResult","updatedFormikValues","_ref2","selected","columns","accessor","Cell","props","original","cell","row","disabled","Header","ref","input","indeterminate","sortable","Tooltip","componentsProps","tooltip","arrow","sx","stopPropagation","userId","onOpen","onClose","disableHoverListener","disableFocusListener","disableTouchListener","enterTouchDelay","leaveTouchDelay","tableInstance","useTable","usePagination","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","formikChangePassword","useFormik","initialValues","oldPassword","newPassword","confirmNewPassword","uid","resetKey","validationSchema","Yup","required","min","max","oneOf","onSubmit","async","values","helpers","request","new_password1","new_password2","token","formikSetup","multiplyPerSession","multiply","handleAmount","fieldName","valueToSet","undefined","setFieldValue","handleAmountMinusOne","handleOrderAmountPlusOne","getBalance","target","searchIconClassName","toLocaleString","UserManagementButton","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","getRowProps","cells","getCellProps","SelectInput","handleSelectPageSize","option","actionMeta","indicatorContainerClassName","indicatorContainerIconClassName","menuPortalClassName","options","ReactPaginate","breakLabel","onPageChange","marginPagesDisplayed","pageCount","previousLabel","onMouseEnter","nextLabel","forcePage","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","CloseOutlined","Boolean","CustomButton","handleChange","handleBlur","errors","CustomModalTwoButton","handleCloseRemovePopupModal","CustomValidateModel","CustomRadio","CustomInputSpinner","plusAmount","multiply_per_session","_leaders$count","leaders","setLeaders","isAutoScan","setIsAutoScan","isNoSetup","CustomSwitch","DEFAULT_ROLES","isAdmin","isLeader","isUser","selectedRoles","setSelectedRoles","isAutoScanUsers","setIsAutoScanUsers","CustomToggle","_users$count","users","UserManagement","doesHaveAuthority","Helmet","AdminManagementType","UserManagementAdmin","UserManagementLeader","UserManagementUser","UserHistory","nativeFloor","floor","nativeRandom","module","exports","lower","upper","trimmedEndIndex","require","reTrimStart","string","slice","replace","eq","isArrayLike","isIndex","isObject","object","reWhitespace","test","charAt","baseRandom","isIterateeCall","toFinite","freeParseFloat","parseFloat","nativeMin","floating","temp","rand","toNumber","INFINITY","baseTrim","isSymbol","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","other","valueOf","isBinary"],"sourceRoot":""}