{"version":3,"file":"static/js/601.4ed4f7a0.chunk.js","mappings":"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","sources":["components/CustomButton/index.tsx","components/CustomInputSpinner/index.tsx","components/CustomValidateModal/index.tsx","components/SearchInput/index.tsx","components/SelectInput/index.tsx","components/TextInput/index.tsx","components/CustomSnackbar/index.tsx","hooks/useEnqueueSnackbar.tsx","pages/CopyTradeZoom/CopyTradeZoomSelectInput.tsx","pages/CopyTradeZoom/CopyTradeType.tsx","svgs/CopyTelegramUpSvg.tsx","svgs/CopyTelegramDownSvg.tsx","pages/CopyTradeZoom/CopyTradeTelegram.tsx","pages/CopyTradeZoom/CopyTradeInformation.tsx","pages/CopyTradeZoom/CopyTradeResultCanvas.tsx","pages/CopyTradeZoom/CopyTradeFollow.tsx","assets/images/trending_down.svg","assets/images/trending_up.svg","pages/CopyTradeZoom/Animated.tsx","pages/CopyTradeZoom/CopyTradeAI.tsx","pages/CopyTradeZoom/index.tsx","utils/ConvertToThreeDecimalPlaces.tsx"],"sourcesContent":["import React, { FC } from 'react';\n\ninterface CustomButtonProps {\n  children: React.ReactNode;\n  className?: string;\n  background?: string;\n  textClassName?: string;\n  textColor?: string;\n  icon?: string;\n  iconClassName?: string;\n  type?: 'button' | 'submit' | 'reset' | undefined;\n  onClick?: React.MouseEventHandler<HTMLButtonElement> | undefined;\n}\n\nconst CustomButton: FC<CustomButtonProps> = ({\n  children,\n  className = '',\n  background = 'bg-primary-100',\n  textClassName = '',\n  textColor = 'bg-background-100',\n  icon,\n  iconClassName = '',\n  type = 'button',\n  onClick,\n}) => {\n  return (\n    <button\n      className={`flex justify-center items-center gap-x-[0.625rem] px-4 py-2 rounded-xl ${background} ${className}`}\n      type={type}\n      onClick={onClick}\n    >\n      {icon && <img src={icon} className={iconClassName} alt=\"BotLambotrade\" />}\n      <p\n        className={`${textClassName} ${textColor} bg-clip-text text-transparent font-bold`}\n      >\n        {children}\n      </p>\n    </button>\n  );\n};\n\nexport default CustomButton;\n","import images from 'assets';\nimport React, { FC, useState } from 'react';\nimport CurrencyInput from 'react-currency-input-field';\nimport TextInput from 'components/TextInput';\nimport { CurrencyInputOnChangeValues } from 'react-currency-input-field/dist/components/CurrencyInputProps';\nimport CustomButton from 'components/CustomButton';\n\ninterface CustomInputSpinnerProps {\n  // Text Input props\n  id?: string;\n  name: string;\n  label?: React.ReactNode;\n  isLabelOutside?: boolean;\n  placeholder?: string;\n  value: string | number | readonly string[] | undefined;\n  error?: boolean;\n  helperText?: React.ReactNode;\n  helperTextEnd?: React.ReactNode;\n  fullWidth?: boolean;\n  searchIcon?: string;\n  symbol?: string;\n  prefix?: string;\n  icon?: string | undefined;\n  button?: React.ReactNode;\n  isInputDisabled?: boolean;\n  PREFIX_VALUE?: string;\n  VALUES?: (string | number)[];\n  inputSpinnerWrapperClassName?: string;\n  containerClassName?: string;\n  inputClassName?: string;\n  symbolClassName?: string;\n  helperClassName?: string;\n  helperTextClassName?: string;\n  helperTextEndClassName?: string;\n  resetValue?: () => void;\n  onFixedValueChange: (value: string | number) => void;\n  onChange?: React.ChangeEventHandler<HTMLTextAreaElement | HTMLInputElement>;\n  handleValueMinusOne: () => void;\n  handleValuePlusOne: () => void;\n  onValueChange?:\n    | ((\n        value: string | undefined,\n        name?: string | undefined,\n        values?: CurrencyInputOnChangeValues | undefined\n      ) => void)\n    | undefined;\n  onBlur?: React.FocusEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n  onFocus?: React.FocusEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n  onKeyDown?: React.KeyboardEventHandler<\n    HTMLTextAreaElement | HTMLInputElement\n  >;\n  onKeyUp?: React.KeyboardEventHandler<HTMLTextAreaElement | HTMLInputElement>;\n  onMouseOver?: React.MouseEventHandler<HTMLTextAreaElement | HTMLInputElement>;\n  onMouseLeave?: React.MouseEventHandler<\n    HTMLTextAreaElement | HTMLInputElement\n  >;\n}\n\nconst CustomInputSpinner: FC<CustomInputSpinnerProps> = ({\n  id,\n  name,\n  label,\n  isLabelOutside = false,\n  placeholder,\n  value,\n  error,\n  helperText,\n  helperTextEnd,\n  fullWidth,\n  searchIcon,\n  symbol,\n  icon,\n  button,\n  isInputDisabled,\n  prefix = '$ ',\n  PREFIX_VALUE = '+',\n  VALUES = [],\n  inputSpinnerWrapperClassName = '',\n  containerClassName = '',\n  inputClassName = '',\n  symbolClassName = '',\n  helperClassName = '',\n  helperTextClassName = '',\n  helperTextEndClassName = '',\n  onFixedValueChange,\n  resetValue,\n  onChange,\n  handleValueMinusOne,\n  handleValuePlusOne,\n  onValueChange,\n  onBlur,\n  onFocus,\n  onKeyDown,\n  onKeyUp,\n  onMouseOver,\n  onMouseLeave,\n}) => {\n  const [isMinusFocus, setIsMinusFocus] = useState(false);\n  const [isPlusFocus, setIsPlusFocus] = useState(false);\n  // border border-ink-20 hover:bg-ink-20 hover:border-ink-10\n\n  return (\n    <div>\n      {/* INPUT */}\n      <div\n        className={`flex justify-between gap-x-3 ${inputSpinnerWrapperClassName}`}\n      >\n        <div\n          onClick={handleValueMinusOne}\n          className={`p-3 flex-shrink-0 flex items-center justify-center rounded-xl text-ink-60 cursor-pointer ${\n            isMinusFocus ? 'border-primary' : 'border-input-ink bg-ink-05'\n          }`}\n          onMouseOver={(e) => {\n            setIsMinusFocus(true);\n          }}\n          onMouseLeave={(e) => {\n            setIsMinusFocus(false);\n          }}\n        >\n          {isMinusFocus ? (\n            <img\n              className=\"w-[2rem]\"\n              src={images.input.minus_gold}\n              alt=\"BotLambotrade\"\n            />\n          ) : (\n            <img\n              className=\"w-[2rem]\"\n              src={images.input.minus}\n              alt=\"BotLambotrade\"\n            />\n          )}\n        </div>\n        <TextInput\n          containerClassName=\"flex-grow font-bold\"\n          id={id}\n          name={name}\n          label={label}\n          type=\"number\"\n          value={value}\n          onValueChange={onValueChange}\n          placeholder={placeholder}\n          prefix={prefix}\n          inputClassName=\"!py-[0.875rem] text-center text-xl\"\n          fullWidth={true}\n          onBlur={onBlur}\n          onFocus={onFocus}\n          onKeyDown={onKeyDown}\n          onKeyUp={onKeyUp}\n          onMouseOver={onMouseOver}\n          onMouseLeave={onMouseLeave}\n          // containerClassName=\"w-[25rem]\"\n          // icon={images.input.eye}\n          // button={<CustomButton>Button</CustomButton>}\n        />\n        <div\n          onClick={handleValuePlusOne}\n          className={`p-3 flex-shrink-0 flex items-center justify-center rounded-xl cursor-pointer ${\n            isPlusFocus ? 'border-primary' : 'border-input-ink'\n          }`}\n          onMouseOver={(e) => {\n            setIsPlusFocus(true);\n          }}\n          onMouseLeave={(e) => {\n            setIsPlusFocus(false);\n          }}\n        >\n          <img\n            className=\"w-[2rem]\"\n            src={images.copy.plus_gold}\n            alt=\"BotLambotrade\"\n          />\n        </div>\n      </div>\n\n      {/* BUTTON */}\n      {VALUES.length > 0 && (\n        <div className=\"mt-4 grid grid-flow-col auto-cols-fr gap-x-2\">\n          {VALUES.map((value, index) => {\n            let renderText;\n            if (typeof value === 'string') {\n              renderText = value;\n            } else {\n              renderText = PREFIX_VALUE + value;\n            }\n            return (\n              <div\n                key={index * Math.random() * 100}\n                className=\"flex-grow xl:px-3 xl:py-3 px-2 py-2 text-center bg-ink-05 hover:bg-ink-20 text-ink-100 rounded-xl cursor-pointer\"\n                onClick={() => {\n                  if (onFixedValueChange) {\n                    onFixedValueChange(value);\n                  }\n                }}\n              >\n                {renderText}\n              </div>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CustomInputSpinner;\n","import CustomButton from 'components/CustomButton';\nimport CustomModal from 'components/CustomModal';\nimport React, { FC } from 'react';\nimport CustomValidateModelProps from 'types/CustomValidateProps';\n\nconst CustomValidateModel: FC<CustomValidateModelProps> = ({\n  isOpen,\n  headingMessage,\n  message,\n  icon,\n  buttonMessage,\n  handleOpen,\n  handleClose,\n}) => {\n  return (\n    <CustomModal\n      zIndex={2000}\n      isOpen={isOpen}\n      handleOpen={handleOpen}\n      handleClose={handleClose}\n    >\n      <div className=\"absolute left-[50%] top-[50%] translate-x-[-50%] translate-y-[-50%] p-6 w-[calc(100vw-2rem)] md:min-w-[31.25rem] md:max-w-[31.25rem] bg-background-80 rounded-3xl text-center\">\n        <img\n          className=\"mb-4 w-[5.5rem] mx-auto\"\n          src={icon}\n          alt=\"BotLambotrade\"\n        />\n        <p className=\"mb-2 mx-auto max-w-[18.75rem] text-xl text-ink-100 font-bold\">\n          {headingMessage}\n        </p>\n        <p className=\"mb-12\">{message}</p>\n        <div className=\"w-full\">\n          <CustomButton\n            className=\"w-full py-4\"\n            textClassName=\"font-bold\"\n            onClick={() => {\n              handleClose();\n            }}\n          >\n            {buttonMessage}\n          </CustomButton>\n        </div>\n      </div>\n    </CustomModal>\n  );\n};\n\nexport default CustomValidateModel;\n","import React, { FC } from 'react';\n\ntype SearchInputProps = {\n  inputClassName?: string;\n  inputName: string;\n  searchInput: string;\n  setSearchInput: React.Dispatch<React.SetStateAction<string>>;\n};\n\nconst SearchInput: FC<SearchInputProps> = ({\n  inputClassName,\n  inputName,\n  searchInput,\n  setSearchInput,\n}) => {\n  return (\n    <div>\n      <label\n        htmlFor=\"default-search\"\n        className=\"mb-2 text-sm font-medium sr-only text-ink-100\"\n      >\n        Search\n      </label>\n      <div className=\"relative\">\n        <div className=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n          <svg\n            aria-hidden=\"true\"\n            className=\"w-5 h-5 text-black-opacity-100\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n            ></path>\n          </svg>\n        </div>\n        <input\n          type=\"search\"\n          id={inputName}\n          name={inputName}\n          className={`${inputClassName} block py-3 pl-9 pr-8 text-sm text-black-opacity-40 border border-ink-20 rounded-xl bg-ink-05 focus:ring-blue-500 focus:border-blue-500 placeholder-black-opacity-40 dark:focus:ring-blue-500 dark:focus:border-blue-500`}\n          placeholder=\"Tìm kiếm\"\n          value={searchInput}\n          onChange={(e) => {\n            setSearchInput(e.target.value);\n          }}\n          required\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default SearchInput;\n","import { Cancel } from '@mui/icons-material';\nimport { TextField } from '@mui/material';\nimport React, { FC, forwardRef, useRef, useState } from 'react';\nimport { boolean } from 'yup';\nimport { isDisabled } from '@testing-library/user-event/dist/utils';\nimport CurrencyInput, { CurrencyInputProps } from 'react-currency-input-field';\nimport { CurrencyInputOnChangeValues } from 'react-currency-input-field/dist/components/CurrencyInputProps';\nimport Select, {\n  components,\n  ActionMeta,\n  GroupBase,\n  OptionsOrGroups,\n  SingleValue,\n  StylesConfig,\n  ContainerProps,\n  InputProps,\n  Props,\n  IndicatorSeparatorProps,\n  IndicatorsContainerProps,\n  MenuListProps,\n  OptionProps,\n  SingleValueProps,\n} from 'react-select';\nimport Control, {\n  ControlProps,\n} from 'react-select/dist/declarations/src/components/Control';\nimport images from 'assets';\nimport TextInput from 'components/TextInput';\nimport InputSelectOption from 'types/InputSelectOption';\n\ninterface SelectInputProps {\n  id?: string;\n  name: string;\n  label?: React.ReactNode;\n  isLabelOutside?: boolean;\n  placeholder?: string;\n  value: InputSelectOption | null;\n  options:\n    | OptionsOrGroups<InputSelectOption, GroupBase<InputSelectOption>>\n    | undefined;\n  defaultValue?: InputSelectOption;\n  isSelectDisabled?: boolean;\n  error?: boolean;\n  helperText?: React.ReactNode;\n  helperTextEnd?: React.ReactNode;\n  fullWidth?: boolean;\n  searchIcon?: string;\n  symbol?: string;\n  icon?: string | undefined;\n  button?: React.ReactNode;\n  containerClassName?: string;\n  selectContainerClassName?: string;\n  inputClassName?: string;\n  indicatorContainerClassName?: string;\n  indicatorContainerIconClassName?: string;\n  symbolClassName?: string;\n  helperClassName?: string;\n  helperTextClassName?: string;\n  helperTextEndClassName?: string;\n  menuPortalClassName?: string;\n  resetValue?: () => void;\n  onChange?:\n    | ((\n        newValue: SingleValue<InputSelectOption>,\n        actionMeta: ActionMeta<InputSelectOption>\n      ) => void)\n    | undefined;\n  onBlur?: React.FocusEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n  onFocus?: React.FocusEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n  onKeyDown?: React.KeyboardEventHandler<\n    HTMLTextAreaElement | HTMLInputElement\n  >;\n  onKeyUp?: React.KeyboardEventHandler<HTMLTextAreaElement | HTMLInputElement>;\n  onMouseOver?: React.MouseEventHandler<HTMLTextAreaElement | HTMLInputElement>;\n  onMouseLeave?: React.MouseEventHandler<\n    HTMLTextAreaElement | HTMLInputElement\n  >;\n  // REF\n  menuRef?: React.RefObject<HTMLDivElement>;\n}\n\nconst selectStyles: StylesConfig<InputSelectOption> = {\n  control: (styles) => ({\n    ...styles,\n  }),\n};\n\nexport interface ColourOption {\n  readonly value: string;\n  readonly label: string;\n}\n\nexport const IndicatorsContainer = (\n  props: IndicatorsContainerProps<InputSelectOption, false>\n) => {\n  // @ts-ignore\n  const { indicatorContainerClassName, indicatorContainerIconClassName } =\n    props.selectProps;\n  return (\n    <components.IndicatorsContainer\n      className={`absolute right-3 top-[50%] translate-y-[-50%] ${indicatorContainerClassName}`}\n      {...props}\n    >\n      <img\n        className={`w-[1.5rem] ${indicatorContainerIconClassName}`}\n        src={images.input.dropdown}\n        alt=\"Legend Ground\"\n      />\n    </components.IndicatorsContainer>\n  );\n};\n\nconst IndicatorSeparator = ({\n  innerProps,\n}: IndicatorSeparatorProps<InputSelectOption, false>) => {\n  // return <span style={indicatorSeparatorStyle} {...innerProps} />;\n  return <></>;\n};\n\nconst MenuList = (props: MenuListProps<InputSelectOption, false>) => {\n  // @ts-ignore\n  // prettier-ignore\n  const { searchInputIcon, searchInput, searchInputName, searchInputPlaceHolder, \n    // @ts-ignore\n    searchInputSymbol, searchInputResetValue, searchInputError, searchInputHelperText } = props.selectProps;\n\n  return (\n    <components.MenuList {...props}>\n      {searchInput && (\n        <TextInput\n          searchIcon={searchInputIcon}\n          name={searchInputName}\n          value={searchInput}\n          placeholder={searchInputPlaceHolder}\n          symbol={searchInputSymbol}\n          resetValue={searchInputResetValue}\n          error={searchInputError}\n          helperText={searchInputHelperText}\n          type=\"search\"\n        />\n      )}\n      {props.children}\n      {/* <div className=\"max-h-[39.5rem] overflow-y-auto\"></div> */}\n    </components.MenuList>\n  );\n};\n\nconst Option = (props: OptionProps<InputSelectOption>) => {\n  // const { value, options, isOptionSelected } = props.selectProps;\n  const { isSelected, data, selectOption } = props;\n  const optionRef = useRef<HTMLDivElement | null>(null);\n  // console.log('isSelected', isSelected);\n  // console.log('data', data);\n  return (\n    <components.Option\n      {...props}\n      className={`!px-4 w-fit border-select-input-two select-input-hover ${\n        isSelected ? 'bg-primary-05 !bg-inherit' : ''\n      } !cursor-pointer`}\n    >\n      <div\n        className=\"py-4 flex items-center justify-between\"\n      >\n        <p\n          className={`${\n            isSelected\n              ? 'bg-primary-100 !bg-clip-text !text-transparent'\n              : 'text-ink-100'\n          }`}\n        >\n          {props.children}\n        </p>\n        {isSelected && (\n          <img\n            className=\"w-[1.5rem]\"\n            src={images.input.gold_checkbox}\n            alt=\"BotLambotrade\"\n          />\n        )}\n      </div>\n    </components.Option>\n  );\n};\n\nconst SelectInput: FC<SelectInputProps> = forwardRef(\n  (\n    {\n      id,\n      name,\n      label,\n      isLabelOutside = false,\n      placeholder,\n      value,\n      error,\n      helperText,\n      helperTextEnd,\n      fullWidth,\n      options,\n      defaultValue,\n      searchIcon,\n      symbol,\n      icon,\n      button,\n      isSelectDisabled,\n      containerClassName = '',\n      selectContainerClassName = '',\n      inputClassName = '',\n      indicatorContainerClassName = '',\n      indicatorContainerIconClassName = '',\n      symbolClassName = '',\n      helperClassName = '',\n      helperTextClassName = '',\n      helperTextEndClassName = '',\n      menuPortalClassName = '',\n      resetValue,\n      onChange,\n      onBlur,\n      onFocus,\n      onKeyDown,\n      onKeyUp,\n      onMouseOver,\n      onMouseLeave,\n      menuRef,\n    },\n    ref\n  ) => {\n    const [isSelectFocus, setIsSelectFocus] = useState(false);\n    const [isSelectHover, setIsSelectHover] = useState(false);\n    const [isPasswordShowing, setIsPasswordShowing] = useState(false);\n    const inputRef = useRef<HTMLInputElement>(null);\n    // const [isClickingInside, setIsClickingInside] = useState(false);\n\n    const passwordType = isPasswordShowing ? 'text' : 'password';\n    const handlePasswordShown = () => {\n      // @ts-ignore\n      inputRef.current?.focus();\n      setIsPasswordShowing((prev) => !prev);\n    };\n\n    const inputSpacingWithLabel = label\n      ? 'pt-[1.625rem] pb-[0.375rem]'\n      : 'py-3';\n\n    return (\n      <div\n        className={`relative ${\n          fullWidth ? 'w-full' : ''\n        } ${containerClassName} ${\n          isSelectDisabled ? 'cursor-not-allowed' : ''\n        }`}\n      >\n        {!!label && !isLabelOutside && (\n          <label\n            className={`cubic-bezier absolute left-0 top-0  ${\n              icon || button ? 'w-[85%]' : 'w-[70%]'\n            } overflow-hidden text-ellipsis whitespace-nowrap ${\n              !isSelectFocus && !value && value !== 0\n                ? 'pl-3 pr-3 py-4 text-base text-ink-40'\n                : 'pl-3 pr-3 py-[0.375rem] text-xs text-ink-60'\n            }`}\n            onClick={() => {\n              inputRef.current?.focus();\n            }}\n          >\n            {label}\n          </label>\n        )}\n        <div\n          onMouseOver={() => {\n            setIsSelectHover(true);\n          }}\n          onMouseLeave={() => {\n            setIsSelectHover(false);\n          }}\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n        >\n          <Select\n            // defaultValue={value}\n            value={value}\n            id={id}\n            name={name}\n            options={options}\n            // @ts-ignore\n            ref={inputRef}\n            menuPortalTarget={document.body}\n            indicatorContainerClassName={indicatorContainerClassName}\n            indicatorContainerIconClassName={indicatorContainerIconClassName}\n            menuPlacement=\"auto\"\n            // menuPosition=\"fixed\"\n            // menuIsOpen={true}\n            classNames={{\n              container: (state) => {\n                return `relative ${selectContainerClassName}`;\n              },\n              control: (state) => {\n                return `${inputSpacingWithLabel} relative w-full !overflow-hidden !text-ellipsis !whitespace-nowrap !bg-transparent !caret-yellow-500 !focus:outline-none ${\n                  !searchIcon ? '!pl-3 !pr-[2.875rem]' : '!pl-8 !pr-[2.875rem]'\n                } !rounded-xl ${\n                  isSelectDisabled\n                    ? 'border-input-ink !bg-ink-10'\n                    : error\n                    ? 'border-input-red'\n                    : isSelectFocus || isSelectHover\n                    ? 'border-primary'\n                    : 'border-input-ink'\n                } !border-0 !shadow-none ${inputClassName} !cursor-pointer`;\n                // return `${inputSpacingWithLabel} w-full overflow-hidden text-ellipsis whitespace-nowrap !bg-transparent caret-input focus:outline-none ${\n                //   !isSelectDisabled && !value && label\n                //     ? 'placeholder-transparent'\n                //     : 'placeholder-ink-20'\n                // } ${inputClassName}`;\n              },\n              valueContainer: (state) => {\n                return `!p-0`;\n              },\n              singleValue: (state) => {\n                return `!m-0 !text-ink-100`;\n              },\n              placeholder: (state) => {\n                return `!m-0 ${\n                  !isSelectFocus && !value && label && !isLabelOutside\n                    ? '!text-transparent'\n                    : '!text-ink-20'\n                }`;\n              },\n              menu: (state) => {\n                return `my-2 py-4 !overflow-hidden !rounded-2xl !bg-dropdown shadow-popup `;\n              },\n              menuList: (state) => {\n                return `!p-0`;\n              },\n              menuPortal: (state) => {\n                return `!z-[20000] ${menuPortalClassName}`;\n              },\n            }}\n            unstyled\n            isOptionSelected={(option, options) => {\n              return options[0]?.value === option?.value;\n            }}\n            components={{\n              IndicatorSeparator,\n              IndicatorsContainer,\n              MenuList,\n              Option,\n            }}\n            openMenuOnFocus={true}\n            onChange={(option, actionMeta) => {\n              if (onChange) {\n                onChange(option, actionMeta);\n              }\n              setIsSelectFocus(false);\n              setIsSelectHover(false);\n            }}\n            onBlur={(e) => {\n              if (onBlur) {\n                onBlur(e);\n              }\n              setIsSelectFocus(false);\n            }}\n            onFocus={(e) => {\n              if (onFocus) {\n                onFocus(e);\n              }\n              setIsSelectFocus(true);\n            }}\n            isSearchable={false}\n            isDisabled={isSelectDisabled}\n          />\n        </div>\n        {/* <div\n        className={`relative ${\n          fullWidth ? 'w-full' : ''\n        } ${containerClassName}`}\n      >\n        {!!label && (\n          <label\n            className={`cubic-bezier -z-10 absolute left-0 top-0 w-[70%] overflow-hidden text-ellipsis whitespace-nowrap ${\n              !isInputFocus && !value && value !== 0\n                ? 'px-3 py-4 text-base text-ink-40'\n                : 'px-3 py-[0.375rem] text-xs text-ink-60'\n            }`}\n          >\n            {label}\n          </label>\n        )}\n\n        <div\n          className={`px-3 flex justify-between items-center gap-x-3 rounded-xl ${\n            isSelectDisabled\n              ? 'border-input-ink bg-ink-10'\n              : error\n              ? 'border-input-red'\n              : isInputFocus\n              ? 'border-primary'\n              : 'border-input-ink'\n          } `}\n        ></div>\n      </div> */}\n        {(!!helperText || !!helperTextEnd) && (\n          <div className={`px-3 pt-2 flex justify-between ${helperClassName}`}>\n            <p\n              className={`${\n                isSelectDisabled\n                  ? 'text-ink-80'\n                  : error\n                  ? 'text-red-100'\n                  : 'text-ink-80'\n              } text-sm ${helperTextClassName}`}\n            >\n              {helperText}\n            </p>\n            <p className={`text-ink-100 text-sm ${helperTextEndClassName}`}>\n              {helperTextEnd}\n            </p>\n          </div>\n        )}\n      </div>\n    );\n  }\n);\n\nexport default SelectInput;\n","import { Cancel } from '@mui/icons-material';\nimport { TextField } from '@mui/material';\nimport React, { FC, useRef, useState } from 'react';\nimport { boolean } from 'yup';\nimport { isDisabled } from '@testing-library/user-event/dist/utils';\nimport CurrencyInput, { CurrencyInputProps } from 'react-currency-input-field';\nimport { CurrencyInputOnChangeValues } from 'react-currency-input-field/dist/components/CurrencyInputProps';\n\ninterface TextInputProps {\n  id?: string;\n  name: string;\n  label?: React.ReactNode;\n  isLabelOutside?: boolean;\n  type: React.InputHTMLAttributes<unknown>['type'];\n  placeholder?: string;\n  prefix?: string;\n  value: string | number | readonly string[] | undefined;\n  error?: boolean;\n  isInputDisabled?: boolean;\n  helperText?: React.ReactNode;\n  helperTextEnd?: React.ReactNode;\n  decimalsLimit?: number;\n  decimalScale?: number;\n  fixedDecimalLength?: number;\n  fullWidth?: boolean;\n  searchIcon?: string;\n  symbol?: string;\n  autoComplete?: boolean;\n  icon?: string | undefined;\n  button?: React.ReactNode;\n  searchIconClassName?: string;\n  containerClassName?: string;\n  inputClassName?: string;\n  symbolClassName?: string;\n  helperClassName?: string;\n  helperTextClassName?: string;\n  helperTextEndClassName?: string;\n  resetValue?: () => void;\n  onChange?: React.ChangeEventHandler<HTMLTextAreaElement | HTMLInputElement>;\n  onValueChange?:\n  | ((\n    value: string | undefined,\n    name?: string | undefined,\n    values?: CurrencyInputOnChangeValues | undefined\n  ) => void)\n  | undefined;\n  onBlur?: React.FocusEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n  onFocus?: React.FocusEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n  onKeyDown?: React.KeyboardEventHandler<\n    HTMLTextAreaElement | HTMLInputElement\n  >;\n  onKeyUp?: React.KeyboardEventHandler<HTMLTextAreaElement | HTMLInputElement>;\n  onMouseOver?: React.MouseEventHandler<HTMLTextAreaElement | HTMLInputElement>;\n  onMouseLeave?: React.MouseEventHandler<\n    HTMLTextAreaElement | HTMLInputElement\n  >;\n}\n\nconst TextInput: FC<TextInputProps> = ({\n  id,\n  name,\n  label,\n  isLabelOutside = false,\n  placeholder,\n  prefix,\n  type = 'text',\n  value,\n  error,\n  helperText,\n  helperTextEnd,\n  decimalsLimit = 3,\n  decimalScale,\n  fixedDecimalLength,\n  fullWidth,\n  searchIcon,\n  symbol,\n  icon,\n  autoComplete,\n  button,\n  isInputDisabled,\n  searchIconClassName = '',\n  containerClassName = '',\n  inputClassName = '',\n  symbolClassName = '',\n  helperClassName = '',\n  helperTextClassName = '',\n  helperTextEndClassName = '',\n  resetValue,\n  onChange,\n  onValueChange,\n  onBlur,\n  onFocus,\n  onKeyDown,\n  onKeyUp,\n  onMouseOver,\n  onMouseLeave,\n}) => {\n  const [isInputFocus, setInputFocus] = useState(false);\n  const [isInputHover, setIsInputHover] = useState(false);\n  const [isPasswordShowing, setIsPasswordShowing] = useState(false);\n  const inputRef = useRef<HTMLInputElement | null>(null);\n  // const [isClickingInside, setIsClickingInside] = useState(false);\n\n  const passwordType = isPasswordShowing ? 'text' : 'password';\n  const handlePasswordShown = () => {\n    inputRef.current?.focus();\n    setIsPasswordShowing((prev) => !prev);\n  };\n\n  const inputSpacingWithLabel =\n    label && !isLabelOutside ? 'pt-[1.625rem] pb-[0.375rem]' : 'py-4';\n\n  return (\n    <div\n      className={`relative ${fullWidth ? 'w-full' : ''} ${containerClassName}`}\n    >\n      {!!label && isLabelOutside && (\n        <div className={`mb-2 cubic-bezier ssss`}>\n          <label\n            className={`overflow-hidden text-ellipsis whitespace-nowrap small-caps`}\n            onClick={() => {\n              inputRef.current?.focus();\n            }}\n          >\n            {label}\n          </label>\n        </div>\n      )}\n      {!!label && !isLabelOutside && (\n        <label\n          className={`cubic-bezier absolute left-0 top-0  ${icon || button ? 'w-[85%]' : 'w-[70%]'\n            } overflow-hidden text-ellipsis whitespace-nowrap ${!isInputFocus && !value\n              ? 'pl-3 pr-3 py-4 text-base text-ink-40'\n              : 'pl-3 pr-3 py-[0.375rem] text-xs text-ink-60'\n            }`}\n          onClick={() => {\n            inputRef.current?.focus();\n          }}\n        >\n          {label}\n        </label>\n      )}\n      {!!searchIcon && (\n        <div className=\"absolute left-3 top-[50%] translate-y-[-50%]\">\n          <img className={`w-[1.5rem] ${searchIconClassName}`} src={searchIcon} alt=\"BotLambotrade\" />\n        </div>\n      )}\n\n      <div\n        className={`${!searchIcon ? 'pl-3 pr-3' : 'pl-10 pr-3'\n          } flex justify-between items-center gap-x-3 rounded-xl ${isInputDisabled\n            ? 'border-input-ink bg-ink-10'\n            : error\n              ? 'border-input-red'\n              : isInputFocus || isInputHover\n                ? 'border-primary'\n                : 'border-input-ink'\n          }`}\n      >\n        <div className=\"relative z-10 flex-grow flex justify-between items-center\">\n          {type === 'number' && (\n            <CurrencyInput\n              id={id}\n              name={name}\n              autoComplete={autoComplete === true ? 'new-password' : ''}\n              className={`${inputSpacingWithLabel} w-full overflow-hidden text-ellipsis whitespace-nowrap bg-transparent caret-yellow-500 focus:outline-none ${!isInputFocus && !value && label && !isLabelOutside\n                  ? 'placeholder-transparent'\n                  : 'placeholder-ink-20'\n                } ${inputClassName}`}\n              value={value}\n              placeholder={placeholder}\n              onChange={onChange}\n              onValueChange={(value, _, values) => {\n                if (onValueChange) {\n                  onValueChange(value, _, values);\n                }\n              }}\n              onBlur={(e) => {\n                if (onBlur) {\n                  onBlur(e);\n                }\n                setInputFocus(false);\n              }}\n              onFocus={(e) => {\n                if (onFocus) {\n                  onFocus(e);\n                }\n                setInputFocus(true);\n              }}\n              onKeyDown={onKeyDown}\n              onKeyUp={onKeyUp}\n              onMouseOver={(e) => {\n                if (onMouseOver) {\n                  onMouseOver(e);\n                }\n                setIsInputHover(true);\n              }}\n              onMouseLeave={(e) => {\n                if (onMouseLeave) {\n                  onMouseLeave(e);\n                }\n                setIsInputHover(false);\n              }}\n              prefix={prefix}\n              disabled={isInputDisabled}\n              allowNegativeValue={false}\n              decimalsLimit={decimalsLimit}\n              decimalScale={decimalScale}\n              fixedDecimalLength={fixedDecimalLength}\n              disableAbbreviations={true}\n              decimalSeparator=\".\"\n              groupSeparator=\",\"\n              maxLength={13}\n              // intlConfig={{ locale: 'en-US', currency: 'USD' }}\n              ref={inputRef}\n            />\n          )}\n          {type !== 'number' && (\n            <input\n              id={id}\n              name={name}\n              autoComplete={autoComplete === true ? 'new-password' : ''}\n              className={`${inputSpacingWithLabel} w-full overflow-hidden text-ellipsis whitespace-nowrap bg-transparent caret-input focus:outline-none ${!isInputFocus && !value && label && !isLabelOutside\n                  ? 'placeholder-transparent'\n                  : 'placeholder-ink-20'\n                } ${inputClassName}`}\n              type={type === 'password' ? passwordType : type}\n              value={value}\n              placeholder={placeholder}\n              onChange={onChange}\n              onBlur={(e) => {\n                if (onBlur) {\n                  onBlur(e);\n                }\n                setInputFocus(false);\n              }}\n              onFocus={(e) => {\n                if (onFocus) {\n                  onFocus(e);\n                }\n                setInputFocus(true);\n              }}\n              onKeyDown={onKeyDown}\n              onKeyUp={onKeyUp}\n              onMouseOver={(e) => {\n                if (onMouseOver) {\n                  onMouseOver(e);\n                }\n                setIsInputHover(true);\n              }}\n              onMouseLeave={(e) => {\n                if (onMouseLeave) {\n                  onMouseLeave(e);\n                }\n                setIsInputHover(false);\n              }}\n              disabled={isInputDisabled}\n              ref={inputRef}\n            />\n          )}\n\n          {symbol && (\n            <span className={`${inputSpacingWithLabel} ${symbolClassName}`}>\n              {symbol}\n            </span>\n          )}\n        </div>\n\n        {((!!value && resetValue) || !!icon || !!button) && (\n          <div className=\"z-10 flex justify-end items-center gap-x-[1.25rem]\">\n            {!!value && resetValue && (\n              <div\n                className={`${button || icon ? 'input-icon-seperator' : ''} ${isInputFocus || isInputHover ? 'opacity-100' : 'opacity-50'\n                  }`}\n                onClick={(e) => {\n                  if (resetValue) {\n                    resetValue();\n                    inputRef.current?.focus();\n                  }\n                }}\n              >\n                <Cancel className=\"w-[1.5rem] !fill-ink-60 cursor-pointer\" />\n              </div>\n            )}\n            {!!icon && (\n              <div className={`${button ? 'input-icon-seperator' : ''}`}>\n                <img\n                  className={`w-[1.5rem] cursor-pointer`}\n                  src={icon}\n                  alt=\"BotLambotrade\"\n                  onClick={handlePasswordShown}\n                />\n              </div>\n            )}\n            {!!button && <div className=\"py-[0.375rem]\">{button}</div>}\n          </div>\n        )}\n      </div>\n      {(!!helperText || !!helperTextEnd) && (\n        <div className={`px-3 pt-2 flex justify-between ${helperClassName}`}>\n          <p\n            className={`${isInputDisabled\n                ? 'text-ink-80'\n                : error\n                  ? 'text-red-100'\n                  : 'text-ink-80'\n              } text-sm ${helperTextClassName}`}\n          >\n            {helperText}\n          </p>\n          <p className={`text-ink-100 text-sm ${helperTextEndClassName}`}>\n            {helperTextEnd}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TextInput;\n","import React, { FC } from 'react';\nimport { SnackbarContent, SnackbarKey, SnackbarMessage } from 'notistack';\nimport images from 'assets';\nimport { Cancel } from '@mui/icons-material';\n\nconst ICONS = {\n  success: images.toast.check,\n  warning: images.toast.warning,\n  error: images.toast.error,\n};\n\nconst TEXT_COLORS = {\n  success: 'text-green-100',\n  warning: 'text-yellow-100',\n  error: 'text-red-100',\n};\n\nconst TITLES = {\n  success: 'Thành công',\n  warning: 'Cảnh báo',\n  error: 'Thất bại',\n};\n\ninterface CustomSnackbarProps {\n  id: SnackbarKey;\n  message: SnackbarMessage;\n  variant?: 'success' | 'error' | 'warning';\n  closeSnackBar: () => void;\n}\n\nconst CustomSnackbar = React.forwardRef<HTMLDivElement, CustomSnackbarProps>(\n  ({ id, message, variant, closeSnackBar }, ref) => {\n    return (\n      <>\n        <div\n          className={`flex items-center justify-between gap-x-3 p-4 rounded-3xl w-[full] md:w-[25rem] transition-all bg-dropdown toast-in-right`}\n          key={id}\n          ref={ref}\n        >\n          <div className=\"flex items-center justify-between gap-x-3\">\n            <div className=\"flex-shrink-0 p-[0.625rem] rounded-2xl bg-ink-05\">\n              <img\n                className=\"w-8\"\n                src={variant && ICONS[variant]}\n                alt=\"BotLambotrade\"\n              />\n            </div>\n            <div>\n              <p\n                className={`mb-1 font-bold ${variant && TEXT_COLORS[variant]}`}\n              >\n                {variant && TITLES[variant]}\n              </p>\n              <p className=\"text-ink-80 text-sm\">{message}</p>\n            </div>\n          </div>\n          <button onClick={closeSnackBar}>\n            <Cancel className=\"fill-ink-100\" />\n          </button>\n        </div>\n      </>\n    );\n  }\n);\n\nexport default CustomSnackbar;\n","import CustomSnackbar from 'components/CustomSnackbar';\nimport { OptionsObject, useSnackbar } from 'notistack';\nimport { useCallback } from 'react';\n\nexport const useEnqueueSnackbar = () => {\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  const pushSnackbar = useCallback(\n    (\n      message: string,\n      // extend the default options object\n      options?: OptionsObject &\n        Partial<{ variant: 'success' | 'error' | 'warning' }>\n    ) => {\n      enqueueSnackbar(message, {\n        ...options,\n        content: (key) => {\n          // destructure the options we need from the extended options\n          // object, and provide a default case if we didn't provide any\n          const { variant } = options || { variant: undefined };\n          const handleCloseSnackbar = () => {\n            closeSnackbar(key);\n          };\n          return (\n            <CustomSnackbar\n              id={`${key}`}\n              message={message}\n              variant={variant || 'success'}\n              closeSnackBar={handleCloseSnackbar}\n            />\n          );\n        },\n      });\n    },\n    [closeSnackbar, enqueueSnackbar]\n  );\n\n  return pushSnackbar;\n};\n","import images from 'assets';\nimport SearchInputFormik from 'pages/CopyTradeSetting/CopyTradeSettingSearchInput';\nimport React, { FC, useRef, useState } from 'react';\nimport { FormikProps } from 'formik';\nimport SearchInput from 'components/SearchInput';\nimport InputSelectOption from 'types/InputSelectOption';\n\ninterface CopyTradeZoomSelectInputProps {\n  labelName: string;\n  inputValue: InputSelectOption;\n  options: InputSelectOption[];\n  // setInputValue: React.Dispatch<React.SetStateAction<InputSelectOption>>;\n  onSelectChange: (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    option: InputSelectOption\n  ) => void;\n  popupClassName?: string;\n  containerClassName?: string;\n  isSearchEnabled?: boolean;\n}\n\nconst CopyTradeZoomSelectInput: FC<CopyTradeZoomSelectInputProps> = ({\n  labelName,\n  popupClassName = '',\n  containerClassName = '',\n  isSearchEnabled = true,\n  inputValue,\n  // setInputValue,\n  onSelectChange,\n  options,\n}) => {\n  const [open, setOpen] = useState(false);\n  const [searchInput, setSearchInput] = useState('MBot 1.8');\n  const handleOpen = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    setOpen((prev) => !prev);\n  };\n\n  // const handleSelect = (\n  //   e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n  //   option: InputSelectOption\n  // ) => {\n  //   setOpen((prev) => !prev);\n  //   setInputValue(option);\n  // };\n\n  return (\n    <>\n      <div\n        className={`relative px-3 py-[0.375rem] border border-ink-10 bg-ink-05 rounded-2xl cursor-pointer ${containerClassName}`}\n      >\n        <div className=\"flex justify-between items-center\" onClick={handleOpen}>\n          <div>\n            <label className=\"pb-1 text-ink-60 text-xs cursor-pointer\">\n              {labelName}\n            </label>\n            <p className=\"text-ink-100\">\n              {inputValue.label ? inputValue.label : '\\u00A0'}\n            </p>\n          </div>\n          <img\n            className=\"w-[1.5rem]\"\n            src={images.home.white_dropdown}\n            alt=\"BotLambotrade\"\n          />\n        </div>\n        {open && (\n          <div\n            className={`z-[10000] top-[calc(100%+0.5rem)] absolute w-full left-0 bg-dropdown rounded-2xl cursor-pointer shadow-popup ${popupClassName}`}\n          >\n            {isSearchEnabled && (\n              <div className=\"p-4\">\n                <SearchInput\n                  inputName=\"search\"\n                  inputClassName=\"w-full\"\n                  searchInput={searchInput}\n                  setSearchInput={setSearchInput}\n                />\n              </div>\n            )}\n            <div className=\"flex flex-col max-h-[39.5rem] overflow-y-auto\">\n              {options.map((option, index) => (\n                <div\n                  className={`border-select-input first:rounded-tl-2xl first:rounded-tr-2xl last:rounded-bl-2xl last:rounded-br-2xl ${\n                    inputValue.value === option.value ? 'bg-primary-05' : 'p-4'\n                  }`}\n                  onClick={(e) => {\n                    // handleSelect(e, option);\n                    onSelectChange(e, option);\n                    setOpen((prev) => !prev);\n                  }}\n                  key={index}\n                >\n                  <p\n                    className={`${\n                      inputValue.value === option.value\n                        ? 'p-4 bg-primary-100 bg-clip-text text-transparent'\n                        : ''\n                    }`}\n                  >\n                    {option.label}\n                  </p>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default CopyTradeZoomSelectInput;\n","import React, { FC, useState } from 'react';\nimport { useMediaQuery } from 'react-responsive';\n\ntype CopyTradeTypeProps = {\n  isMaster: number;\n  setIsMaster: (value: number) => void;\n};\n\nconst CopyTradeType: FC<CopyTradeTypeProps> = ({ isMaster, setIsMaster }) => {\n  // RESPONSIVE\n  const isDesktop = useMediaQuery({\n    query: '(min-width: 1224px)',\n  });\n  const isTablet = useMediaQuery({\n    query: '(min-width: 768px)',\n  });\n  const isMobile = useMediaQuery({\n    query: '(max-width: 767px)',\n  });\n\n  return (\n    <div\n      className={`flex items-center gap-4 mb-6 sm:flex-nowrap flex-wrap ${\n        isMobile && isMaster === 2 ? 'translate-x-[-3.2rem]' : 'translate-x-[0]'\n      } transition-all`}\n    >\n      <div\n        className={`rounded-xl px-6 py-3 cursor-pointer max-sm:flex-1 sm:w-full md:w-fit ${\n          isMaster === 0 ? 'border-primary bg-primary-10' : 'bg-primary-05'\n        } whitespace-nowrap`}\n        onClick={() => {\n          setIsMaster(0);\n        }}\n      >\n        <p\n          className={`${\n            isMaster === 0\n              ? 'bg-primary-100 bg-clip-text text-transparent font-semibold'\n              : 'text-ink-60 font-medium'\n          }`}\n        >\n          Giao dịch AI\n        </p>\n      </div>\n      <div\n        className={`rounded-xl px-6 py-3 cursor-pointer max-sm:flex-1 sm:w-full md:w-fit ${\n          isMaster === 1 ? 'border-primary bg-primary-10' : 'bg-primary-05'\n        } whitespace-nowrap`}\n        onClick={() => {\n          setIsMaster(1);\n        }}\n      >\n        <p\n          className={`${\n            isMaster === 1\n              ? 'bg-primary-100 bg-clip-text text-transparent font-semibold'\n              : 'text-ink-60 font-medium'\n          }`}\n        >\n          Giao dịch cá nhân\n        </p>\n      </div>\n      <div\n        className={`px-6 py-3 rounded-xl cursor-pointer w-full md:w-fit ${\n          isMaster === 2 ? 'border-primary bg-primary-10' : 'bg-primary-05'\n        } whitespace-nowrap`}\n        onClick={() => {\n          setIsMaster(2);\n        }}\n      >\n        <p\n          className={`${\n            isMaster === 2\n              ? 'bg-primary-100 bg-clip-text text-transparent font-semibold'\n              : 'text-ink-60 font-medium'\n          }`}\n        >\n          Giao dịch chuyên gia\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default CopyTradeType;\n","import React, { FC } from 'react';\nimport { ISvgIcon } from 'types';\n\nconst CopyTelegramUpSvg: FC<ISvgIcon> = ({\n  width = '24',\n  height = '24',\n  fill = 'white',\n  className = '',\n  onClick = () => {},\n}) => {\n  return (\n    <svg\n      width={width}\n      height={height}\n      viewBox=\"0 0 24 24\"\n      fill={fill}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={className}\n      onClick={onClick}\n    >\n      <path\n        fill-rule=\"evenodd\"\n        clip-rule=\"evenodd\"\n        d=\"M19.0741 16.106C19.4861 15.6735 19.4861 14.9723 19.0741 14.5398L12.7455 7.8947C12.3336 7.46218 11.6657 7.46218 11.2538 7.8947L4.92515 14.5398C4.51323 14.9723 4.51323 15.6735 4.92515 16.106C5.33706 16.5386 6.00491 16.5386 6.41683 16.106L11.9996 10.2441L17.5825 16.106C17.9944 16.5386 18.6622 16.5386 19.0741 16.106Z\"\n        fill={fill}\n      />\n    </svg>\n  );\n};\n\nexport default CopyTelegramUpSvg;\n","import React, { FC } from 'react';\nimport { ISvgIcon } from 'types';\n\nconst CopyTelegramDownSvg: FC<ISvgIcon> = ({\n  width = '24',\n  height = '24',\n  fill = 'white',\n  className = '',\n  onClick = () => {},\n}) => {\n  return (\n    <svg\n      width={width}\n      height={height}\n      viewBox=\"0 0 24 24\"\n      fill={fill}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={className}\n      onClick={onClick}\n    >\n      <path\n        fill-rule=\"evenodd\"\n        clip-rule=\"evenodd\"\n        d=\"M4.92564 7.8947C4.51372 8.32721 4.51372 9.02845 4.92564 9.46096L11.2543 16.106C11.6662 16.5386 12.3341 16.5386 12.746 16.106L19.0746 9.46096C19.4865 9.02845 19.4865 8.32721 19.0746 7.8947C18.6627 7.46219 17.9949 7.46219 17.583 7.8947L12.0001 13.7567L6.41732 7.8947C6.0054 7.46218 5.33755 7.46218 4.92564 7.8947Z\"\n        fill={fill}\n      />\n    </svg>\n  );\n};\n\nexport default CopyTelegramDownSvg;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport APIs from 'apis';\nimport axios from 'axios';\nimport BotSignal, { BotSignalResult } from 'types/BotSignal';\nimport { Column, useTable } from 'react-table';\nimport images from 'assets';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport CopyTradeZoomSelectInput from './CopyTradeZoomSelectInput';\nimport InputSelectOption from 'types/InputSelectOption';\nimport { useMediaQuery } from 'react-responsive';\nimport CopyTelegramUpSvg from 'svgs/CopyTelegramUpSvg';\nimport CopyTelegramDownSvg from 'svgs/CopyTelegramDownSvg';\n\nexport interface BotInterface {\n  label: string;\n  value: string;\n  [x: string]: any\n}\n\nconst CopyTradeTelegram = () => {\n  const [botList, setBotList] = useState<BotInterface[]>([]);\n  const [botDetailList, setBotDetailList] = useState<any[]>([]);\n  const [currentMoment, setCurrentMoment] = useState(moment());\n  const [searchInputTelegram, setSearchInputTelegram] =\n    useState<InputSelectOption | any>({\n      value: '',\n      label: '',\n    });\n  const [isTelegramChatOpen, setIsTelegramChatOpen] = useState(true);\n\n  // RESPONSIVE\n  const isDesktop = useMediaQuery({\n    query: '(min-width: 1224px)',\n  });\n  const isTablet = useMediaQuery({\n    query: '(min-width: 768px)',\n  });\n  const isMediumTablet = useMediaQuery({\n    minWidth: '768px',\n    maxWidth: '1023px',\n  });\n  const isMobile = useMediaQuery({\n    query: '(max-width: 767px)',\n  });\n\n  useEffect(() => {\n    setInterval(() => setCurrentMoment(moment()), 1000);\n  }, []);\n\n  const loadOrderDetail = (id: any) => {\n    const noLoadingAxios = axios.create();\n    noLoadingAxios\n      .get(`${APIs.botOrderDetail}/${id}`)\n      .then((res) => {\n        setBotDetailList(res?.data?.results)\n      })\n      .catch(() => {\n      });\n  }\n\n  useEffect(() => {\n    const oneMins = 60000;\n    const interval = setInterval(() => {\n      if (searchInputTelegram) {\n        loadOrderDetail(searchInputTelegram.value);\n      }\n    }, oneMins);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [searchInputTelegram]);\n\n  const onSelectTelegramChange = (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    option: InputSelectOption\n  ) => {\n    setSearchInputTelegram(option);\n    loadOrderDetail(option.value);\n  };\n\n  const getAutoBotSignalTeleList = useCallback((page: number) => {\n    const noLoadingAxios = axios.create();\n    noLoadingAxios\n      .get(`${APIs.botSignalTeleList}`, {\n        params: {\n          page,\n          page_size: 20,\n        },\n      })\n      .then((res) => {\n        const result = res?.data?.results.map((bot: any) => {\n          return {\n            ...bot,\n            value: bot.id,\n            label: bot.bot_name,\n          };\n        });\n        setBotList(result)\n        if (result?.length > 0) {\n          setSearchInputTelegram(result[0])\n          loadOrderDetail(result[0].value)\n        }\n      })\n      .catch(() => {\n      });\n  }, []);\n\n  const openTelegramGroup = (link: string) => {\n    window.open(link, '_blank');\n  };\n  \n  // RETRIEVE ORDER HISTORY\n  useEffect(() => {\n    getAutoBotSignalTeleList(1);\n  }, [getAutoBotSignalTeleList]);\n\n  return (\n    <div\n      className={`${isDesktop ? 'col-span-2' : ''\n        } bg-background-80 rounded-3xl`}\n    >\n      <div\n        className={`px-6 py-5 flex justify-between items-center ${isTelegramChatOpen ? 'border-b border-ink-10' : ''\n          }`}\n      >\n        <p className={`text-xl text-ink-100 font-semibold`}>\n          Bot tín hiệu Telegram\n        </p>\n        {!isDesktop && isTelegramChatOpen && (\n          <CopyTelegramDownSvg\n            className=\"text-ink-100\"\n            onClick={() => {\n              setIsTelegramChatOpen(false);\n            }}\n          />\n        )}\n        {!isDesktop && !isTelegramChatOpen && (\n          <CopyTelegramUpSvg\n            className=\"text-ink-100\"\n            onClick={() => {\n              setIsTelegramChatOpen(true);\n            }}\n          />\n        )}\n      </div>\n      {/* Select BOT */}\n      {isTelegramChatOpen && (\n        <div className=\"flex justify-between px-6 py-5 gap-2\">\n          <div className=\"flex gap-2 flex-grow md:flex-initial\">\n            {/* Select BOT */}\n            {/* <div className=\"py-2 pl-3 pr-4 border border-ink-10 bg-ink-05 rounded-2xl w-[24.75rem]\">\n            <div className=\"relative flex justify-between items-center cursor-pointer\">\n              <div>\n                <p className=\"pb-1 text-xs text-ink-60\">Tên cấu hình BOT</p>\n                <p className=\"text-ink-100\">Money AI 1.8</p>\n              </div>\n              <Link to=\"/copy_trade_zoom\">\n                <img\n                  className=\"w-[1.5rem]\"\n                  src={images.home.white_dropdown}\n                  alt=\"Legend Group\"\n                />\n              </Link>\n              <div className=\"absolute top-[100%] pt-2 rounded-2xl bg-ink-05\">\n                <div></div>\n              </div>\n            </div>\n          </div> */}\n\n            <CopyTradeZoomSelectInput\n              inputValue={searchInputTelegram}\n              options={botList}\n              containerClassName={`${isTablet ? 'w-[24.75rem]' : 'w-[10.375rem]'\n                } flex-grow md:flex-initial`}\n              labelName=\"Tên cấu hình BOT\"\n              onSelectChange={onSelectTelegramChange}\n            />\n\n            {/* <Link to=\"/copy_trade_zoom\">\n              <div className=\"p-[0.625rem] border border-ink-10 bg-ink-05 rounded-2xl flex-grow md:flex-initial\">\n                <img\n                  className=\"w-[2.25rem]\"\n                  src={images.copy.telegram}\n                  alt=\"Legend Group\"\n                />\n              </div>\n            </Link> */}\n            <div onClick={() => openTelegramGroup(searchInputTelegram?.telegroup_name)} className=\"p-[0.625rem] border border-ink-10 bg-ink-05 rounded-2xl flex-grow md:flex-initial\">\n                <img\n                  className=\"w-[2.25rem]\"\n                  src={images.copy.telegram}\n                  alt=\"Legend Group\"\n                />\n              </div>\n          </div>\n\n          <Link to=\"/copy_trade_zoom\">\n            <div className=\"p-[0.625rem] border border-ink-10 bg-ink-05 rounded-2xl\">\n              <img\n                className=\"w-[2.25rem]\"\n                src={images.copy.stock}\n                alt=\"Legend Group\"\n              />\n            </div>\n          </Link>\n        </div>\n      )}\n      {/* History */}\n\n      {isTelegramChatOpen && (\n        <div className=\"mb-[0.625rem] px-6\">\n          <h3 className=\"mb-4 text-xl text-ink-100 font-medium\">\n            ({currentMoment.format('HH:mm:ss')}) Tổng hợp {botDetailList?.length} phiên giao dịch gần\n            nhất:\n          </h3>\n          <div className=\"flex flex-col gap-y-4 max-h-[36.5rem] overflow-y-scroll\">\n            {\n              botDetailList.map((item) => (\n                <React.Fragment key={item.id}>\n                  <p className=\"text-ink-100\">\n                    {item.o_status === 'PENDING' ? (\n                      <>\n                        ⏰ ({moment(item.created_at).format('HH:mm')}) phiên {item.ss_id}{' '}\n                        {item.o_type === 'BUY' ? (\n                          <span>🔊 Hãy đánh  {item.o_amount}{' '} $ TĂNG 🟩!</span>\n                        ) : (\n                          <span>🔊 Hãy đánh  {item.o_amount}{' '} $ GIẢM 🟥!</span>\n                        )}\n                      </>\n                    ) : (\n                      <>\n                        ⏰ ({moment(item.created_at).format('HH:mm')}) phiên {item.ss_id}{' '}\n\n                        {item.o_result === -1 ? <span>💢 -{item.o_amount} $ (-100%) </span> : <span>💰 {(item.o_amount * 0.95).toFixed(2)} $ (95.00%)</span>}\n                      </>\n                    )}\n                  </p>\n                </React.Fragment>\n              ))\n            }\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CopyTradeTelegram;\n","import APIs from 'apis';\nimport images from 'assets';\nimport axios from 'axios';\nimport React, { FC, useCallback, useEffect, useState } from 'react';\nimport CurrencyInput, { CurrencyInputProps } from 'react-currency-input-field';\nimport ICurrentSession, {\n  ISession,\n  ISessionLocal,\n} from '../../types/ICurrentSession';\nimport moment from 'moment';\nimport CopyTradeZoomSelectInput from './CopyTradeZoomSelectInput';\nimport { useAppDispatch } from 'stores/hooks';\nimport BotData from 'types/BotData';\nimport { uiActions } from 'stores/uiSlice';\nimport { BotBalance } from 'types/BotBalance';\nimport InputSelectOption from 'types/InputSelectOption';\nimport { BotPlaceOrderResponse } from 'types/BotPlaceOrderResponse';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { userActions } from 'stores/userSlice';\nimport { useEnqueueSnackbar } from 'hooks/useEnqueueSnackbar';\nimport useWindowFocus from 'hooks/useWindowFocus';\nimport CustomModal from 'components/CustomModal';\nimport GoldButton from 'components/GoldButton';\nimport CustomButton from 'components/CustomButton';\nimport CustomValidateModel from 'components/CustomValidateModal';\nimport CustomValidateModelProps from 'types/CustomValidateProps';\nimport convertToThreeDecimalPlaces from '../../utils/ConvertToThreeDecimalPlaces';\nimport CustomInputSpinner from 'components/CustomInputSpinner';\nimport { CopyTradeTotalFollowResponse } from 'types/responses/CopyTradeTotalFollowResponse';\n\ninterface IPlaceOrder {\n  orderType: string;\n  orderAmount: string;\n  accountType: string;\n  botId: number;\n}\n\nenum OrderType {\n  BUY = 'BUY',\n  SELL = 'SELL',\n}\n\nconst INITIAL_BOT_BALANCE = {\n  balance: 1,\n  demo_balance: 1,\n  usdt_balance: 1,\n};\n\nconst INITIAL_SELECT_OPTIONS: InputSelectOption[] = [\n  {\n    value: '',\n    label: '',\n  },\n];\n\nconst INITIAL_SELECTED_OPTION: InputSelectOption = {\n  value: '',\n  label: '',\n};\n\nconst INITIAL_SELECTED_ACCOUNT_TYPE: InputSelectOption = {\n  value: 'LIVE',\n  label: 'Tài khoản LIVE',\n};\n\nconst ACCOUNT_TYPES = [\n  {\n    value: 'DEMO',\n    label: 'Tài khoản DEMO',\n  },\n  {\n    value: 'LIVE',\n    label: 'Tài khoản LIVE',\n  },\n];\n\nconst SESSION_TYPES = ['WAIT', 'TRADE'];\n\ntype CopyTradeInformationProps = { isMaster: number, callback: (value: boolean) => void };\n\nconst PLUS_VALUES = [5, 10, 20, 50, 100, 'All'];\nconst MULTIPLY_VALUES = [2, 5, 10, 20, 40, 100];\n\nconst TIME_IN_ONE_SESSION = 30;\n\nconst options: Intl.NumberFormatOptions = {\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 3,\n  style: 'decimal',\n};\n\nconst CopyTradeInformation: FC<CopyTradeInformationProps> = ({ isMaster, callback }) => {\n  const [partnerBotDatas, setPartnerBotDatas] = useState<BotData[]>([]);\n  const [botBalance, setBotBalance] = useState<BotBalance>(INITIAL_BOT_BALANCE);\n  const [orderAmount, setOrderAmount] = useState<string | number>(1);\n  const [multiplyAmount, setMultiplyAmount] = useState<string | number>(1);\n  const [isOrderAmountFocus, setIsOrderAmountFocus] = useState(false);\n  const [isMultiplyAmountFocus, setIsMultiplyAmountFocus] = useState(false);\n  const [selectedAccountType, setSelectedAccountType] =\n    useState<InputSelectOption>(INITIAL_SELECTED_ACCOUNT_TYPE);\n  const [selectedBotAccount, setSelectedBotAccount] =\n    useState<InputSelectOption>(INITIAL_SELECTED_OPTION);\n  const [accountOptions, setAccountOptions] = useState<InputSelectOption[]>(\n    INITIAL_SELECT_OPTIONS\n  );\n\n  // SESSION\n  const [sessionLocal, setSessionLocal] = useState<ISessionLocal>({\n    ss_t: '',\n    r_second: 0,\n  });\n  const [sessionId, setSessionId] = useState(0);\n  const [isInitialized, setIsInitialized] = useState(false);\n  const [startSession, setStartSession] = useState<ISession>({\n    ss_id: 0,\n    ss_t: 'WAIT',\n    o_price: 0,\n    c_price: 0,\n    r_second: 0,\n    st_time: moment().format('YYYY-MM-DDTHH:mm:ss.SSSS'),\n  });\n\n  // FOLLOWERS\n  const [totalFollowData, setTotalFollowData] =\n    useState<CopyTradeTotalFollowResponse>({\n      totalfollow: 0,\n      totalfollowactive: 0,\n    });\n\n  // INITIAL PARTNER BOT USEFFECT\n  const [isPartnerBotInitialized, setIsPartnerBotInitialized] = useState(false);\n\n  // MODAL\n  const [modalAttributes, setModalAttributes] =\n    useState<CustomValidateModelProps>({\n      isOpen: false,\n      icon: '',\n      headingMessage: '',\n      message: '',\n      buttonMessage: '',\n      handleOpen: () => { },\n      handleClose: () => { },\n    });\n\n  // HOOKS\n  const dispatch = useAppDispatch();\n  const enqueueSnackbar = useEnqueueSnackbar();\n  const navigate = useNavigate();\n\n  const handleOpenValidAmountPopupModal = () => {\n    // setIsValidAmountPopupOpen(true);\n    setModalAttributes((prev) => ({\n      ...prev,\n      isOpen: false,\n    }));\n  };\n\n  const handleCloseValidAmountPopupModal = () => {\n    // setIsValidAmountPopupOpen(false);\n    setModalAttributes((prev) => ({\n      ...prev,\n      isOpen: false,\n    }));\n    if (\n      (selectedAccountType.value === 'DEMO' && botBalance.demo_balance >= 1)\n      || (selectedAccountType.value !== 'DEMO' && botBalance.balance >= 1)\n    ) {\n      setOrderAmount(1);\n    } else {\n      setOrderAmount(Math.max(+orderAmount, 0))\n    }\n    setMultiplyAmount(1);\n  };\n\n  const handleOpenAccountTradePopupModal = () => {\n    setModalAttributes((prev) => ({\n      ...prev,\n      isOpen: true,\n    }));\n  };\n\n  const handleCloseAccountTradePopupModal = () => {\n    setModalAttributes((prev) => ({\n      ...prev,\n      isOpen: false,\n    }));\n    navigate('/account_trade');\n  };\n\n  // const isTabVisible = useWindowFocus(() => {\n  //   getCurrentSession();\n  // });\n\n  const handleOrderAmountMinusOne = () => {\n    // console.log(+orderAmount);\n    // if (+orderAmount - 1 <= 1) {\n    //   setOrderAmount(1);\n    // } else {\n    //   setOrderAmount((prev) => {\n    //     const convertedValue = convertToThreeDecimalPlaces(+prev - 1);\n    //     // +prev.toLocaleString(undefined, { maximumFractionDigits: 3 }) - 1\n    //     return convertedValue;\n    //   });\n    // }\n    setOrderAmount((prev) => Math.max(0, +prev - 1))\n  };\n\n  const handleOrderAmountPlusOne = () => {\n    // console.log(+orderAmount);\n    const isDemoAccount = selectedAccountType.value === 'DEMO';\n    if (partnerBotDatas.length === 0) {\n      setOrderAmount((prev) => {\n        const convertedValue = convertToThreeDecimalPlaces(+prev + 1);\n        // +prev.toLocaleString(undefined, { maximumFractionDigits: 3 }) - 1\n        return convertedValue;\n      });\n      return;\n    }\n    // CHECK IF DID HAVE ACCOUNT TRADE\n    if (isDemoAccount) {\n      const demoBalance = botBalance.demo_balance;\n      const plusAmount = +orderAmount + 1;\n      if (plusAmount <= demoBalance) {\n        setOrderAmount((prev) => {\n          const convertedValue = convertToThreeDecimalPlaces(+prev + 1);\n          // +prev.toLocaleString(undefined, { maximumFractionDigits: 3 }) - 1\n          return convertedValue;\n        });\n      } else {\n        setOrderAmount(demoBalance);\n      }\n    }\n\n    if (!isDemoAccount) {\n      const liveBalance = botBalance.balance;\n      const plusAmount = +orderAmount + 1;\n      if (plusAmount <= liveBalance) {\n        setOrderAmount((prev) => {\n          const convertedValue = convertToThreeDecimalPlaces(+prev + 1);\n          // +prev.toLocaleString(undefined, { maximumFractionDigits: 3 }) - 1\n          return convertedValue;\n        });\n      } else {\n        setOrderAmount(liveBalance);\n      }\n    }\n  };\n\n  const handleMultiplyAmountPlusOne = () => {\n    if (+multiplyAmount >= 100) {\n      setMultiplyAmount(100);\n    } else {\n      setMultiplyAmount((prev) => {\n        const convertedValue = convertToThreeDecimalPlaces(+prev + 1);\n        // +prev.toLocaleString(undefined, { maximumFractionDigits: 3 }) - 1\n        return convertedValue;\n      });\n    }\n  };\n\n  const handleMultiplyAmountMinusOne = () => {\n    if (+multiplyAmount - 1 <= 1) {\n      setMultiplyAmount(1);\n    } else {\n      setMultiplyAmount((prev) => {\n        const convertedValue = convertToThreeDecimalPlaces(+prev - 1);\n        // +prev.toLocaleString(undefined, { maximumFractionDigits: 3 }) - 1\n        return convertedValue;\n      });\n    }\n  };\n\n  const handleOrderAmount: CurrencyInputProps['onValueChange'] = (\n    value,\n    _,\n    values\n  ): void => {\n    const valueToSet = value === undefined ? '' : value;\n    const convertedValue = convertToThreeDecimalPlaces(valueToSet);\n    setOrderAmount(convertedValue);\n\n    // const selectedAccountTypeDemo = selectedAccountType.value === 'DEMO';\n    // if (\n    //   selectedAccountTypeDemo &&\n    //   +valueToSet > botBalance.demo_balance &&\n    //   partnerBotDatas.length > 0\n    // ) {\n    //   setOrderAmount(botBalance.demo_balance);\n    //   // setOrderAmount(Math.round(botBalance.demo_balance * 100) / 100);\n    // } else if (\n    //   !selectedAccountTypeDemo &&\n    //   +valueToSet > botBalance.balance &&\n    //   partnerBotDatas.length > 0\n    // ) {\n    //   setOrderAmount(\n    //     botBalance.balance.toLocaleString(undefined, {\n    //       maximumFractionDigits: 3,\n    //     })\n    //   );\n    //   // setOrderAmount(botBalance.balance);\n    // } else {\n    //   setOrderAmount(valueToSet);\n    // }\n  };\n\n  const handleMultiplyAmount: CurrencyInputProps['onValueChange'] = (\n    value,\n    _,\n    values\n  ): void => {\n    const valueToSet = value === undefined ? '' : value;\n    const convertedValue = convertToThreeDecimalPlaces(valueToSet);\n    // console.log('convertedValue', convertedValue);\n    setMultiplyAmount(convertedValue);\n    // if (+valueToSet > 100) {\n    //   setMultiplyAmount(100);\n    // } else {\n    //   setMultiplyAmount(valueToSet);\n    // }\n  };\n\n  const onSelectedAccountTypeChange = (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    option: InputSelectOption\n  ) => {\n    setSelectedAccountType(option);\n    setOrderAmount(1);\n    dispatch(userActions.updateSelectedAccountType(option));\n  };\n\n  const onSelectedBotAccountChange = (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    option: InputSelectOption\n  ) => {\n    setSelectedBotAccount(option);\n    dispatch(userActions.updateSelectedBotAccount(option));\n  };\n\n  const getAllPartnerBots = useCallback(() => {\n    axios\n      .get(APIs.partnerAccount)\n      .then((res) => {\n        const datas: BotData[] = res.data;\n        const partnerBotDatas = datas.filter(\n          (data) => data.status === 'active'\n        );\n        setPartnerBotDatas(partnerBotDatas);\n        dispatch(userActions.updatePartnerBotDatas(partnerBotDatas));\n      })\n      .catch((err) => {\n        // const notification = {\n        //   id: Math.floor(Math.random() * 101 + 1),\n        //   title: 'Thất bại',\n        //   description: 'Không thể lấy bot datas',\n        //   backgroundColor: 'text-red-100',\n        //   icon: images.toast.error,\n        // };\n        // dispatch(uiActions.showNotifications(notification));\n        enqueueSnackbar('Không thể lấy bot datas', { variant: 'error' });\n      });\n  }, [dispatch, enqueueSnackbar]);\n\n  const getCurrentSession = useCallback(() => {\n    const noLoadingAxios = axios.create();\n    noLoadingAxios\n      .get(APIs.currentSession)\n      .then((res) => {\n        const data: ICurrentSession = res.data;\n        setSessionId(data.d.ss_id);\n        setStartSession(data.d);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  const getCurrentSessionByLocalTime = useCallback(() => {\n    // GET START SESSION AND CONSTANTS\n    const currentSecond = moment().second() - 1;\n    const MAXIMUM_SECOND_IN_A_MINUTE = 60;\n    const START_SESSION_SECOND_CONVERTED = +moment(startSession.st_time).format(\n      'ss'\n    );\n\n    const START_SESSION =\n      START_SESSION_SECOND_CONVERTED <= 30\n        ? START_SESSION_SECOND_CONVERTED\n        : Math.abs(30 - START_SESSION_SECOND_CONVERTED);\n\n    // RETRIEVE START SESSION TYPE\n    let middleSessionType: string;\n    let notMiddleSessionType: string;\n    if (START_SESSION_SECOND_CONVERTED <= 30) {\n      middleSessionType = startSession.ss_t;\n      notMiddleSessionType = SESSION_TYPES.filter(\n        (type) => type !== middleSessionType\n      )[0];\n    } else {\n      middleSessionType = SESSION_TYPES.filter(\n        (type) => type !== startSession.ss_t\n      )[0];\n      notMiddleSessionType = startSession.ss_t;\n    }\n\n    // const START_SESSION =\n    //   START_SESSION_TRADE < 30\n    //     ? START_SESSION_TRADE\n    //     : Math.abs(30 - START_SESSION_TRADE);\n\n    // 15 <= sess < 45\n    const isInMiddleSession =\n      currentSecond >= START_SESSION &&\n      currentSecond < START_SESSION + TIME_IN_ONE_SESSION;\n\n    // type is TRADE if START < 30 and isInMiddleSession\n    let sessionType = isInMiddleSession\n      ? middleSessionType\n      : notMiddleSessionType;\n    let timeLeft;\n    if (isInMiddleSession) {\n      // 15 <= sess < 45\n      // console.log('15 <= sess < 45', currentSecond);\n      timeLeft = START_SESSION + TIME_IN_ONE_SESSION - currentSecond;\n    } else if (currentSecond >= START_SESSION + TIME_IN_ONE_SESSION) {\n      // 45 <= sess < 60\n      // console.log('45 <= sess < 60', currentSecond);\n      const START_SESSION_UPPER = START_SESSION + TIME_IN_ONE_SESSION;\n      timeLeft = START_SESSION_UPPER + TIME_IN_ONE_SESSION - currentSecond;\n    } else {\n      // 0 <= sess < 15\n      // console.log('0 <= sess < 15', currentSecond);\n      // In this case: START_SESSION = END_LOWER_SESSION\n      const END_LOWER_SESSION = START_SESSION;\n      timeLeft = END_LOWER_SESSION - currentSecond;\n    }\n    // UPDATE SESSION ID\n    const isStartSession = currentSecond === START_SESSION;\n    const endSessionSecond =\n      START_SESSION + TIME_IN_ONE_SESSION === MAXIMUM_SECOND_IN_A_MINUTE\n        ? 0\n        : START_SESSION + TIME_IN_ONE_SESSION;\n    const isEndSession = currentSecond === endSessionSecond;\n    if ((isStartSession || isEndSession) && sessionId !== 0) {\n      setSessionId((prev) => prev + 1);\n    }\n    // GET PARTNER BOT AFTER END WAIT SESSION\n    if (isEndSession && sessionId !== 0) {\n      getAllPartnerBots();\n    }\n    if(timeLeft === 25 || timeLeft === 29){\n      callback(sessionType === 'TRADE')\n    }\n    setSessionLocal({\n      r_second: timeLeft,\n      ss_t: sessionType,\n    });\n  }, [getAllPartnerBots, sessionId, startSession.ss_t, startSession.st_time]);\n\n  const placeOrder = async (orderType: OrderType) => {\n    const noLoadingAxios = axios.create();\n    if (isMaster !== 2) {\n      // SELF ORDER\n      const orderAmountConverted = +orderAmount.toString().replace(',', '');\n      const order = {\n        orderType,\n        accountType: selectedAccountType.value.toString(),\n        orderAmount: orderAmountConverted.toString(),\n        botId: selectedBotAccount.value,\n        fold: 1,\n      };\n      noLoadingAxios\n        .post(APIs.placeOrder, order)\n        .then((res) => {\n          if (res.data.ok) {\n            getBalance(selectedBotAccount.value);\n            enqueueSnackbar(`Đặt lệnh $${orderAmount} thành công!`, {\n              variant: 'success',\n            });\n          } else {\n            enqueueSnackbar(`Đặt lệnh thất bại: ${res.data.m}`, {\n              variant: 'error',\n            });\n          }\n        })\n        .catch((err) => {\n          getCurrentSession();\n          enqueueSnackbar('', {\n            variant: 'error',\n          });\n        });\n    } else {\n      // MASTER ORDER\n      const orderAmountConverted = +orderAmount.toString().replace(',', '');\n\n      const order = {\n        orderType,\n        orderAmount: orderAmountConverted.toString(),\n        botId: selectedBotAccount.value,\n        fold: 1,\n      };\n      noLoadingAxios\n        .post(APIs.placeCopyTradeOrder, order)\n        .then((res) => {\n          getBalance(selectedBotAccount.value);\n          enqueueSnackbar('Đặt lệnh thành công!', {\n            variant: 'success',\n          });\n        })\n        .catch((err) => {\n          getCurrentSession();\n          enqueueSnackbar('Đặt lệnh thất bại', {\n            variant: 'error',\n          });\n        });\n    }\n  };\n\n  const getBalance = useCallback(\n    (id: number | string) => {\n      const noLoadingAxios = axios.create();\n      noLoadingAxios\n        .get(`${APIs.balanceById}${id}/`)\n        .then((res) => {\n          const data: BotBalance = res.data;\n          dispatch(userActions.updateBotBalance(data));\n          setBotBalance(data);\n        })\n        .catch(() => {\n          enqueueSnackbar('Không thể lấy được số dư ví', {\n            variant: 'error',\n          });\n        });\n    },\n    [dispatch, enqueueSnackbar]\n  );\n\n  const getTotalFollow = useCallback(() => {\n    axios\n      .get(`${APIs.copyTradeTotalFollow}`)\n      .then((res) => {\n        const datas: CopyTradeTotalFollowResponse[] = res.data;\n        if (datas.length > 0) {\n          setTotalFollowData(datas[0]);\n        }\n      })\n      .catch(() => {\n        enqueueSnackbar('Không thể lấy được số dư ví', {\n          variant: 'error',\n        });\n      });\n  }, [enqueueSnackbar]);\n\n  const reloadDemoBalance = useCallback(\n    (id: number | string) => {\n      axios\n        .get(`${APIs.reloadDemoBalance}${id}/`)\n        .then((res) => {\n          enqueueSnackbar('Đặt lại số dư ví DEMO thành công!', {\n            variant: 'success',\n          });\n          getBalance(selectedBotAccount.value);\n        })\n        .catch(() => {\n          enqueueSnackbar('Đặt lại số dư ví DEMO thất bại!', {\n            variant: 'error',\n          });\n        });\n    },\n    [enqueueSnackbar, getBalance, selectedBotAccount.value]\n  );\n\n  const convertPartnerBotsToPartnerAccountOptions = useCallback(() => {\n    if (partnerBotDatas && partnerBotDatas.length > 0) {\n      const accountOptions = partnerBotDatas.map((botData) => ({\n        value: botData.id,\n        label: botData.botname,\n      }));\n      setAccountOptions(accountOptions);\n    }\n  }, [partnerBotDatas]);\n\n  // INTERVAL GET CURRENT SESSION BY LOCAL TIME\n  useEffect(() => {\n    if (!isInitialized) {\n      getCurrentSession();\n      setIsInitialized(true);\n    }\n    const intervalId = setInterval(() => {\n      getCurrentSessionByLocalTime();\n    }, 1000);\n\n    return () => clearInterval(intervalId);\n  }, [getCurrentSession, getCurrentSessionByLocalTime, isInitialized]);\n\n  // TIME OUT 3 MINS FOR GET CURRENT SESSION\n  useEffect(() => {\n    const threeMins = 180000;\n    const interval = setInterval(() => {\n      getCurrentSession();\n    }, threeMins);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [getCurrentSession]);\n\n  // GET ALL PARTNER BOTS\n  useEffect(() => {\n    getAllPartnerBots();\n    getTotalFollow();\n  }, [getAllPartnerBots, getTotalFollow]);\n\n  // GET BALANCE AND SET SELECTED BOT ACCOUNT\n  useEffect(() => {\n    if (partnerBotDatas && partnerBotDatas.length > 0) {\n      if (selectedAccountType.value === 'LIVE' && !isPartnerBotInitialized) {\n        getBalance(partnerBotDatas[0].id);\n        const firstBotOption = {\n          value: partnerBotDatas[0].id,\n          label: partnerBotDatas[0].botname,\n        };\n        setSelectedBotAccount(firstBotOption);\n        setIsPartnerBotInitialized(true);\n        dispatch(userActions.updateSelectedBotAccount(firstBotOption));\n      } else if (selectedBotAccount.value) {\n        getBalance(selectedBotAccount.value);\n      }\n\n      convertPartnerBotsToPartnerAccountOptions();\n    }\n  }, [\n    partnerBotDatas,\n    convertPartnerBotsToPartnerAccountOptions,\n    getBalance,\n    selectedAccountType,\n    selectedBotAccount.value,\n    dispatch,\n    isPartnerBotInitialized,\n  ]);\n\n  const checkIsValidSubmit = () => {\n    const orderAmountConverted = +orderAmount.toString().replace(',', '');\n    const order = {\n      orderType: OrderType.BUY,\n      accountType: selectedAccountType.value.toString(),\n      orderAmount: orderAmountConverted.toString(),\n      botId: selectedBotAccount.value,\n      fold: 1,\n    };\n    if (isMaster === 2 && isBuySellValid) {\n      placeOrder(OrderType.BUY);\n      return\n    }\n    if (+orderAmount <= 0) {\n      setModalAttributes((prev) => ({\n        ...prev,\n        isOpen: true,\n        icon: images.copy.warning,\n        headingMessage: 'Giá trị lệnh không hợp lệ',\n        message: (\n          <>\n            Giá trị lệnh phải lớn hơn <span className=\"font-bold\">0</span>\n          </>\n        ),\n        buttonMessage: 'Xác nhận',\n        handleOpen: handleOpenValidAmountPopupModal,\n        handleClose: handleCloseValidAmountPopupModal,\n      }));\n      return\n    }\n    if (partnerBotDatas.length > 0) {\n      if (\n        selectedAccountType.value === 'DEMO' &&\n        +orderAmount > botBalance.demo_balance\n      ) {\n        setModalAttributes((prev) => ({\n          ...prev,\n          isOpen: true,\n          icon: images.copy.warning,\n          headingMessage: 'Giá trị lệnh không hợp lệ',\n          message: (\n            <>\n              Giá trị lệnh của bạn đã vượt quá số dư <br /> tài khoản nguồn, vui\n              lòng thử lại\n            </>\n          ),\n          buttonMessage: 'Xác nhận',\n          handleOpen: handleOpenValidAmountPopupModal,\n          handleClose: handleCloseValidAmountPopupModal,\n        }));\n        return\n      }\n      if (\n        selectedAccountType.value === 'LIVE' &&\n        +orderAmount > botBalance.balance\n      ) {\n        setModalAttributes((prev) => ({\n          ...prev,\n          isOpen: true,\n          icon: images.copy.warning,\n          headingMessage: 'Giá trị lệnh không hợp lệ',\n          message: (\n            <>\n              Giá trị lệnh của bạn đã vượt quá số dư tài khoản nguồn, vui lòng\n              thử lại\n            </>\n          ),\n          buttonMessage: 'Xác nhận',\n          handleOpen: handleOpenValidAmountPopupModal,\n          handleClose: handleCloseValidAmountPopupModal,\n        }));\n        return\n      }\n    }\n    if (partnerBotDatas.length === 0 && isBuySellValid) {\n      setModalAttributes((prev) => ({\n        ...prev,\n        isOpen: true,\n        icon: images.copy.account_not_integrate,\n        headingMessage: 'Bạn chưa liên kết tài khoản',\n        message: (\n          <>\n            Liên kết tài khoản ngay để thực hiện giao dịch cùng đội\n            ngũ chuyên gia của BotLambotrade\n          </>\n        ),\n        buttonMessage: 'Liên kết tài khoản',\n        handleOpen: handleOpenAccountTradePopupModal,\n        handleClose: handleCloseAccountTradePopupModal,\n      }));\n    } else if (isBuySellValid) {\n      placeOrder(OrderType.BUY);\n    }\n  }\n\n  const isSessionTrading = sessionLocal.ss_t === 'TRADE';\n\n  // const isBuySellValid = isSessionTrading && partnerBotDatas.length > 0;\n  const isBuySellValid = isSessionTrading;\n\n  return (\n    <>\n      <div className=\"flex flex-col\">\n        <p className=\"p-6 2xl:py-5 py-4 border-b border-ink-10 bg-background-80 rounded-tl-3xl rounded-tr-3xl text-xl text-ink-100 font-semibold\">\n          Thông tin giao dịch\n        </p>\n        <div className=\"p-6 flex-grow flex flex-col bg-background-80 rounded-bl-3xl rounded-br-3xl\">\n          {isMaster !== 2 && (\n            <div className=\"p-4 mb-6 bg-ink-05 rounded-2xl\">\n              <CopyTradeZoomSelectInput\n                containerClassName=\"mb-4\"\n                inputValue={selectedAccountType}\n                onSelectChange={onSelectedAccountTypeChange}\n                options={ACCOUNT_TYPES}\n                isSearchEnabled={false}\n                labelName=\"Loại tài khoản\"\n              />\n              {partnerBotDatas.length > 0 && (\n                <CopyTradeZoomSelectInput\n                  containerClassName=\"mb-4\"\n                  inputValue={selectedBotAccount}\n                  onSelectChange={onSelectedBotAccountChange}\n                  options={accountOptions}\n                  isSearchEnabled={false}\n                  labelName=\"Tài khoản giao dịch\"\n                />\n              )}\n              {partnerBotDatas.length > 0 && (\n                <div className=\"px-3 flex items-center justify-between\">\n                  <div className=\"flex items-center gap-x-2\">\n                    <p className=\"text-sm text-ink-100\">Số dư ví:</p>\n                    {selectedAccountType.value === 'DEMO' && (\n                      <img\n                        onClick={() => {\n                          reloadDemoBalance(selectedBotAccount.value);\n                        }}\n                        className=\"w-[1.5rem] cursor-pointer\"\n                        src={images.home.reload}\n                        alt=\"BotLambotrade\"\n                      />\n                    )}\n                  </div>\n                  <p className=\"bg-primary-100 bg-clip-text text-transparent text-xl\">\n                    $\n                    {selectedAccountType.value === 'DEMO'\n                      ? botBalance.demo_balance.toLocaleString('en-US', options)\n                      : selectedAccountType.value === 'LIVE'\n                        ? botBalance.balance.toLocaleString('en-US', options)\n                        : 0}\n                  </p>\n                </div>\n              )}\n\n              {partnerBotDatas.length === 0 && (\n                <div className=\"mb-4 flex justify-between items-center\">\n                  <p className={`font-semibold text-sm text-gold`}>\n                    Bạn chưa liên kết tài khoản Lambotradevới sàn, vui lòng ấn vào\n                    nút thêm mới tài khoản giao dịch để thực hiện liên kết tài\n                    khoản giao dịch\n                  </p>\n                </div>\n              )}\n\n              {partnerBotDatas.length === 0 && (\n                <Link\n                  to=\"/account_trade\"\n                  className=\"flex-grow flex items-center justify-center rounded-xl py-4 bg-primary-05 gap-x-[0.625rem] cursor-pointer\"\n                >\n                  <img\n                    className=\"w-[1.5rem]\"\n                    srcSet={images.copy.plus_gold}\n                    alt=\"BotLambotrade\"\n                  />\n                  <p className={`font-semibold text-gold`}>\n                    Thêm mới tài khoản giao dịch\n                  </p>\n                </Link>\n              )}\n            </div>\n          )}\n\n          <p className=\"mb-4 text-sm text-ink-100\">\n            GIÁ TRỊ LỆNH\n            {/* {isMaster ? 'GIÁ TRỊ LỆNH' : 'GIÁ TRỊ LỆNH'} */}\n          </p>\n\n          {/* <div className=\"flex justify-between gap-x-3 mb-4\">\n            {!isMaster && (\n              <>\n                <div\n                  onClick={handleOrderAmountMinusOne}\n                  className=\"p-4 bg-ink-05 border border-ink-20 hover:bg-ink-20 hover:border-ink-10 rounded-xl text-ink-60 cursor-pointer\"\n                >\n                  <img\n                    className=\"w-[1.5rem]\"\n                    src={images.copy.minus}\n                    alt=\"BotLambotrade\"\n                  />\n                </div>\n                <CurrencyInput\n                  className=\"flex-grow text-center bg-ink-05 border border-ink-10 text-ink-100 font-semibold rounded-xl\"\n                  value={orderAmount}\n                  onValueChange={handleOrderAmount}\n                  onFocus={() => {\n                    setIsOrderAmountFocus(true);\n                  }}\n                  onBlur={() => {\n                    setIsOrderAmountFocus(false);\n                  }}\n                  placeholder=\"Mời nhập số tiền\"\n                  prefix={'$ '}\n                  step={1}\n                  allowNegativeValue={false}\n                  decimalsLimit={3}\n                />\n                <div\n                  onClick={handleOrderAmountPlusOne}\n                  className=\"p-4 bg-ink-05 border border-ink-20 hover:bg-ink-20 hover:border-ink-10 rounded-xl cursor-pointer\"\n                >\n                  <img\n                    className=\"w-[1.5rem]\"\n                    src={images.copy.plus_gold}\n                    alt=\"BotLambotrade\"\n                  />\n                </div>\n              </>\n            )}\n            {isMaster && (\n              <>\n                <div\n                  onClick={handleMultiplyAmountMinusOne}\n                  className=\"p-4 bg-ink-05 border border-ink-20 hover:bg-ink-20 hover:border-ink-10 rounded-xl text-ink-60 cursor-pointer\"\n                >\n                  <img\n                    className=\"w-[1.5rem]\"\n                    src={images.copy.minus}\n                    alt=\"BotLambotrade\"\n                  />\n                </div>\n                <CurrencyInput\n                  className=\"flex-grow text-center bg-ink-05 border border-ink-10 text-ink-100 font-semibold rounded-xl\"\n                  value={multiplyAmount}\n                  onValueChange={handleMultiplyAmount}\n                  onFocus={() => {\n                    setIsMultiplyAmountFocus(true);\n                  }}\n                  onBlur={() => {\n                    setIsMultiplyAmountFocus(false);\n                  }}\n                  placeholder=\"Mời nhập hệ số\"\n                  prefix={'X '}\n                  step={1}\n                  allowNegativeValue={false}\n                  decimalsLimit={3}\n                />\n                <div\n                  onClick={handleMultiplyAmountPlusOne}\n                  className=\"p-4 bg-ink-05 border border-ink-20 hover:bg-ink-20 hover:border-ink-10 rounded-xl cursor-pointer\"\n                >\n                  <img\n                    className=\"w-[1.5rem]\"\n                    src={images.copy.plus_gold}\n                    alt=\"BotLambotrade\"\n                  />\n                </div>\n              </>\n            )}\n          </div>\n\n          <div className=\"grid grid-cols-6 gap-x-2 mb-4\">\n            {!isMaster &&\n              PLUS_VALUES.map((value, index) => {\n                let renderText = '+' + value;\n                if (value === 'All') renderText = 'All';\n                return (\n                  <div\n                    key={index * Math.random() * 100}\n                    className=\"xl:px-3 xl:py-3 px-2 py-2 text-center bg-ink-05 hover:bg-ink-20 text-ink-100 rounded-xl cursor-pointer\"\n                    onClick={() => {\n                      console.log('TYPE OF VALUE: ', typeof value);\n                      // CHECK PARTNER BOT NOT INTEGRATED\n                      if (partnerBotDatas.length === 0) {\n                        if (typeof value === 'number') {\n                          setOrderAmount((prev) => +prev + +value);\n                        } else {\n                          setModalAttributes((prev) => ({\n                            ...prev,\n                            isOpen: true,\n                            icon: images.copy.account_not_integrate,\n                            headingMessage: 'Bạn chưa liên kết tài khoản',\n                            message: (\n                              <>\n                                Liên kết tài khoản ngay để thực hiện giao dịch\n                                cùng đội ngũ chuyên gia của BotLambotrade\n                              </>\n                            ),\n                            buttonMessage: 'Liên kết tài khoản',\n                            handleOpen: handleOpenAccountTradePopupModal,\n                            handleClose: handleCloseAccountTradePopupModal,\n                          }));\n                        }\n                        return;\n                      }\n\n                      // CHECK IF PARTNER BOT ALREADY ASSOCIATED\n                      const isDemoAccount =\n                        selectedAccountType.value === 'DEMO';\n                      if (isDemoAccount) {\n                        const demoBalance = botBalance.demo_balance;\n                        const plusAmount = +orderAmount + +value;\n                        if (\n                          typeof value === 'number' &&\n                          plusAmount <= demoBalance\n                        ) {\n                          setOrderAmount((prev) => +prev + +value);\n                        } else {\n                          setOrderAmount(demoBalance);\n                        }\n                      }\n\n                      if (!isDemoAccount) {\n                        const liveBalance = botBalance.balance;\n                        const plusAmount = +orderAmount + +value;\n                        if (\n                          typeof value === 'number' &&\n                          plusAmount <= liveBalance\n                        ) {\n                          setOrderAmount((prev) => +prev + +value);\n                        } else {\n                          setOrderAmount(liveBalance);\n                        }\n                      }\n\n                      // if (typeof value === 'number') {\n                      //   setOrderAmount((prev) => +prev + +value);\n                      // } else if () {\n                      //   setOrderAmount(botBalance.demo_balance);\n                      // } else {\n                      //   setOrderAmount(botBalance.balance);\n                      // }\n                    }}\n                  >\n                    {renderText}\n                  </div>\n                );\n              })}\n\n            {isMaster &&\n              MULTIPLY_VALUES.map((value, index) => {\n                let renderText = 'X' + value;\n                return (\n                  <div\n                    key={index * Math.random() * 100}\n                    className=\"flex-grow xl:px-3 xl:py-3 px-2 py-2 text-center bg-ink-05 hover:bg-ink-20 text-ink-100 rounded-xl cursor-pointer\"\n                    onClick={() => {\n                      setMultiplyAmount(value);\n                    }}\n                  >\n                    {renderText}\n                  </div>\n                );\n              })}\n          </div> */}\n\n          <div className=\"mb-4\">\n            {/* GIAO DICH CA NHAN */}\n            {isMaster === 2 && (\n              <CustomInputSpinner\n                fullWidth={true}\n                name=\"orderAmount\"\n                value={orderAmount}\n                placeholder=\"Mời nhập giá trị lệnh\"\n                onValueChange={handleOrderAmount}\n                onFocus={() => {\n                  setIsOrderAmountFocus(true);\n                }}\n                onBlur={(e) => {\n                  if (Number((e.target.value.replace('$', '').trim() || 0)) <= 0)\n                    setIsOrderAmountFocus(false);\n                }}\n                handleValueMinusOne={handleOrderAmountMinusOne}\n                handleValuePlusOne={handleOrderAmountPlusOne}\n                onFixedValueChange={(value: string | number) => {\n                  // console.log('TYPE OF VALUE: ', typeof value);\n                  // CHECK PARTNER BOT NOT INTEGRATED\n                  if (partnerBotDatas.length === 0) {\n                    if (typeof value === 'number') {\n                      setOrderAmount((prev) => +prev + +value);\n                    } else {\n                      setModalAttributes((prev) => ({\n                        ...prev,\n                        isOpen: true,\n                        icon: images.copy.account_not_integrate,\n                        headingMessage: 'Bạn chưa liên kết tài khoản',\n                        message: (\n                          <>\n                            Liên kết tài khoản ngay để thực hiện giao dịch cùng\n                            đội ngũ chuyên gia của BotLambotrade\n                          </>\n                        ),\n                        buttonMessage: 'Liên kết tài khoản',\n                        handleOpen: handleOpenAccountTradePopupModal,\n                        handleClose: handleCloseAccountTradePopupModal,\n                      }));\n                    }\n                    return;\n                  }\n\n                  // CHECK IF PARTNER BOT ALREADY ASSOCIATED\n                  const isDemoAccount = selectedAccountType.value === 'DEMO';\n                  if (isDemoAccount) {\n                    const demoBalance = botBalance.demo_balance;\n                    const plusAmount = +value;\n                    // +orderAmount + +value\n                    if (\n                      typeof value === 'number' &&\n                      plusAmount <= demoBalance\n                    ) {\n                      setOrderAmount((prev) => + prev + plusAmount);\n                    } else {\n                      setOrderAmount(demoBalance);\n                    }\n                  }\n\n                  if (!isDemoAccount) {\n                    const liveBalance = botBalance.balance;\n                    const plusAmount = +orderAmount + +value;\n                    if (\n                      typeof value === 'number' &&\n                      plusAmount <= liveBalance\n                    ) {\n                      setOrderAmount((prev) => +prev + +value);\n                    } else {\n                      setOrderAmount(liveBalance);\n                    }\n                  }\n                }}\n                prefix={'$ '}\n                PREFIX_VALUE=\"+\"\n                VALUES={PLUS_VALUES}\n              />\n            )}\n\n            {/* GIAO DICH CHUYEN GIA */}\n            {isMaster === 2 && (\n              /*<CustomInputSpinner\n                fullWidth={true}\n                name=\"multiplyAmount\"\n                value={multiplyAmount}\n                placeholder=\"Mời nhập hệ số\"\n                onValueChange={handleMultiplyAmount}\n                onFocus={() => {\n                  setIsMultiplyAmountFocus(true);\n                }}\n                onBlur={() => {\n                  setIsMultiplyAmountFocus(false);\n                }}\n                handleValueMinusOne={handleMultiplyAmountMinusOne}\n                handleValuePlusOne={handleMultiplyAmountPlusOne}\n                onFixedValueChange={(value: string | number) => {\n                  setMultiplyAmount(value);\n                }}\n                prefix={'X '}\n                PREFIX_VALUE=\"X\"\n                VALUES={MULTIPLY_VALUES}\n              />\n              */\n              <CustomInputSpinner\n                fullWidth={true}\n                name=\"orderAmount\"\n                value={orderAmount}\n                placeholder=\"Mời nhập giá trị lệnh\"\n                onValueChange={handleOrderAmount}\n                onFocus={() => {\n                  setIsOrderAmountFocus(true);\n                }}\n                onBlur={(e) => {\n                  if (Number((e.target.value.replace('$', '').trim() || 0)) <= 0)\n                    setIsOrderAmountFocus(false);\n                }}\n                handleValueMinusOne={handleOrderAmountMinusOne}\n                handleValuePlusOne={handleOrderAmountPlusOne}\n                onFixedValueChange={(value: string | number) => {\n                  // console.log('TYPE OF VALUE: ', typeof value);\n                  // CHECK PARTNER BOT NOT INTEGRATED\n                  // if (partnerBotDatas.length === 0) {\n                  //   if (typeof value === 'number') {\n                  //     setOrderAmount((prev) => +prev + +value);\n                  //   } else {\n                  //     setModalAttributes((prev) => ({\n                  //       ...prev,\n                  //       isOpen: true,\n                  //       icon: images.copy.account_not_integrate,\n                  //       headingMessage: 'Bạn chưa liên kết tài khoản',\n                  //       message: (\n                  //         <>\n                  //           Liên kết tài khoản ngay để thực hiện giao dịch cùng\n                  //           đội ngũ chuyên gia của BotLambotrade\n                  //         </>\n                  //       ),\n                  //       buttonMessage: 'Liên kết tài khoản',\n                  //       handleOpen: handleOpenAccountTradePopupModal,\n                  //       handleClose: handleCloseAccountTradePopupModal,\n                  //     }));\n                  //   }\n                  //   return;\n                  // }\n\n                  // CHECK IF PARTNER BOT ALREADY ASSOCIATED\n                  const isDemoAccount = selectedAccountType.value === 'DEMO';\n                  if (isDemoAccount) {\n                    const demoBalance = botBalance.demo_balance;\n                    const plusAmount = +orderAmount + +value;\n                    if (\n                      typeof value === 'number' &&\n                      plusAmount <= demoBalance\n                    ) {\n                      setOrderAmount((prev) => +prev + +value);\n                    } else {\n                      setOrderAmount(demoBalance);\n                    }\n                  }\n\n                  if (!isDemoAccount) {\n                    const liveBalance = botBalance.balance;\n                    const plusAmount = +orderAmount + +value;\n                    if (\n                      typeof value === 'number' &&\n                      plusAmount <= liveBalance\n                    ) {\n                      setOrderAmount((prev) => +prev + +value);\n                    } else {\n                      setOrderAmount(liveBalance);\n                    }\n                  }\n                }}\n                prefix={'$ '}\n                PREFIX_VALUE=\"+\"\n                VALUES={PLUS_VALUES}\n              />\n            )}\n          </div>\n\n          {isMaster !== 2 && (\n            <div className=\"mb-9 p-4 flex justify-between items-center bg-ink-05 rounded-2xl\">\n              <p>\n                LỢI NHUẬN{' '}\n                <span className=\"px-2 bg-ink-10 rounded-lg text-green-100 font-semibold\">\n                  95%\n                </span>\n              </p>\n              <p\n                className={`text-xl ${+orderAmount >= 0 ? 'text-green-100' : 'text-red-100'\n                  } font-semibold`}\n              >\n                {+orderAmount >= 0 ? '+' : '-'}$\n                {(+orderAmount * 0.95).toLocaleString('en-US', options)}\n              </p>\n            </div>\n          )}\n\n          <div className=\"mt-auto\">\n            <button\n              className={`py-4 mb-3 flex justify-center gap-x-[0.625rem] w-full rounded-2xl font-semibold ${isBuySellValid ? 'bg-green-100' : 'bg-ink-10 cursor-not-allowed'\n                }`}\n              onClick={() => {\n                // if(!(typeof orderAmount === 'number') || orderAmount <= 0){\n                //   setModalAttributes((prev) => ({\n                //     ...prev,\n                //     isOpen: true,\n                //     icon: images.copy.warning,\n                //     headingMessage: 'Giá trị lệnh không hợp lệ',\n                //     message: (\n                //       <>\n                //         Giá trị lệnh phải lớn hơn <span className=\"font-bold\">0</span>\n                //       </>\n                //     ),\n                //     buttonMessage: 'Xác nhận',\n                //     handleOpen: handleOpenValidAmountPopupModal,\n                //     handleClose: handleCloseValidAmountPopupModal,\n                //   }));\n                //   return\n                // }\n                // if (partnerBotDatas.length === 0 && isBuySellValid) {\n                //   setModalAttributes((prev) => ({\n                //     ...prev,\n                //     isOpen: true,\n                //     icon: images.copy.account_not_integrate,\n                //     headingMessage: 'Bạn chưa liên kết tài khoản',\n                //     message: (\n                //       <>\n                //         Liên kết tài khoản ngay để thực hiện giao dịch cùng đội\n                //         ngũ chuyên gia của BotLambotrade\n                //       </>\n                //     ),\n                //     buttonMessage: 'Liên kết tài khoản',\n                //     handleOpen: handleOpenAccountTradePopupModal,\n                //     handleClose: handleCloseAccountTradePopupModal,\n                //   }));\n                // } else if (isBuySellValid) {\n                //   placeOrder(OrderType.BUY);\n                // }\n                checkIsValidSubmit()\n              }}\n            >\n              <span\n                className={`${isBuySellValid\n                  ? 'text-ink-100'\n                  : 'bg-primary-60 bg-clip-text text-transparent'\n                  }`}\n              >\n                Mua\n              </span>\n              {isBuySellValid ? (\n                <img\n                  className=\"w-[1.5rem]\"\n                  src={images.copy.buy}\n                  alt=\"BotLambotrade\"\n                />\n              ) : (\n                <img\n                  className=\"w-[1.5rem]\"\n                  src={images.copy.buy_disabled}\n                  alt=\"BotLambotrade\"\n                />\n              )}\n            </button>\n\n            <div className=\"py-4 mb-3 flex justify-center gap-x-[0.625rem] w-full rounded-2xl bg-ink-05 font-semibold\">\n              <p className=\"bg-primary-100 bg-clip-text text-transparent font-medium\">\n                Phiên {sessionId} :{' '}\n                {isSessionTrading ? 'Hãy đặt lệnh' : 'Chờ kết quả'} (\n                {sessionLocal.r_second}\n                s)\n              </p>\n            </div>\n\n            <button\n              className={`py-4 flex justify-center gap-x-[0.625rem] w-full rounded-2xl font-semibold ${isBuySellValid ? 'bg-red-100' : 'bg-ink-10 cursor-not-allowed'\n                }`}\n              onClick={() => {\n                if (partnerBotDatas.length === 0 && isBuySellValid) {\n                  setModalAttributes((prev) => ({\n                    ...prev,\n                    isOpen: true,\n                    icon: images.copy.account_not_integrate,\n                    headingMessage: 'Bạn chưa liên kết tài khoản',\n                    message: (\n                      <>\n                        Liên kết tài khoản ngay để thực hiện giao dịch cùng đội\n                        ngũ chuyên gia của BotLambotrade\n                      </>\n                    ),\n                    buttonMessage: 'Liên kết tài khoản',\n                    handleOpen: handleOpenAccountTradePopupModal,\n                    handleClose: handleCloseAccountTradePopupModal,\n                  }));\n                } else if (isBuySellValid) {\n                  placeOrder(OrderType.SELL);\n                }\n              }}\n            >\n              <span\n                className={`${isBuySellValid\n                  ? 'text-ink-100'\n                  : 'bg-primary-60 bg-clip-text text-transparent'\n                  }`}\n              >\n                Bán\n              </span>\n              {isSessionTrading &&\n                +orderAmount > 0 &&\n                partnerBotDatas.length > 0 ? (\n                <img\n                  className=\"w-[1.5rem]\"\n                  src={images.copy.sell}\n                  alt=\"BotLambotrade\"\n                />\n              ) : (\n                <img\n                  className=\"w-[1.5rem]\"\n                  src={images.copy.sell_disabled}\n                  alt=\"BotLambotrade\"\n                />\n              )}\n            </button>\n          </div>\n        </div>\n\n        {isMaster === 2 && partnerBotDatas.length > 0 && (\n          <div className=\"text-sm text-ink-80\">\n            <div className=\"mt-6 mb-6 p-6 flex items-center justify-between bg-ink-05 rounded-3xl\">\n              <div className=\"flex items-center gap-x-3\">\n                <img\n                  className=\"w-[2rem]\"\n                  src={images.copy.follower}\n                  alt=\"BotLambotrade\"\n                />\n                <p>Tổng số người đang theo dõi bạn</p>\n              </div>\n              <div className=\"px-[0.875rem] py-1 rounded-lg bg-primary-10\">\n                <p className=\"bg-primary-100 bg-clip-text text-transparent text-base font-bold\">\n                  {totalFollowData.totalfollow}\n                </p>\n              </div>\n            </div>\n\n            <div className=\"p-6 flex items-center justify-between bg-ink-05 rounded-3xl\">\n              <div className=\"flex items-center gap-x-3\">\n                <img\n                  className=\"w-[2rem]\"\n                  src={images.copy.settings_enabled}\n                  alt=\"BotLambotrade\"\n                />\n                <p>Tổng số cấu hình bạn đang bật</p>\n              </div>\n              <div className=\"px-[0.875rem] py-1 rounded-lg bg-primary-10\">\n                <p className=\"bg-primary-100 bg-clip-text text-transparent text-base font-bold\">\n                  {totalFollowData.totalfollowactive}\n                </p>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* POPUP Validate */}\n      <CustomValidateModel\n        isOpen={modalAttributes.isOpen}\n        icon={modalAttributes.icon}\n        headingMessage={modalAttributes.headingMessage}\n        message={modalAttributes.message}\n        buttonMessage={modalAttributes.buttonMessage}\n        handleOpen={modalAttributes.handleOpen}\n        handleClose={modalAttributes.handleClose}\n      />\n    </>\n  );\n};\n\nexport default CopyTradeInformation;\n","import React, { FC } from 'react';\nimport { Stage, Layer, Circle } from 'react-konva';\nimport { useMediaQuery } from 'react-responsive';\n\ntype CopyTradeResultCanvasProps = {\n  results: boolean[];\n};\n\nconst CopyTradeResultCanvas: FC<CopyTradeResultCanvasProps> = ({ results }) => {\n  const isDesktopOrLaptop = useMediaQuery({\n    query: '(min-width: 1224px)',\n  });\n  // RESPONSIVE\n  const isDesktop = useMediaQuery({\n    query: '(min-width: 1224px)',\n  });\n  const isTablet = useMediaQuery({\n    query: '(min-width: 768px)',\n  });\n  const isMobile = useMediaQuery({\n    query: '(max-width: 767px)',\n  });\n\n  const baseWidth = 128;\n  const baseHeight = 102;\n  const baseRadius = 12;\n  // const baseWidth = isDesktopOrLaptop ? 128 : 88;\n  // const baseHeight = isDesktopOrLaptop ? 102 : 70;\n  // const baseRadius = isDesktopOrLaptop ? 12 : 8;\n  const baseSpace = 2;\n\n  return (\n    <div className=\"h-fit p-6 mb-6 bg-background-80 rounded-3xl\">\n      <div className=\"grid grid-cols-2 grid-rows-3 lg:grid-cols-5 lg:grid-rows-1 xl:flex justify-center items-center gap-x-8 gap-y-6\">\n      {results?.map((resultChild: any, index) => (\n          <Stage\n            key={index * Math.random() * 100}\n            width={baseWidth}\n            height={baseHeight}\n            className=\"last-of-type:col-span-2 lg:last-of-type:col-span-1 justify-self-center\"\n          >\n            <Layer>\n              {resultChild?.map((result: any, index: any) => {\n                const id = index * Math.random() * 1000;\n                const x =\n                  baseRadius +\n                  (baseRadius * 2 + baseSpace) * Math.floor(index / 4);\n                const y =\n                  baseRadius + (baseRadius * 2 + baseSpace) * (index % 4);\n                const fill =\n                  result == null\n                    ? \"#696363\"\n                    : result\n                    ? \"#07A42E\"\n                    : \"#C2180F\";\n                return (\n                  <Circle\n                    key={id}\n                    x={x}\n                    y={y}\n                    radius={baseRadius}\n                    id={id.toString()}\n                    fill={fill}\n                  />\n                );\n              })}\n              <Circle />\n            </Layer>\n          </Stage>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default CopyTradeResultCanvas;\n","import images from 'assets';\nimport React, { FC, useCallback, useEffect, useState } from 'react';\nimport { faker } from '@faker-js/faker';\nimport { Column, useTable, usePagination } from 'react-table';\nimport ReactPaginate from 'react-paginate';\nimport KeyboardArrowLeftIcon from '@mui/icons-material/KeyboardArrowLeft';\nimport {\n  KeyboardArrowDown,\n  KeyboardArrowLeft,\n  KeyboardArrowRight,\n} from '@mui/icons-material';\nimport { Tooltip } from '@mui/material';\nimport BotSetting, { BotSettingResult } from 'types/BotSetting';\nimport axios from 'axios';\nimport { useAppDispatch, useAppSelector } from 'stores/hooks';\nimport APIs from 'apis';\nimport { uiActions } from 'stores/uiSlice';\nimport { number } from 'yup/lib/locale';\nimport CustomModal from 'components/CustomModal';\nimport GreyButton from 'components/GreyButton';\nimport GoldButton from 'components/GoldButton';\nimport BotSettingUpdate from 'types/BotSettingUpdate';\nimport { useEnqueueSnackbar } from 'hooks/useEnqueueSnackbar';\nimport { useMediaQuery } from 'react-responsive';\nimport { ActionMeta, SingleValue } from 'react-select';\nimport InputSelectOption from 'types/InputSelectOption';\nimport SelectInput from 'components/SelectInput';\n\ntype CopyTradeFollowProps = {\n  isFollowing: boolean;\n  setIsFollowing: React.Dispatch<React.SetStateAction<boolean>>;\n  searchInput: string;\n  setSearchInput: React.Dispatch<React.SetStateAction<string>>;\n};\n\ntype TableData = {\n  id: string;\n  checkbox?: string;\n  logo?: string;\n  nickname?: string;\n  accountType?: string;\n  orderAmount?: number;\n  volumeAmount?: number;\n  multiply?: number;\n  profit?: number;\n  loss?: number;\n  profitLoss?: number;\n  master?: string;\n  masterLogo?: string;\n  masterName?: string;\n};\n\ntype PaginationEvent = {\n  selected: number;\n};\n\ntype SelectedIdsType = {\n  [key: string]: boolean;\n};\n\ninterface ListFollowTradeByMaster {\n  master: number;\n}\n\nconst INITIAL_BOT_SETTING_RESULT: BotSettingResult = {\n  id: 0,\n  master: 0,\n  master_name: '',\n  account_type: '',\n  follower: 0,\n  follower_name: '',\n  follower_username: '',\n  o_amount: 0,\n  o_owner: 0,\n  fold_command: 0,\n  status: '',\n  block_status: '',\n  created_at: '',\n  updated_at: '',\n  current_profit: 0,\n  current_date_profit: 0,\n  current_volume: 0,\n  current_date_volume: 0,\n  aim_min: 0,\n  aim_max: 0,\n};\n\nconst PAGE_SIZE_OPTIONS: InputSelectOption[] = [\n  { value: 10, label: '10/page' },\n  { value: 20, label: '20/page' },\n  { value: 30, label: '30/page' },\n  { value: 40, label: '40/page' },\n];\n\nconst options: Intl.NumberFormatOptions = {\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 3,\n  style: 'decimal',\n};\n\nconst CopyTradeFollow: FC<CopyTradeFollowProps> = ({\n  isFollowing,\n  setIsFollowing,\n  searchInput,\n  setSearchInput,\n}) => {\n  const [selectedIds, setSelectedIds] = useState<SelectedIdsType>({});\n  const [selectAll, setSelectAll] = useState(0);\n  const [totalRecords, setTotalRecords] = useState(100);\n  const [followingDatas, setFollowingDatas] = useState([]);\n\n  // BOT SETTINGS\n  const [botFollowingData, setBotFollowingData] = useState<BotSetting>({\n    count: 0,\n    next: null,\n    previous: null,\n    results: [],\n  });\n  const [botFollowingResults, setBotFollowingResults] = useState<\n    BotSettingResult[]\n  >([]);\n\n  // MODAL\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [selectedBotSettingResult, setSelectedBotSetting] =\n    useState<BotSettingResult>(INITIAL_BOT_SETTING_RESULT);\n\n  // PAGINATION\n  const [selectedPageSizeOption, setSelectedPageSizeOption] =\n    useState<InputSelectOption>(PAGE_SIZE_OPTIONS[0]);\n  const [page, setPage] = useState(0);\n  const [totalPages, setTotalPages] = useState(10);\n  const [isPrevHover, setIsPrevHover] = useState(false);\n  const [isNextHover, setIsNextHover] = useState(false);\n\n  const selectedBotAccount = useAppSelector(\n    (state) => state.user.selectedBotAccount\n  );\n\n  // RESPONSIVE\n  const isDesktop = useMediaQuery({\n    query: '(min-width: 1224px)',\n  });\n  const isTablet = useMediaQuery({\n    query: '(min-width: 768px)',\n  });\n  const isMobile = useMediaQuery({\n    query: '(max-width: 767px)',\n  });\n\n  const dispatch = useAppDispatch();\n  const enqueueSnackbar = useEnqueueSnackbar();\n\n  const data = React.useMemo<BotSettingResult[]>(\n    () => botFollowingResults,\n    [botFollowingResults]\n  );\n\n  const handleOpenPopupModal = useCallback(() => {\n    setIsPopupOpen(true);\n  }, []);\n\n  const handleClosePopupModal = () => {\n    setIsPopupOpen(false);\n  };\n\n  const getAllBotSettingByFollowingStatus = useCallback(\n    (page: number) => {\n      if (isFollowing) {\n        // const data: ListFollowTradeByMaster = {\n        //   master: +selectedBotAccount.value,\n        // };\n        axios\n          .get(APIs.listCopyTradeSettingNonBlocking, {\n            params: {\n              page,\n              page_size: selectedPageSizeOption.value,\n            },\n          })\n          .then((res) => {\n            const data: BotSetting = res.data;\n            setBotFollowingData(data);\n            setBotFollowingResults(data.results);\n            if (data.count != null && selectedPageSizeOption.value != null) {\n              setTotalPages(\n                Math.ceil(data.count / +selectedPageSizeOption.value)\n              );\n            }\n          })\n          .catch(() => {\n            enqueueSnackbar('Không thể lấy bot settings!', {\n              variant: 'error',\n            });\n          });\n      } else {\n        axios\n          .get(APIs.listCopyTradeSettingBlocking, {\n            params: {\n              page,\n              page_size: selectedPageSizeOption.value,\n            },\n          })\n          .then((res) => {\n            const data: BotSetting = res.data;\n            setBotFollowingData(data);\n            setBotFollowingResults(data.results);\n            if (data.count != null && selectedPageSizeOption.value != null) {\n              setTotalPages(\n                Math.ceil(data.count / +selectedPageSizeOption.value)\n              );\n            }\n          })\n          .catch(() => {\n            enqueueSnackbar('Không thể lấy bot settings!', {\n              variant: 'error',\n            });\n          });\n      }\n    },\n    [enqueueSnackbar, isFollowing, selectedPageSizeOption.value]\n  );\n\n  const toggleRow = useCallback(\n    (id: string | number) => {\n      const newSelected = { ...selectedIds };\n      newSelected[id] = !newSelected[id];\n      setSelectedIds(newSelected);\n      const totalSelected = Object.entries(newSelected).reduce(\n        (prev, value) => {\n          if (value[1]) return prev + 1;\n          return prev;\n        },\n        0\n      );\n      if (totalSelected >= data.length) {\n        setSelectAll(1);\n      } else {\n        setSelectAll(0);\n      }\n    },\n    [data.length, selectedIds]\n  );\n\n  const toggleAllRow = useCallback(() => {\n    let newSelected: SelectedIdsType = {};\n\n    if (selectAll === 0) {\n      data.forEach((x) => {\n        newSelected[x.id] = true;\n      });\n    }\n    setSelectedIds(newSelected);\n    setSelectAll((prev) => (prev === 0 ? 1 : 0));\n  }, [data, selectAll]);\n\n  const handleBlockingFollower = () => {\n    // const blockStatusToUpdate =\n    //   selectedBotSetting.block_status === 'none' ? 'blocked' : 'none';\n    const blockStatusToUpdate = isFollowing ? 'blocked' : 'none';\n    const data: BotSettingUpdate = {\n      // status: selectedBotSetting.status,\n      block_status: blockStatusToUpdate,\n      // master: selectedBotSetting.master,\n      // master_name: selectedBotSetting.master_name,\n      // o_amount: selectedBotSetting.o_amount,\n      // fold_command: selectedBotSetting.fold_command,\n      // aim_min: selectedBotSetting.aim_min,\n      // aim_max: selectedBotSetting.aim_max,\n    };\n    const selectedListIds = Object.entries(selectedIds)\n      .filter((selected) => selected[1])\n      .map((selected) => selected[0]);\n    console.log('selectedListIds:', selectedListIds);\n    axios\n      .patch(`${APIs.updateSettingBlockStatusByIds}${selectedListIds}/`, data)\n      .then((res) => {\n        getAllBotSettingByFollowingStatus(page + 1);\n        enqueueSnackbar(\n          `${blockStatusToUpdate === 'blocked' ? 'Chặn' : 'Bỏ chặn'\n          } thành công!`,\n          { variant: 'success' }\n        );\n        setSelectedIds({});\n        setSelectAll(0);\n      })\n      .catch((err) => {\n        enqueueSnackbar(\n          `${blockStatusToUpdate === 'blocked' ? 'Chặn' : 'Bỏ chặn'} thất bại!`,\n          { variant: 'error' }\n        );\n      });\n  };\n\n  // PAGINATION FUNCTION\n  const handleSelectPageSize = (\n    option: SingleValue<InputSelectOption>,\n    actionMeta: ActionMeta<InputSelectOption>\n  ) => {\n    if (option != null) {\n      setSelectedPageSizeOption(option);\n      setPage(0);\n      getAllBotSettingByFollowingStatus(1);\n    }\n  };\n\n  const handlePageChange = useCallback(\n    ({ selected }: { selected: number }) => {\n      console.log(selected);\n      const page = selected + 1;\n      setPage(selected);\n      getAllBotSettingByFollowingStatus(page);\n    },\n    [getAllBotSettingByFollowingStatus]\n  );\n\n  const columns = React.useMemo<Column<BotSettingResult>[]>(\n    () => [\n      {\n        id: 'checkbox',\n        accessor: 'checkbox',\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          // console.log(selected);\n          // console.log(original.id);\n          return (\n            <div className=\"flex justify-center items-center\">\n              <input\n                type=\"checkbox\"\n                className=\"checkbox\"\n                checked={selectedIds[original.id] === true}\n                onChange={(e) => toggleRow(original.id)}\n              />\n            </div>\n          );\n        },\n        Header: () => {\n          return (\n            <div className=\"flex justify-center items-center\">\n              <input\n                type=\"checkbox\"\n                className=\"checkbox text-center\"\n                checked={selectAll === 1}\n                ref={(input) => {\n                  if (input) {\n                    input.indeterminate = selectAll === 2;\n                  }\n                }}\n                onChange={() => toggleAllRow()}\n              />\n            </div>\n          );\n        },\n        sortable: false,\n        width: 45,\n      },\n      {\n        Header: () => {\n          return <div className=\"text-left\">Biệt danh</div>;\n        },\n        accessor: 'follower_name',\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          const isBlocked = original.block_status === 'blocked';\n          return (\n            <div className=\"flex items-center gap-x-1\">\n              <p className=\"text-sm text-ink-100\">{original.follower_name}</p>\n              {isBlocked && (\n                <p className=\"text-xs text-purple-800\">(Đã bị chặn)</p>\n              )}\n            </div>\n          );\n        },\n      },\n      {\n        Header: 'Lợi nhuận',\n        accessor: 'current_date_profit',\n        align: 'center',\n        Cell: (props) => {\n          const original = props.cell.row.original.current_date_profit;\n          return (\n            <div className=\"text-center\">\n              <span className=\"rounded-3xl text-sm font-semibold\">\n                {(original && original > 0)\n                  ? <span className='text-teal-100'>${original.toLocaleString('en-US', options)}</span>\n                  : <span className='text-red-100'>${original.toLocaleString('en-US', options)}</span>\n                }\n              </span>\n            </div>\n          );\n        },\n      },\n      {\n        Header: 'Loại tài khoản',\n        accessor: 'account_type',\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          const isDemoAccount = original.account_type === 'DEMO';\n          // const isDemoAccount = false;\n          return (\n            <div className=\"flex justify-center gap-x-1\">\n              {/* <p>{original.account_type}</p> */}\n              <p\n                className={`px-2 ${isDemoAccount ? 'bg-blue-80' : 'bg-purple-100'\n                  } rounded-3xl text-ink-100 text-xs`}\n              >\n                {original.account_type}\n                {/* LIVE */}\n              </p>\n            </div>\n          );\n        },\n      },\n      /*\n      {\n        Header: () => <div className=\"text-end\">Giá trị lệnh</div>,\n        accessor: 'o_amount',\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          return (\n            <div className=\"text-end\">\n              <span className=\"rounded-3xl bg-primary-100 bg-clip-text text-transparent text-sm font-semibold\">\n                ${original.o_amount?.toLocaleString('en-US', options)}\n              </span>\n            </div>\n          );\n        },\n      },\n      */\n      {\n        Header: () => <div className=\"text-center\">Volume ngày</div>,\n        accessor: 'current_date_volume',\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          return (\n            <div className=\"text-center\">\n              <span className=\"rounded-3xl text-teal-100 text-sm font-semibold\">\n                ${original.current_date_volume?.toLocaleString('en-US', options)}\n              </span>\n            </div>\n          );\n        },\n      },\n      {\n        Header: 'HS. Gấp lệnh',\n        accessor: 'fold_command',\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          return (\n            <div className=\"flex justify-center items-center\">\n              <p className=\"px-2 leading-5 bg-orange-100 rounded-3xl text-ink-100 text-xs\">\n                X{original.fold_command?.toLocaleString('en-US', options)}\n              </p>\n            </div>\n          );\n        },\n      },\n      {\n        Header: 'Chốt lãi/Cắt lỗ',\n        accessor: 'profitLoss',\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          return (\n            <div className=\"flex items-center justify-center\">\n              <p className=\"px-2 leading-5 bg-green-100 rounded-3xl text-ink-100 text-xs\">\n                ${original.aim_max?.toLocaleString('en-US', options)}\n              </p>\n              /\n              <p className=\"px-2 leading-5 bg-red-100 rounded-3xl text-ink-100 text-xs\">\n                ${original.aim_min?.toLocaleString('en-US', options)}\n              </p>\n            </div>\n          );\n        },\n      },\n      {\n        Header: () => <div className=\"text-left\">Tuyến trên</div>,\n        accessor: 'master_above',\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          return (\n            <>\n              {original.master_above && (\n                <div className=\"flex items-center gap-x-1\">\n                  {/* <img\n                    className=\"w-[1.5rem] rounded-lg\"\n                    src={faker.image.people(undefined, undefined, true)}\n                    alt=\"BotLambotrade\"\n                  /> */}\n                  <p>{original.master_above}</p>\n                </div>\n              )}\n            </>\n          );\n        },\n      },\n      // {\n      //   accessor: 'actions',\n      //   Cell: (props) => {\n      //     const original = props.cell.row.original;\n      //     return (\n      //       <div className=\"flex justify-center gap-x-1\">\n      //         <Tooltip\n      //           componentsProps={{\n      //             tooltip: {\n      //               className: '!px-0 !py-3 !bg-dropdown !rounded-xl',\n      //             },\n      //             arrow: {\n      //               className:\n      //                 '!w-[1rem] !translate-x-[9.6875rem] !before:bg-dropdown',\n      //               sx: {\n      //                 '&::before': {\n      //                   background: 'var(--bg-dropdown)',\n      //                 },\n      //               },\n      //             },\n      //           }}\n      //           title={\n      //             <>\n      //               <div\n      //                 className=\"p-3 min-w-[11.25rem] hover:bg-primary-10 flex items-center gap-x-2 cursor-pointer\"\n      //                 onClick={() => {\n      //                   handleOpenPopupModal();\n      //                   setSelectedBotSetting(original);\n      //                 }}\n      //               >\n      //                 <img\n      //                   className=\"w-[1.5rem]\"\n      //                   src={images.table.edit}\n      //                   alt=\"BotLambotrade\"\n      //                 />\n      //                 <p className=\"text-ink-100 text-base\">\n      //                   {original.block_status === 'none' ? 'Chặn' : 'Bỏ chặn'}\n      //                 </p>\n      //               </div>\n      //             </>\n      //           }\n      //           arrow\n      //           placement=\"bottom-end\"\n      //         >\n      //           <img\n      //             className=\"cursor-pointer\"\n      //             src={images.table.actions}\n      //             alt=\"BotLambotrade\"\n      //           />\n      //         </Tooltip>\n      //       </div>\n      //     );\n      //   },\n      // },\n    ],\n    [selectAll, selectedIds, toggleAllRow, toggleRow]\n  );\n\n  const tableInstance = useTable({ columns, data }, usePagination);\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    state: { pageIndex, pageSize },\n  } = tableInstance;\n\n  const handlePageClick = (event: PaginationEvent) => {\n    // const newOffset = (event.selected * itemsPerPage) % items.length;\n    // console.log(\n    //   `User requested page number ${event.selected}, which is offset ${newOffset}`\n    // );\n    console.log(event);\n    // setItemOffset(newOffset);\n  };\n\n  const showIsDevelopingModal = () => {\n    dispatch(uiActions.updateIsModalOpen(true));\n  };\n\n  useEffect(() => {\n    getAllBotSettingByFollowingStatus(page + 1);\n  }, [getAllBotSettingByFollowingStatus, page]);\n\n  return (\n    <>\n      <div className=\"h-fit mb-6 bg-background-80 rounded-3xl\">\n        <div>\n          <div className={`flex px-6 pt-2 border-b border-ink-10`}>\n            <div\n              className={`relative py-4 px-6 cursor-pointer ${isFollowing ? 'border-bottom-primary' : ''\n                } whitespace-nowrap`}\n              onClick={() => {\n                setIsFollowing(true);\n                setSelectAll(0);\n                setSelectedIds({});\n              }}\n            >\n              <p\n                className={`${isFollowing\n                    ? 'bg-primary-100 bg-clip-text text-transparent font-semibold'\n                    : 'text-ink-60'\n                  } text-sm`}\n              >\n                Đang theo dõi\n              </p>\n            </div>\n            <div\n              className={`relative py-4 px-6 cursor-pointer ${!isFollowing ? 'border-bottom-primary' : ''\n                } whitespace-nowrap`}\n              onClick={() => {\n                setIsFollowing(false);\n                setSelectAll(0);\n                setSelectedIds({});\n              }}\n            >\n              <p\n                className={`${!isFollowing\n                    ? 'bg-primary-100 bg-clip-text text-transparent font-semibold'\n                    : 'text-ink-60'\n                  } text-sm`}\n              >\n                Đang chặn\n              </p>\n            </div>\n          </div>\n          {botFollowingResults.length > 0 && (\n            <div className=\"p-6 flex flex-col gap-y-6\">\n              <div>\n                <label\n                  htmlFor=\"default-search\"\n                  className=\"mb-2 text-sm font-medium text-gray-900 sr-only dark:text-ink-100\"\n                >\n                  Search\n                </label>\n                <div className=\"relative\">\n                  <div className=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n                    <svg\n                      aria-hidden=\"true\"\n                      className=\"w-5 h-5 text-black-opacity-100\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      viewBox=\"0 0 24 24\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth=\"2\"\n                        d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n                      ></path>\n                    </svg>\n                  </div>\n                  <input\n                    type=\"search\"\n                    id=\"default-search\"\n                    className=\"block w-full md:w-[21.375rem] py-3 pl-9 pr-8 text-sm text-black-opacity-40 border border-ink-20 rounded-xl bg-ink-05 focus:ring-blue-500 focus:border-blue-500 placeholder-black-opacity-40 dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n                    placeholder=\"Tìm kiếm\"\n                    value={searchInput}\n                    onChange={(e) => {\n                      setSearchInput(e.target.value);\n                    }}\n                    required\n                  />\n                </div>\n              </div>\n\n              {Object.values(selectedIds).filter((value) => value === true)\n                .length > 0 && (\n                  <div className=\"px-4 py-3 bg-ink-05 rounded-xl flex justify-between items-center\">\n                    <p className=\"text-ink-100 font-semibold\">\n                      {`Đã chọn ${Object.values(selectedIds).filter(\n                        (value) => value === true\n                      ).length\n                        }`}\n                    </p>\n                    <button\n                      className=\"px-8 py-3 bg-primary-100 rounded-xl\"\n                      onClick={() => {\n                        // showIsDevelopingModal();\n                        handleOpenPopupModal();\n                      }}\n                    >\n                      <p className=\"bg-background-100 bg-clip-text text-transparent font-semibold\">\n                        {isFollowing ? 'Chặn' : 'Bỏ chặn'}\n                      </p>\n                    </button>\n                  </div>\n                )}\n\n              <div>\n                <div\n                  className={`border border-ink-05 rounded-2xl w-full ${!isDesktop ? 'overflow-x-scroll' : ''\n                    }`}\n                >\n                  <table className=\"w-full\" {...getTableProps()}>\n                    <thead>\n                      {headerGroups.map((headerGroup) => (\n                        <tr {...headerGroup.getHeaderGroupProps()}>\n                          {headerGroup.headers.map((column) => (\n                            <th\n                              className={`p-4 bg-primary-05 first-of-type:rounded-tl-2xl last-of-type:rounded-tr-2xl text-sm text-ink-100 font-normal whitespace-nowrap text-ellipsis`}\n                              {...column.getHeaderProps()}\n                            >\n                              {column.render('Header')}\n                            </th>\n                          ))}\n                        </tr>\n                      ))}\n                    </thead>\n                    <tbody {...getTableBodyProps()}>\n                      {rows.map((row) => {\n                        prepareRow(row);\n                        return (\n                          <tr\n                            className={`border-b border-ink-10 last:border-0 whitespace-nowrap text-ellipsis`}\n                            {...row.getRowProps()}\n                          >\n                            {row.cells.map((cell) => (\n                              <td className={`p-4`} {...cell.getCellProps()}>\n                                {cell.render('Cell')}\n                              </td>\n                            ))}\n                          </tr>\n                        );\n                      })}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n\n              {/* PAGINATION */}\n              <div\n                className={`flex flex-col justify-center items-end md:flex-row md:justify-end md:items-center gap-2`}\n              >\n                <div>\n                  <SelectInput\n                    value={selectedPageSizeOption}\n                    onChange={handleSelectPageSize}\n                    inputClassName=\"!py-2 !pr-8 text-sm\"\n                    indicatorContainerClassName=\"!right-3\"\n                    indicatorContainerIconClassName=\"!w-[1rem]\"\n                    menuPortalClassName={`min-w-[10.25rem] ${isMobile ? 'translate-x-[-3.2rem]' : ''\n                      }`}\n                    name=\"select\"\n                    options={PAGE_SIZE_OPTIONS}\n                  />\n                </div>\n\n                <ReactPaginate\n                  breakLabel=\"...\"\n                  onPageChange={handlePageChange}\n                  marginPagesDisplayed={isMobile ? 2 : 3}\n                  pageCount={totalPages}\n                  previousLabel={\n                    <div\n                      onMouseLeave={() => {\n                        setIsPrevHover(false);\n                      }}\n                      onMouseEnter={() => {\n                        setIsPrevHover(true);\n                      }}\n                      className=\"p-[0.375rem] border-input-ink before:rounded-lg\"\n                    >\n                      {isPrevHover ? (\n                        <img\n                          className=\"w-[1.25rem]\"\n                          src={images.table.pagination_left_arrow_gold}\n                          alt=\"BotLambotrade\"\n                        />\n                      ) : (\n                        // <KeyboardArrowLeft sx={{ fill: 'var(--color-ink-80)' }} />\n                        <img\n                          className=\"w-[1.25rem]\"\n                          src={images.table.pagination_left_arrow}\n                          alt=\"BotLambotrade\"\n                        />\n                      )}\n                    </div>\n                  }\n                  nextLabel={\n                    <div\n                      onMouseLeave={() => {\n                        setIsNextHover(false);\n                      }}\n                      onMouseEnter={() => {\n                        setIsNextHover(true);\n                      }}\n                      className=\"p-[0.375rem] border-input-ink before:rounded-lg\"\n                    >\n                      {/* <KeyboardArrowRight sx={{ fill: 'var(--color-ink-80)' }} /> */}\n                      {isNextHover ? (\n                        <img\n                          className=\"w-[1.25rem]\"\n                          src={images.table.pagination_right_arrow_gold}\n                          alt=\"BotLambotrade\"\n                        />\n                      ) : (\n                        <img\n                          className=\"w-[1.25rem]\"\n                          src={images.table.pagination_right_arrow}\n                          alt=\"BotLambotrade\"\n                        />\n                      )}\n                    </div>\n                  }\n                  forcePage={page}\n                  // pageClassName=\"py-[0.3125rem] px-3 border-input-ink before:rounded-lg cursor-pointer\"\n                  pageLinkClassName=\"page-link relative z-10 py-[0.3125rem] px-3 border-input-ink before:rounded-lg cursor-pointer\"\n                  previousClassName=\"page-item flex\"\n                  previousLinkClassName=\"page-link\"\n                  nextClassName=\"page-item flex\"\n                  nextLinkClassName=\"page-link relative z-10\"\n                  breakClassName=\"page-item py-[0.375rem] px-3 border-input-ink before:rounded-lg cursor-pointer\"\n                  breakLinkClassName=\"page-link z-10\"\n                  containerClassName=\"flex items-center gap-x-2 text-ink-80 text-sm\"\n                  activeClassName=\"pagination-active border-primary before:rounded-lg\"\n                />\n              </div>\n            </div>\n          )}\n        </div>\n\n        {botFollowingResults.length === 0 && isFollowing && (\n          <div className=\"py-[5rem] flex flex-col justify-center items-center gap-y-6\">\n            <img\n              className=\"w-[10.25rem]\"\n              src={images.copy.followingEmpty}\n              alt=\"BotLambotrade\"\n            />\n            <p className=\"text-ink-60\">Danh sách đang theo dõi trống</p>\n          </div>\n        )}\n\n        {botFollowingResults.length === 0 && !isFollowing && (\n          <div className=\"py-[5rem] flex flex-col justify-center items-center gap-y-6\">\n            <img\n              className=\"w-[10.25rem]\"\n              src={images.copy.blockingEmpty}\n              alt=\"BotLambotrade\"\n            />\n            <p className=\"text-ink-60\">Danh sách đang chặn trống</p>\n          </div>\n        )}\n\n        {/* <div className=\"m-6 flex justify-end gap-x-2\">\n          <div className=\"px-3 py-2 flex justify-center items-center gap-x-1 border border-ink-10 rounded-lg\">\n            <p>\n              {pageSize}/{totalRecords}\n            </p>\n            <KeyboardArrowDown\n              sx={{\n                fill: 'var(--color-ink-80)',\n                cursor: 'pointer',\n              }}\n            />\n          </div>\n          <ReactPaginate\n            breakLabel=\"...\"\n            onPageChange={handlePageClick}\n            marginPagesDisplayed={isMobile ? 2 : 3}\n            pageCount={page.length}\n            previousLabel={\n              <div className=\"p-[0.375rem] border border-ink-10 rounded-lg\">\n                <KeyboardArrowLeft sx={{ fill: 'var(--color-ink-80)' }} />\n              </div>\n            }\n            nextLabel={\n              <div className=\"p-[0.375rem] border border-ink-10 rounded-lg\">\n                <KeyboardArrowRight sx={{ fill: 'var(--color-ink-80)' }} />\n              </div>\n            }\n            pageClassName=\"py-[0.375rem] px-3 border border-ink-10 rounded-lg\"\n            pageLinkClassName=\"page-link\"\n            previousClassName=\"page-item\"\n            previousLinkClassName=\"page-link\"\n            nextClassName=\"page-item\"\n            nextLinkClassName=\"page-link\"\n            breakClassName=\"page-item\"\n            breakLinkClassName=\"page-link\"\n            containerClassName=\"flex items-center gap-x-2 text-ink-80\"\n            activeClassName=\"active bg-primary-100 bg-clip-text text-transparent border-primary\"\n          />\n        </div> */}\n      </div>\n\n      <CustomModal\n        isOpen={isPopupOpen}\n        handleOpen={handleOpenPopupModal}\n        handleClose={handleClosePopupModal}\n      >\n        <div\n          className={`absolute left-[50%] top-[50%] translate-x-[-50%] translate-y-[-50%] p-6 md:w-[31.25rem] w-[calc(100vw-2rem)] bg-background-80 rounded-3xl text-center`}\n        >\n          <h3 className=\"mb-2 mx-auto max-w-[18.75rem] text-xl text-ink-100\">\n            {isFollowing ? 'Chặn' : 'Bỏ chặn'} cấu hình\n          </h3>\n          <p className=\"mb-12 mx-auto max-w-[18.75rem] text-ink-80\">\n            Bạn có chắc chắn muốn {isFollowing ? 'chặn' : 'bỏ chặn'} cấu hình\n            không?\n          </p>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 justify-center items-center gap-4\">\n            <GreyButton onClick={handleClosePopupModal}>Huỷ</GreyButton>\n            <GoldButton\n              onClick={() => {\n                handleBlockingFollower();\n                handleClosePopupModal();\n              }}\n            >\n              {isFollowing ? 'Chặn' : 'Bỏ chặn'}\n            </GoldButton>\n          </div>\n        </div>\n      </CustomModal>\n    </>\n  );\n};\n\nexport default CopyTradeFollow;\n","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgTrendingDown(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: \"20px\",\n    viewBox: \"0 -960 960 960\",\n    width: \"20px\",\n    fill: \"#ff3535\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M624-209v-72h117L529-492 377-340 96-621l51-51 230 230 152-152 263 262v-117h72v240H624Z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgTrendingDown);\nexport default __webpack_public_path__ + \"static/media/trending_down.5a7e37d99d9df253531f63d122d5ebf6.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgTrendingUp(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: \"20px\",\n    viewBox: \"0 -960 960 960\",\n    width: \"20px\",\n    fill: \"#59cf59\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m147-209-51-51 281-281 152 152 212-211H624v-72h240v240h-72v-117L529-287 377-439 147-209Z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgTrendingUp);\nexport default __webpack_public_path__ + \"static/media/trending_up.515920285df32dfe436a5f2da466ba5c.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useRef, useEffect, MutableRefObject } from 'react';\nimport { TweenLite, Circ } from 'gsap';\n\ninterface Point {\n  x: number;\n  y: number;\n  originX: number;\n  originY: number;\n  closest?: Point[];\n  active?: number;\n  circle?: Circle;\n}\n\nclass Circle {\n  pos: Point;\n  radius: number;\n  color: string;\n  active?: number;\n\n  constructor(pos: Point, rad: number, color: string) {\n    this.pos = pos;\n    this.radius = rad;\n    this.color = color;\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    if (!this.active) return;\n    ctx.beginPath();\n    ctx.arc(this.pos.x, this.pos.y, this.radius, 0, 2 * Math.PI, false);\n    ctx.fillStyle = `rgba(156,217,249,${this.active})`;\n    ctx.fill();\n  }\n}\n\ninterface AnimatedHeaderProps {\n  largeHeaderRef: MutableRefObject<HTMLDivElement | null>;\n}\n\nconst AnimatedHeader: React.FC<AnimatedHeaderProps> = ({ largeHeaderRef }) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const pointsRef = useRef<Point[]>([]);\n  const targetRef = useRef<{ x: number; y: number }>({ x: 0, y: 0 });\n  const animateHeaderRef = useRef(true);\n  const resizeObserverRef = useRef<ResizeObserver | null>(null);\n  const rotationSpeed = 0.02;\n  const radius = 100;\n\n  useEffect(() => {\n    const canvas = canvasRef.current!;\n    // const ctx = canvas.getContext('2d')!;\n    const largeHeader = largeHeaderRef.current!;\n\n    const updateCanvasSize = () => {\n      if (canvas && largeHeader) {\n        const rect = largeHeader.getBoundingClientRect();\n        canvas.width = rect.width;\n        canvas.height = rect.height;\n      }\n    };\n\n    const initHeader = () => {\n      updateCanvasSize();\n      targetRef.current = { x: canvas.width / 2, y: canvas.height / 2 };\n\n      const points: Point[] = [];\n      for (let x = 0; x < canvas.width; x += canvas.width / 20) {\n        for (let y = 0; y < canvas.height; y += canvas.height / 20) {\n          const px = x + Math.random() * canvas.width / 20;\n          const py = y + Math.random() * canvas.height / 20;\n          points.push({ x: px, originX: px, y: py, originY: py });\n        }\n      }\n\n      points.forEach((p1) => {\n        const closest: Point[] = [];\n        points.forEach((p2) => {\n          if (p1 !== p2) {\n            let placed = false;\n            for (let k = 0; k < 5; k++) {\n              if (!placed) {\n                if (closest[k] === undefined) {\n                  closest[k] = p2;\n                  placed = true;\n                }\n              }\n            }\n            for (let k = 0; k < 5; k++) {\n              if (!placed) {\n                if (getDistance(p1, p2) < getDistance(p1, closest[k])) {\n                  closest[k] = p2;\n                  placed = true;\n                }\n              }\n            }\n          }\n        });\n        p1.closest = closest;\n      });\n\n      points.forEach((p) => {\n        p.circle = new Circle(p, 2 + Math.random() * 2, 'rgba(255,255,255,0.3)');\n      });\n      pointsRef.current = points;\n    };\n\n    const addListeners = () => {\n      const canvas = canvasRef.current!;\n      canvas.addEventListener('mousemove', mouseMove);\n      canvas.addEventListener('mouseleave', mouseLeave);\n      window.addEventListener('scroll', scrollCheck);\n      window.addEventListener('resize', resize);\n      resizeObserverRef.current = new ResizeObserver(() => {\n        updateCanvasSize();\n        initHeader();\n      });\n      resizeObserverRef.current.observe(largeHeader);\n    };\n\n    const mouseMove = (e: MouseEvent) => {\n      const rect = canvasRef.current!.getBoundingClientRect();\n      const posx = e.clientX - rect.left;\n      const posy = e.clientY - rect.top;\n      targetRef.current = { x: posx, y: posy };\n      console.log('Mouse Position:', targetRef.current);\n    };\n\n    const mouseLeave = () => {\n      targetRef.current = { x: canvas.width / 2, y: canvas.height / 2 };\n    };\n\n    const scrollCheck = () => {\n      if (document.body.scrollTop > canvas.height) {\n        animateHeaderRef.current = false;\n      } else {\n        animateHeaderRef.current = true;\n      }\n    };\n\n    const resize = () => {\n      updateCanvasSize();\n    };\n\n    const initAnimation = () => {\n      animate();\n      pointsRef.current.forEach((point) => shiftPoint(point));\n    };\n\n    const animate = () => {\n      if (animateHeaderRef.current) {\n        const ctx = canvasRef.current!.getContext('2d')!;\n        ctx.clearRect(0, 0, canvasRef.current!.width, canvasRef.current!.height);\n        pointsRef.current.forEach((p) => {\n          const distance = getDistance(targetRef.current, p);\n          if (distance < 4000) {\n            p.active = 0.3;\n            p.circle!.active = 0.6;\n          } else if (distance < 20000) {\n            p.active = 0.1;\n            p.circle!.active = 0.3;\n          } else if (distance < 40000) {\n            p.active = 0.02;\n            p.circle!.active = 0.1;\n          } else {\n            p.active = 0;\n            p.circle!.active = 0;\n          }\n\n          drawLines(p, ctx);\n          p.circle!.draw(ctx);\n        });\n      }\n      requestAnimationFrame(animate);\n    };\n\n    const shiftPoint = (p: Point) => {\n      const centerX = canvas.width / 2;\n      const centerY = canvas.height / 2;\n      TweenLite.to(p, 1 + Math.random(), {\n        x: centerX + radius * Math.cos(rotationSpeed * Date.now()),\n        y: centerY + radius * Math.sin(rotationSpeed * Date.now()),\n        ease: Circ.easeInOut,\n        onComplete: () => shiftPoint(p),\n      });\n    };\n\n    const drawLines = (p: Point, ctx: CanvasRenderingContext2D) => {\n      if (!p.active) return;\n      p.closest?.forEach((closestPoint) => {\n        ctx.beginPath();\n        ctx.moveTo(p.x, p.y);\n        ctx.lineTo(closestPoint.x, closestPoint.y);\n        ctx.strokeStyle = `rgba(156,217,249,${p.active})`;\n        ctx.stroke();\n      });\n    };\n\n    const getDistance = (p1: { x: number; y: number }, p2: { x: number; y: number }) => {\n      return Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2);\n    };\n\n    initHeader();\n    addListeners();\n    initAnimation();\n\n    return () => {\n      const canvas = canvasRef.current;\n      if (canvas) {\n        canvas.removeEventListener('mousemove', mouseMove);\n        canvas.removeEventListener('mouseleave', mouseLeave);\n      }\n      window.removeEventListener('scroll', scrollCheck);\n      window.removeEventListener('resize', resize);\n      if (resizeObserverRef.current) {\n        // Ensure largeHeaderRef.current is not null before calling unobserve\n        if (largeHeaderRef.current) {\n          resizeObserverRef.current.unobserve(largeHeaderRef.current);\n        }\n      }\n    };\n  }, [largeHeaderRef]);\n\n  return (\n    <div id=\"large-header\" className=\"large-header\">\n      <canvas id=\"demo-canvas\" ref={canvasRef}></canvas>\n    </div>\n  );\n};\n\nexport default AnimatedHeader;\n","import React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport images from 'assets';\nimport { Link } from 'react-router-dom';\nimport CopyTradeZoomSelectInput from './CopyTradeZoomSelectInput';\nimport InputSelectOption from 'types/InputSelectOption';\nimport { useMediaQuery } from 'react-responsive';\nimport CopyTelegramUpSvg from 'svgs/CopyTelegramUpSvg';\nimport CopyTelegramDownSvg from 'svgs/CopyTelegramDownSvg';\nimport APIs from 'apis'; // Import your API endpoints\nimport './index.scss'\nimport trendingDown from '../../assets/images/trending_down.svg'\nimport trendingUp from '../../assets/images/trending_up.svg'\nimport aiDown from '../../assets/images/copy_trade_ai_.jpg'\nimport aiUp from '../../assets/images/copy_trade_ai_buy.jpg'\nimport Animated from './Animated';\n\nexport interface BotInterface {\n    label: string;\n    value: string;\n    [x: string]: any;\n}\n\ninterface IProps {\n    refetch?: number\n}\n\nconst CopyTradeAI = ({ }: IProps) => {\n    const [botList, setBotList] = useState<BotInterface[]>([]);\n    const largeHeaderRef = useRef<HTMLDivElement>(null);\n    const [searchInputTelegram, setSearchInputTelegram] = useState<InputSelectOption>({\n        value: '',\n        label: '',\n    });\n    const [isTelegramChatOpen, setIsTelegramChatOpen] = useState(true);\n    const [analysisPercentages, setAnalysisPercentages] = useState<Record<string, number>>({});\n    const [prediction, setPrediction] = useState<String | null>(null);\n\n    const [isLoadingDetail, setIsLoadingDetail] = useState(false)\n\n    // Responsive design handling\n    const isDesktop = useMediaQuery({\n        query: '(min-width: 1224px)',\n    });\n    const isTablet = useMediaQuery({\n        query: '(min-width: 768px)',\n    });\n\n    const labelsMap: Record<string, string> = {\n        '23': 'Phương pháp AI Dự báo Xu hướng BO',\n        '24': 'Phương pháp Phân tích Tín hiệu AI BO',\n        '25': 'Phương pháp AI Giao dịch Thông minh BO',\n        '26': 'Phương pháp AI Chiến lược Tối ưu BO',\n        '27': 'Phương pháp AI Phân tích Tâm lý Thị trường BO',\n    };\n\n    const loadDetail = async () => {\n        try {\n            setPrediction(null)\n            setIsLoadingDetail(true)\n            const noLoadingAxios = axios.create();\n            await noLoadingAxios.get(`${APIs.botOrderDetail}/${searchInputTelegram.value}`).then((res) => {\n                const details = res?.data?.results;\n                setAnalysisPercentages((prev) => {\n                    return {\n                        ...prev,\n                        [searchInputTelegram.value]: parseFloat((Math.random() * (73.9 - 52.4) + 52.4).toFixed(1)),\n                    };\n                });\n                if (details && details.length > 0) {\n                    const latestDetail = details[0];\n                    setPrediction(latestDetail.o_type);\n                }\n            })\n        } catch (err) {\n\n        } finally {\n            setTimeout(() => {\n                setIsLoadingDetail(false);\n            }, 3000);\n        }\n    }\n\n    // useEffect(() => {\n    //     loadDetail()\n    // },[refetch])\n\n    const fetchListBots = async () => {\n        await axios.get(`${APIs.botSignalTeleList}`).then((res) => {\n            const result = res?.data?.results\n                .filter((bot: any) => bot.id >= 23 && bot.id <= 27) // Filter bots with IDs 23-27\n                .map((bot: any) => {\n                    const botId = bot.id.toString();\n                    return {\n                        value: botId,\n                        label: labelsMap[botId], // Assign the corresponding label\n                    };\n                });\n\n            setBotList(result)\n\n            if (result?.length > 0 && !searchInputTelegram.value) {\n                const firstBot = result[0];\n                setSearchInputTelegram(firstBot);\n                // loadOrderDetail(firstBot.value);\n            }\n        })\n    }\n\n    useEffect(() => {\n        fetchListBots()\n    }, [])\n\n    return (\n        <div\n            className={`${isDesktop ? 'col-span-2' : ''} bg-background-80 rounded-3xl flex overflow-hidden flex-col`}\n        >\n            <div\n                className={`px-6 py-5 flex justify-between overflow-hidden items-center ${isTelegramChatOpen ? 'border-b border-ink-10' : ''\n                    }`}\n            >\n                <p className={`text-xl text-ink-100 font-semibold`}>\n                    Phân tích AI\n                </p>\n                {!isDesktop && isTelegramChatOpen && (\n                    <CopyTelegramDownSvg\n                        className=\"text-ink-100\"\n                        onClick={() => {\n                            setIsTelegramChatOpen(false);\n                        }}\n                    />\n                )}\n                {!isDesktop && !isTelegramChatOpen && (\n                    <CopyTelegramUpSvg\n                        className=\"text-ink-100\"\n                        onClick={() => {\n                            setIsTelegramChatOpen(true);\n                        }}\n                    />\n                )}\n            </div>\n            {/* Select BOT */}\n            {isTelegramChatOpen && (\n                <div className=\"flex justify-between px-6 py-5 gap-2 items-center\">\n                    <div className=\"flex gap-2 flex-grow md:flex-initial items-center\">\n                        <CopyTradeZoomSelectInput\n                            inputValue={searchInputTelegram}\n                            options={botList}\n                            containerClassName={`${isTablet ? 'w-[24.75rem]' : 'w-[10.375rem]'\n                                } flex-grow md:flex-initial`}\n                            labelName=\"Phương pháp dự báo\"\n                            // onSelectChange={onSelectTelegramChange}\n                            onSelectChange={(_, value) => {\n                                setPrediction(null)\n                                setSearchInputTelegram(value)\n                            }}\n                        />\n\n                        <Link to=\"/copy_trade_zoom\">\n                            <div className=\"p-[0.625rem] border border-ink-10 bg-ink-05 rounded-2xl flex-grow md:flex-initial\">\n                                <img\n                                    className=\"w-[2.25rem]\"\n                                    src={images.copy.ai}\n                                    alt=\"BotLambotrade\"\n                                />\n                            </div>\n                        </Link>\n                        <button onClick={() => !isLoadingDetail && loadDetail()}\n                            className={`${isLoadingDetail ? 'bg-ink-05 cursor-not-allowed' : 'bg-[#59cf59]'} px-4 h-14 flex items-center justify-center rounded-lg border border-ink-10`}>Phân tích</button>\n                    </div>\n\n                    <Link to=\"/copy_trade_zoom\">\n                        <div className=\"p-[0.625rem] border border-ink-10 bg-ink-05 rounded-2xl\">\n                            <img\n                                className=\"w-[2.25rem]\"\n                                src={images.copy.stock}\n                                alt=\"BotLambotrade\"\n                            />\n                        </div>\n                    </Link>\n                </div>\n            )}\n\n            {isTelegramChatOpen && <div className='relative grow flex items-center justify-center h-[600px]' ref={largeHeaderRef}>\n                {isLoadingDetail || !prediction ? (\n                    <Animated largeHeaderRef={largeHeaderRef} />\n                ) : (\n                    <div\n                        className='relative z-0 w-full h-full'\n                        style={{\n                            backgroundImage: `url(${prediction === 'SELL' ? aiDown : aiUp})`,\n                            backgroundSize: 'cover',\n                            backgroundPosition: 'center',\n                        }}\n                    >\n                        <div className='bg-black/70 absolute z-10 w-full h-full'></div>\n                    </div>\n                )}\n                <div\n                    className={`absolute z-10 gap-2 ${!isLoadingDetail && prediction ? 'slide-in' : ''\n                        }`}\n                >\n                    <h1 className='text-4xl font-bold'>\n                       {prediction && !isLoadingDetail && <>AI <span className='thin'>dự báo xu hướng</span></>} \n                    </h1>\n                    {(!isLoadingDetail && prediction) ? (\n                        prediction !== 'SELL' ? (\n                            <div className='py-1 px-2 border border-[#59cf59] bg-[#51d85156] rounded flex items-center gap-2 text-3xl'>\n                                Xu hướng tăng {analysisPercentages[searchInputTelegram.value]}%{' '}\n                                <img src={trendingUp} alt='up' />\n                            </div>\n                        ) : (\n                            prediction === 'SELL' && (\n                                <div className='py-1 px-2 border border-[#ff1717] bg-[#d64f4f79] text-3xl rounded flex items-center gap-2'>\n                                    Xu hướng giảm {analysisPercentages[searchInputTelegram.value]}%{' '}\n                                    <img src={trendingDown} alt='down' />\n                                </div>\n                            )\n                        )\n                    ) : null}\n                </div>\n                {isLoadingDetail && (\n                    <div className='absolute bg-black/50 inset-0 z-[9999] w-full h-full flex items-center justify-center'>\n                        <h1 className='main-title text-3xl'>\n                            AI <span className='thin'>phân tích</span>\n                        </h1>\n                        <span className='loader'></span>\n                    </div>\n                )}\n            </div>}\n\n        </div>\n    );\n};\n\nexport default CopyTradeAI;\n","import { useCallback, useEffect, useState } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport axios from 'axios';\nimport APIs from 'apis';\nimport { useEnqueueSnackbar } from 'hooks/useEnqueueSnackbar';\nimport {\n  AutoBotHistoryTelegramList,\n} from 'types/AutoBotHistoryTelegramList';\nimport CopyTradeType from './CopyTradeType';\nimport CopyTradeTelegram from './CopyTradeTelegram';\nimport CopyTradeInformation from './CopyTradeInformation';\nimport CopyTradeResultCanvas from './CopyTradeResultCanvas';\nimport CopyTradeFollow from './CopyTradeFollow';\nimport InputSelectOption from 'types/InputSelectOption';\nimport { useMediaQuery } from 'react-responsive';\nimport CopyTradeAI from './CopyTradeAI';\n\n\nconst generateShapes = () => {\n  return [...Array(10)].map((_, i) => ({\n    id: i * Math.random() * 1000,\n    x: i * 24,\n    y: (i % 5) * 24,\n  }));\n};\n\nconst INITIAL_SELECT_OPTIONS: InputSelectOption[] = [\n  {\n    value: '',\n    label: '',\n  },\n];\n\nconst INITIAL_SELECTED_OPTION: InputSelectOption = {\n  value: '',\n  label: '',\n};\n\nconst INITIAL_SELECTED_ACCOUNT_TYPE: InputSelectOption = {\n  value: 'DEMO',\n  label: 'Tài khoản DEMO',\n};\n\nconst CopyTradeZoom = () => {\n  const [isMaster, setIsMaster] = useState(0);\n  const [shapes, setShapes] = useState(generateShapes());\n  const [isFollowing, setIsFollowing] = useState(true);\n  const [searchInputTable, setSearchInputTable] = useState('');\n  const [signalGroupedData, setSignalGroupedData] = useState<any>(null);\n  const [refetch, setRefetch] = useState(0)\n  const enqueueSnackbar = useEnqueueSnackbar();\n  // Account Information\n  const [selectedAccountType, setSelectedAccountType] =\n    useState<InputSelectOption>(INITIAL_SELECTED_ACCOUNT_TYPE);\n  const [selectedBotAccount, setSelectedBotAccount] =\n    useState<InputSelectOption>(INITIAL_SELECTED_OPTION);\n  const [accountOptions, setAccountOptions] = useState<InputSelectOption[]>(\n    INITIAL_SELECT_OPTIONS\n  );\n\n  // RESPONSIVE\n  const isDesktop = useMediaQuery({\n    query: '(min-width: 1224px)',\n  });\n  const isTablet = useMediaQuery({\n    query: '(min-width: 768px)',\n  });\n  const isMobile = useMediaQuery({\n    query: '(max-width: 767px)',\n  });\n\n  const splitSignal = (list: any, size: any) => {\n    let result = [];\n    for (let i = 0; i < list.length; i += size) {\n      let childList = list.slice(i, i + size);\n      result.push(childList);\n    }\n    return result;\n  };\n\n  const getAutoBotOrderHistory = useCallback(\n    () => {\n      const noLoadingAxios = axios.create();\n      noLoadingAxios\n        .get(`${APIs.orderBotListResult}`, {\n          params: {},\n        })\n        .then((res) => {\n          const data: AutoBotHistoryTelegramList = res.data;\n\n          const signalList = data?.results.map((item: any) =>\n            item.o_result === 1 ? true : item.o_result === -1 ? false : null\n          );\n          // splitSignal\n          const _signalGroupedData = splitSignal(signalList, 20);\n          setSignalGroupedData(_signalGroupedData);\n        })\n        .catch(() => {\n          enqueueSnackbar('Không thể lấy lịch sử giao dịch!', {\n            variant: 'error',\n          });\n        });\n    },\n    [enqueueSnackbar]\n  );\n\n  // useEffect(() => {\n  //   const intervalTime = 5000;\n  //   const interval = setInterval(() => {\n  //     getAutoBotOrderHistory();\n  //   }, intervalTime);\n\n  //   return () => {\n  //     clearInterval(interval);\n  //   };\n  // }, [getAutoBotOrderHistory]);\n\n  useEffect(() => {\n    getAutoBotOrderHistory();\n  }, [refetch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>BotLambotrade AI | Copy Trade</title>\n      </Helmet>\n\n      <CopyTradeType isMaster={isMaster} setIsMaster={setIsMaster} />\n\n      <div\n        className={`grid ${\n          isDesktop ? 'grid-cols-3' : 'grid-cols-1'\n        } gap-6 mb-6`}\n      >\n        {/* Bot tín hiệu Telegrame */}\n        {isMaster > 0  \n        ? <CopyTradeTelegram />\n        : <CopyTradeAI/>\n      }\n\n        {/* Thông tin giao dịch */}\n        <CopyTradeInformation isMaster={isMaster} callback={(v) => setRefetch((prev) => prev + 1)}/>\n      </div>\n\n      {/* Canvas kết quả  */}\n      <CopyTradeResultCanvas results={signalGroupedData} />\n\n      {isMaster === 2 && (\n        <CopyTradeFollow\n          isFollowing={isFollowing}\n          setIsFollowing={setIsFollowing}\n          searchInput={searchInputTable}\n          setSearchInput={setSearchInputTable}\n        />\n      )}\n    </>\n  );\n};\n\nexport default CopyTradeZoom;\n","export default function convertToThreeDecimalPlaces(num: string | number) {\n  const numDecimalPlaces = (num.toString().split('.')[1] || '').length;\n  if (numDecimalPlaces > 3) {\n    return (+num).toFixed(3);\n  } else {\n    return num;\n  }\n}\n"],"names":["_ref","children","className","background","textClassName","textColor","icon","iconClassName","type","onClick","_jsxs","concat","_jsx","src","alt","id","name","label","isLabelOutside","placeholder","value","error","helperText","helperTextEnd","fullWidth","searchIcon","symbol","button","isInputDisabled","prefix","PREFIX_VALUE","VALUES","inputSpinnerWrapperClassName","containerClassName","inputClassName","symbolClassName","helperClassName","helperTextClassName","helperTextEndClassName","onFixedValueChange","resetValue","onChange","handleValueMinusOne","handleValuePlusOne","onValueChange","onBlur","onFocus","onKeyDown","onKeyUp","onMouseOver","onMouseLeave","isMinusFocus","setIsMinusFocus","useState","isPlusFocus","setIsPlusFocus","e","images","TextInput","length","map","index","renderText","Math","random","isOpen","headingMessage","message","buttonMessage","handleOpen","handleClose","CustomModal","zIndex","CustomButton","inputName","searchInput","setSearchInput","htmlFor","fill","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","target","required","IndicatorsContainer","props","indicatorContainerClassName","indicatorContainerIconClassName","selectProps","components","IndicatorSeparator","innerProps","_Fragment","MenuList","searchInputIcon","searchInputName","searchInputPlaceHolder","searchInputSymbol","searchInputResetValue","searchInputError","searchInputHelperText","Option","isSelected","data","selectOption","useRef","forwardRef","_ref2","ref","options","defaultValue","isSelectDisabled","selectContainerClassName","menuPortalClassName","menuRef","isSelectFocus","setIsSelectFocus","isSelectHover","setIsSelectHover","isPasswordShowing","setIsPasswordShowing","inputRef","inputSpacingWithLabel","_inputRef$current2","current","focus","stopPropagation","Select","menuPortalTarget","document","body","menuPlacement","classNames","container","state","control","valueContainer","singleValue","menu","menuList","menuPortal","unstyled","isOptionSelected","option","_options$","openMenuOnFocus","actionMeta","isSearchable","isDisabled","decimalsLimit","decimalScale","fixedDecimalLength","autoComplete","searchIconClassName","isInputFocus","setInputFocus","isInputHover","setIsInputHover","passwordType","_inputRef$current3","CurrencyInput","_","values","disabled","allowNegativeValue","disableAbbreviations","decimalSeparator","groupSeparator","maxLength","_inputRef$current4","Cancel","handlePasswordShown","_inputRef$current","prev","ICONS","success","warning","TEXT_COLORS","TITLES","React","variant","closeSnackBar","useEnqueueSnackbar","enqueueSnackbar","closeSnackbar","useSnackbar","useCallback","content","key","undefined","CustomSnackbar","handleCloseSnackbar","labelName","popupClassName","isSearchEnabled","inputValue","onSelectChange","open","setOpen","SearchInput","isMaster","setIsMaster","useMediaQuery","query","isMobile","width","height","CopyTradeTelegram","botList","setBotList","botDetailList","setBotDetailList","currentMoment","setCurrentMoment","moment","searchInputTelegram","setSearchInputTelegram","isTelegramChatOpen","setIsTelegramChatOpen","isDesktop","isTablet","minWidth","maxWidth","useEffect","setInterval","loadOrderDetail","axios","get","APIs","then","res","_res$data","results","catch","interval","clearInterval","getAutoBotSignalTeleList","page","params","page_size","_res$data2","result","bot","bot_name","CopyTelegramDownSvg","CopyTelegramUpSvg","CopyTradeZoomSelectInput","onSelectTelegramChange","openTelegramGroup","link","telegroup_name","window","Link","to","format","item","o_status","created_at","ss_id","o_type","o_amount","o_result","toFixed","OrderType","INITIAL_BOT_BALANCE","balance","demo_balance","usdt_balance","INITIAL_SELECT_OPTIONS","INITIAL_SELECTED_OPTION","INITIAL_SELECTED_ACCOUNT_TYPE","ACCOUNT_TYPES","SESSION_TYPES","PLUS_VALUES","TIME_IN_ONE_SESSION","minimumFractionDigits","maximumFractionDigits","style","callback","partnerBotDatas","setPartnerBotDatas","botBalance","setBotBalance","orderAmount","setOrderAmount","multiplyAmount","setMultiplyAmount","isOrderAmountFocus","setIsOrderAmountFocus","isMultiplyAmountFocus","setIsMultiplyAmountFocus","selectedAccountType","setSelectedAccountType","selectedBotAccount","setSelectedBotAccount","accountOptions","setAccountOptions","sessionLocal","setSessionLocal","ss_t","r_second","sessionId","setSessionId","isInitialized","setIsInitialized","startSession","setStartSession","o_price","c_price","st_time","totalFollowData","setTotalFollowData","totalfollow","totalfollowactive","isPartnerBotInitialized","setIsPartnerBotInitialized","modalAttributes","setModalAttributes","dispatch","useAppDispatch","navigate","useNavigate","handleOpenValidAmountPopupModal","handleCloseValidAmountPopupModal","max","handleOpenAccountTradePopupModal","handleCloseAccountTradePopupModal","handleOrderAmountMinusOne","handleOrderAmountPlusOne","isDemoAccount","demoBalance","convertToThreeDecimalPlaces","liveBalance","handleOrderAmount","valueToSet","convertedValue","getAllPartnerBots","filter","status","userActions","err","getCurrentSession","console","log","getCurrentSessionByLocalTime","currentSecond","second","START_SESSION_SECOND_CONVERTED","START_SESSION","abs","middleSessionType","notMiddleSessionType","isInMiddleSession","timeLeft","sessionType","isEndSession","placeOrder","async","noLoadingAxios","orderAmountConverted","toString","replace","order","orderType","accountType","botId","fold","post","ok","getBalance","m","getTotalFollow","datas","reloadDemoBalance","convertPartnerBotsToPartnerAccountOptions","botData","botname","intervalId","firstBotOption","isSessionTrading","isBuySellValid","onSelectedAccountTypeChange","onSelectedBotAccountChange","toLocaleString","srcSet","CustomInputSpinner","Number","trim","plusAmount","checkIsValidSubmit","BUY","SELL","CustomValidateModel","resultChild","Stage","Layer","x","floor","y","Circle","radius","INITIAL_BOT_SETTING_RESULT","master","master_name","account_type","follower","follower_name","follower_username","o_owner","fold_command","block_status","updated_at","current_profit","current_date_profit","current_volume","current_date_volume","aim_min","aim_max","PAGE_SIZE_OPTIONS","isFollowing","setIsFollowing","selectedIds","setSelectedIds","selectAll","setSelectAll","totalRecords","setTotalRecords","followingDatas","setFollowingDatas","botFollowingData","setBotFollowingData","count","next","previous","botFollowingResults","setBotFollowingResults","isPopupOpen","setIsPopupOpen","selectedBotSettingResult","setSelectedBotSetting","selectedPageSizeOption","setSelectedPageSizeOption","setPage","totalPages","setTotalPages","isPrevHover","setIsPrevHover","isNextHover","setIsNextHover","useAppSelector","user","handleOpenPopupModal","handleClosePopupModal","getAllBotSettingByFollowingStatus","ceil","toggleRow","newSelected","Object","entries","reduce","toggleAllRow","forEach","handlePageChange","selected","columns","accessor","Cell","original","cell","row","checked","Header","input","indeterminate","sortable","isBlocked","align","_original$current_dat","_original$fold_comman","_original$aim_max","_original$aim_min","master_above","tableInstance","useTable","usePagination","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","pageIndex","pageSize","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","getRowProps","cells","getCellProps","SelectInput","handleSelectPageSize","ReactPaginate","breakLabel","onPageChange","marginPagesDisplayed","pageCount","previousLabel","onMouseEnter","nextLabel","forcePage","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","GreyButton","GoldButton","handleBlockingFollower","blockStatusToUpdate","selectedListIds","constructor","pos","rad","color","active","this","draw","ctx","beginPath","arc","PI","fillStyle","largeHeaderRef","canvasRef","pointsRef","targetRef","animateHeaderRef","resizeObserverRef","canvas","largeHeader","updateCanvasSize","rect","getBoundingClientRect","initHeader","points","px","py","push","originX","originY","p1","closest","p2","placed","k","getDistance","p","circle","mouseMove","posx","clientX","left","posy","clientY","top","mouseLeave","scrollCheck","scrollTop","resize","animate","getContext","clearRect","distance","drawLines","requestAnimationFrame","shiftPoint","centerX","centerY","TweenLite","cos","Date","now","sin","ease","Circ","onComplete","_p$closest","closestPoint","moveTo","lineTo","strokeStyle","pow","addListeners","addEventListener","ResizeObserver","observe","point","removeEventListener","unobserve","analysisPercentages","setAnalysisPercentages","prediction","setPrediction","isLoadingDetail","setIsLoadingDetail","labelsMap","firstBot","fetchListBots","details","parseFloat","latestDetail","setTimeout","loadDetail","Animated","backgroundImage","aiDown","aiUp","backgroundSize","backgroundPosition","trendingUp","trendingDown","CopyTradeZoom","shapes","setShapes","Array","i","searchInputTable","setSearchInputTable","signalGroupedData","setSignalGroupedData","refetch","setRefetch","getAutoBotOrderHistory","_signalGroupedData","splitSignal","list","size","childList","slice","Helmet","CopyTradeType","CopyTradeAI","CopyTradeInformation","v","CopyTradeResultCanvas","CopyTradeFollow","num","split"],"sourceRoot":""}