{"version":3,"file":"static/js/574.d6c943d0.chunk.js","mappings":"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","sources":["svgs/InputClearSvg.tsx","svgs/InputDatePickerSeperatorSvg.tsx","svgs/InputDatePickerSuffixSvg.tsx","components/CustomDatePickerV2/index.tsx","components/SelectInput/index.tsx","components/TextInput/index.tsx","components/CustomSnackbar/index.tsx","hooks/useEnqueueSnackbar.tsx","pages/Statistic/index.tsx"],"sourcesContent":["import React, { FC } from 'react';\nimport { ISvgIcon } from 'types';\n\nconst InputClearSvg: FC<ISvgIcon> = ({\n  width = '24',\n  height = '24',\n  fill = 'white',\n  fillOpacity = 0.6,\n  className = '',\n}) => {\n  return (\n    <svg\n      width={width}\n      height={height}\n      viewBox=\"0 0 24 24\"\n      fill={fill}\n      className={className}\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22ZM8.19526 15.8047C7.93491 15.5444 7.93491 15.1223 8.19526 14.8619L11.0572 12L8.19526 9.13807C7.93491 8.87772 7.93491 8.45561 8.19526 8.19526C8.45561 7.93491 8.87772 7.93491 9.13807 8.19526L12 11.0572L14.8619 8.19526C15.1223 7.93491 15.5444 7.93491 15.8047 8.19526C16.0651 8.45561 16.0651 8.87772 15.8047 9.13807L12.9428 12L15.8047 14.8619C16.0651 15.1223 16.0651 15.5444 15.8047 15.8047C15.5444 16.0651 15.1223 16.0651 14.8619 15.8047L12 12.9428L9.13807 15.8047C8.87772 16.0651 8.45561 16.0651 8.19526 15.8047Z\"\n        fill={fill}\n        fillOpacity={fillOpacity}\n      />\n    </svg>\n  );\n};\n\nexport default InputClearSvg;\n","import React, { FC } from 'react';\nimport { ISvgIcon } from 'types';\n\nconst InputDatePickerSeperatorSvg: FC<ISvgIcon> = ({\n  width = '24',\n  height = '24',\n  fill = 'white',\n  className = '',\n}) => {\n  return (\n    <svg\n      width={width}\n      height={height}\n      viewBox=\"0 0 24 24\"\n      fill={fill}\n      className={className}\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M16.0032 9.5672C15.6598 9.22373 15.6598 8.66334 16.0032 8.31987C16.1695 8.15356 16.3865 8.0704 16.6251 8.0704C16.8637 8.0704 17.0842 8.16441 17.2506 8.33072L20.3345 11.4147C20.4972 11.5774 20.5912 11.8016 20.5912 12.0329V12.0402C20.5912 12.2679 20.4972 12.4957 20.3345 12.6584L17.2506 15.7424C16.9071 16.0859 16.3467 16.0859 16.0032 15.7424C15.8333 15.5761 15.7429 15.3519 15.7429 15.1169C15.7429 14.8783 15.8369 14.6578 16.0032 14.4915L17.5904 12.9079H4.28554C3.80107 12.9079 3.40698 12.5102 3.40698 12.0257C3.40698 11.5412 3.80107 11.1472 4.28554 11.1472H17.5904L16.0032 9.5672Z\"\n        fill={fill}\n      />\n    </svg>\n  );\n};\n\nexport default InputDatePickerSeperatorSvg;\n","import React, { FC } from 'react';\nimport { ISvgIcon } from 'types';\n\nconst InputDatePickerSuffixSvg: FC<ISvgIcon> = ({\n  width = '24',\n  height = '24',\n  fill = 'white',\n  className = '',\n}) => {\n  return (\n    <svg\n      width={width}\n      height={height}\n      viewBox=\"0 0 24 24\"\n      fill={fill}\n      className={className}\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M17.1138 3.89648C17.1138 3.3442 16.6661 2.89648 16.1138 2.89648C15.5615 2.89648 15.1138 3.3442 15.1138 3.89648L15.1138 6.89648C15.1138 7.44877 15.5615 7.89648 16.1138 7.89648C16.6661 7.89648 17.1138 7.44877 17.1138 6.89648L17.1138 3.89648Z\"\n        fill={fill}\n      />\n      <path\n        d=\"M9.11377 3.89649C9.11377 3.3442 8.66605 2.89649 8.11377 2.89649C7.56148 2.89649 7.11377 3.3442 7.11377 3.89649L7.11377 6.89648C7.11377 7.44877 7.56148 7.89648 8.11377 7.89648C8.66605 7.89648 9.11377 7.44877 9.11377 6.89648L9.11377 3.89649Z\"\n        fill={fill}\n      />\n      <path\n        d=\"M14.1138 4.83252H10.1138L10.1138 6.83252C10.1138 7.93709 9.21834 8.83252 8.11377 8.83252C7.0092 8.83252 6.11377 7.93709 6.11377 6.83252L6.11377 4.92088C5.272 5.02253 4.72327 5.24112 4.25319 5.7112C3.46284 6.50155 3.38339 7.72516 3.3754 10.0215H20.6253C20.6252 7.26179 20.6167 6.58131 19.7466 5.7112C19.2973 5.26191 18.8357 5.04235 18.1138 4.93506L18.1138 6.83252C18.1138 7.93709 17.2183 8.83252 16.1138 8.83252C15.0092 8.83252 14.1138 7.93709 14.1138 6.83252L14.1138 4.83252Z\"\n        fill={fill}\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M20.6253 11.7715H3.37451V15.1036C3.37451 17.932 3.37451 19.3462 4.25319 20.2249C5.13187 21.1036 6.28538 21.1036 9.11381 21.1036H15.1138C17.9422 21.1036 18.8679 21.1036 19.7466 20.2249C20.6253 19.3462 20.6253 17.932 20.6253 15.1036V11.7715ZM6.62451 14.459C6.62451 14.1483 6.87635 13.8965 7.18701 13.8965H8.31201C8.62267 13.8965 8.87451 14.1483 8.87451 14.459V15.584C8.87451 15.8946 8.62267 16.1465 8.31201 16.1465H7.18701C6.87635 16.1465 6.62451 15.8946 6.62451 15.584V14.459ZM11.1245 14.459C11.1245 14.1483 11.3764 13.8965 11.687 13.8965H12.812C13.1227 13.8965 13.3745 14.1483 13.3745 14.459V15.584C13.3745 15.8946 13.1227 16.1465 12.812 16.1465H11.687C11.3764 16.1465 11.1245 15.8946 11.1245 15.584V14.459ZM16.187 13.8965C15.8764 13.8965 15.6245 14.1483 15.6245 14.459V15.584C15.6245 15.8946 15.8764 16.1465 16.187 16.1465H17.312C17.6227 16.1465 17.8745 15.8946 17.8745 15.584V14.459C17.8745 14.1483 17.6227 13.8965 17.312 13.8965H16.187Z\"\n        fill={fill}\n      />\n    </svg>\n  );\n};\n\nexport default InputDatePickerSuffixSvg;\n","import { DatePicker } from \"antd\";\nimport { RangePickerProps } from \"antd/es/date-picker\";\nimport React, { FC } from \"react\";\nimport InputClearSvg from \"svgs/InputClearSvg\";\nimport InputDatePickerSeperatorSvg from \"svgs/InputDatePickerSeperatorSvg\";\nimport InputDatePickerSuffixSvg from \"svgs/InputDatePickerSuffixSvg\";\nimport { twMerge } from \"tailwind-merge\";\nimport \"./CustomRangePickerV2.scss\";\n\nconst dateFormat = \"DD/MM/YYYY\";\n\ninterface CustomRangePickerV2Props {\n  placeholder: [string, string];\n  fullWidth?: boolean;\n  className?: string;\n}\n\nconst CustomRangePickerV2: FC<CustomRangePickerV2Props> = ({\n  placeholder,\n  fullWidth = false,\n  className,\n}) => {\n  const { RangePicker } = DatePicker;\n\n  const onChange: RangePickerProps[\"onChange\"] = (date, dateString) => {\n    console.log(date, dateString);\n  };\n\n  return (\n    <div\n      className={twMerge(`relative`, `${fullWidth} ? \"w-full\" : \"\"`, className)}\n    >\n      <RangePicker\n        className=\"custom-range-picker border-input-ink\"\n        popupClassName=\"popuptest\"\n        dropdownClassName=\"dropdowntest\"\n        format={dateFormat}\n        onChange={onChange}\n        placeholder={placeholder}\n        separator={<InputDatePickerSeperatorSvg />}\n        // <img src={images.input.date_picker_arrow} alt=\"BotLambotrade\" />\n        placement=\"bottomLeft\"\n        suffixIcon={<InputDatePickerSuffixSvg className=\"text-ink-100\" />}\n        clearIcon={<InputClearSvg className=\"text-ink-60\" />}\n      />\n    </div>\n  );\n};\n\nexport default CustomRangePickerV2;\n","import { Cancel } from '@mui/icons-material';\nimport { TextField } from '@mui/material';\nimport React, { FC, forwardRef, useRef, useState } from 'react';\nimport { boolean } from 'yup';\nimport { isDisabled } from '@testing-library/user-event/dist/utils';\nimport CurrencyInput, { CurrencyInputProps } from 'react-currency-input-field';\nimport { CurrencyInputOnChangeValues } from 'react-currency-input-field/dist/components/CurrencyInputProps';\nimport Select, {\n  components,\n  ActionMeta,\n  GroupBase,\n  OptionsOrGroups,\n  SingleValue,\n  StylesConfig,\n  ContainerProps,\n  InputProps,\n  Props,\n  IndicatorSeparatorProps,\n  IndicatorsContainerProps,\n  MenuListProps,\n  OptionProps,\n  SingleValueProps,\n} from 'react-select';\nimport Control, {\n  ControlProps,\n} from 'react-select/dist/declarations/src/components/Control';\nimport images from 'assets';\nimport TextInput from 'components/TextInput';\nimport InputSelectOption from 'types/InputSelectOption';\n\ninterface SelectInputProps {\n  id?: string;\n  name: string;\n  label?: React.ReactNode;\n  isLabelOutside?: boolean;\n  placeholder?: string;\n  value: InputSelectOption | null;\n  options:\n    | OptionsOrGroups<InputSelectOption, GroupBase<InputSelectOption>>\n    | undefined;\n  defaultValue?: InputSelectOption;\n  isSelectDisabled?: boolean;\n  error?: boolean;\n  helperText?: React.ReactNode;\n  helperTextEnd?: React.ReactNode;\n  fullWidth?: boolean;\n  searchIcon?: string;\n  symbol?: string;\n  icon?: string | undefined;\n  button?: React.ReactNode;\n  containerClassName?: string;\n  selectContainerClassName?: string;\n  inputClassName?: string;\n  indicatorContainerClassName?: string;\n  indicatorContainerIconClassName?: string;\n  symbolClassName?: string;\n  helperClassName?: string;\n  helperTextClassName?: string;\n  helperTextEndClassName?: string;\n  menuPortalClassName?: string;\n  resetValue?: () => void;\n  onChange?:\n    | ((\n        newValue: SingleValue<InputSelectOption>,\n        actionMeta: ActionMeta<InputSelectOption>\n      ) => void)\n    | undefined;\n  onBlur?: React.FocusEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n  onFocus?: React.FocusEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n  onKeyDown?: React.KeyboardEventHandler<\n    HTMLTextAreaElement | HTMLInputElement\n  >;\n  onKeyUp?: React.KeyboardEventHandler<HTMLTextAreaElement | HTMLInputElement>;\n  onMouseOver?: React.MouseEventHandler<HTMLTextAreaElement | HTMLInputElement>;\n  onMouseLeave?: React.MouseEventHandler<\n    HTMLTextAreaElement | HTMLInputElement\n  >;\n  // REF\n  menuRef?: React.RefObject<HTMLDivElement>;\n}\n\nconst selectStyles: StylesConfig<InputSelectOption> = {\n  control: (styles) => ({\n    ...styles,\n  }),\n};\n\nexport interface ColourOption {\n  readonly value: string;\n  readonly label: string;\n}\n\nexport const IndicatorsContainer = (\n  props: IndicatorsContainerProps<InputSelectOption, false>\n) => {\n  // @ts-ignore\n  const { indicatorContainerClassName, indicatorContainerIconClassName } =\n    props.selectProps;\n  return (\n    <components.IndicatorsContainer\n      className={`absolute right-3 top-[50%] translate-y-[-50%] ${indicatorContainerClassName}`}\n      {...props}\n    >\n      <img\n        className={`w-[1.5rem] ${indicatorContainerIconClassName}`}\n        src={images.input.dropdown}\n        alt=\"Legend Ground\"\n      />\n    </components.IndicatorsContainer>\n  );\n};\n\nconst IndicatorSeparator = ({\n  innerProps,\n}: IndicatorSeparatorProps<InputSelectOption, false>) => {\n  // return <span style={indicatorSeparatorStyle} {...innerProps} />;\n  return <></>;\n};\n\nconst MenuList = (props: MenuListProps<InputSelectOption, false>) => {\n  // @ts-ignore\n  // prettier-ignore\n  const { searchInputIcon, searchInput, searchInputName, searchInputPlaceHolder, \n    // @ts-ignore\n    searchInputSymbol, searchInputResetValue, searchInputError, searchInputHelperText } = props.selectProps;\n\n  return (\n    <components.MenuList {...props}>\n      {searchInput && (\n        <TextInput\n          searchIcon={searchInputIcon}\n          name={searchInputName}\n          value={searchInput}\n          placeholder={searchInputPlaceHolder}\n          symbol={searchInputSymbol}\n          resetValue={searchInputResetValue}\n          error={searchInputError}\n          helperText={searchInputHelperText}\n          type=\"search\"\n        />\n      )}\n      {props.children}\n      {/* <div className=\"max-h-[39.5rem] overflow-y-auto\"></div> */}\n    </components.MenuList>\n  );\n};\n\nconst Option = (props: OptionProps<InputSelectOption>) => {\n  // const { value, options, isOptionSelected } = props.selectProps;\n  const { isSelected, data, selectOption } = props;\n  const optionRef = useRef<HTMLDivElement | null>(null);\n  // console.log('isSelected', isSelected);\n  // console.log('data', data);\n  return (\n    <components.Option\n      {...props}\n      className={`!px-4 w-fit border-select-input-two select-input-hover ${\n        isSelected ? 'bg-primary-05 !bg-inherit' : ''\n      } !cursor-pointer`}\n    >\n      <div\n        className=\"py-4 flex items-center justify-between\"\n      >\n        <p\n          className={`${\n            isSelected\n              ? 'bg-primary-100 !bg-clip-text !text-transparent'\n              : 'text-ink-100'\n          }`}\n        >\n          {props.children}\n        </p>\n        {isSelected && (\n          <img\n            className=\"w-[1.5rem]\"\n            src={images.input.gold_checkbox}\n            alt=\"BotLambotrade\"\n          />\n        )}\n      </div>\n    </components.Option>\n  );\n};\n\nconst SelectInput: FC<SelectInputProps> = forwardRef(\n  (\n    {\n      id,\n      name,\n      label,\n      isLabelOutside = false,\n      placeholder,\n      value,\n      error,\n      helperText,\n      helperTextEnd,\n      fullWidth,\n      options,\n      defaultValue,\n      searchIcon,\n      symbol,\n      icon,\n      button,\n      isSelectDisabled,\n      containerClassName = '',\n      selectContainerClassName = '',\n      inputClassName = '',\n      indicatorContainerClassName = '',\n      indicatorContainerIconClassName = '',\n      symbolClassName = '',\n      helperClassName = '',\n      helperTextClassName = '',\n      helperTextEndClassName = '',\n      menuPortalClassName = '',\n      resetValue,\n      onChange,\n      onBlur,\n      onFocus,\n      onKeyDown,\n      onKeyUp,\n      onMouseOver,\n      onMouseLeave,\n      menuRef,\n    },\n    ref\n  ) => {\n    const [isSelectFocus, setIsSelectFocus] = useState(false);\n    const [isSelectHover, setIsSelectHover] = useState(false);\n    const [isPasswordShowing, setIsPasswordShowing] = useState(false);\n    const inputRef = useRef<HTMLInputElement>(null);\n    // const [isClickingInside, setIsClickingInside] = useState(false);\n\n    const passwordType = isPasswordShowing ? 'text' : 'password';\n    const handlePasswordShown = () => {\n      // @ts-ignore\n      inputRef.current?.focus();\n      setIsPasswordShowing((prev) => !prev);\n    };\n\n    const inputSpacingWithLabel = label\n      ? 'pt-[1.625rem] pb-[0.375rem]'\n      : 'py-3';\n\n    return (\n      <div\n        className={`relative ${\n          fullWidth ? 'w-full' : ''\n        } ${containerClassName} ${\n          isSelectDisabled ? 'cursor-not-allowed' : ''\n        }`}\n      >\n        {!!label && !isLabelOutside && (\n          <label\n            className={`cubic-bezier absolute left-0 top-0  ${\n              icon || button ? 'w-[85%]' : 'w-[70%]'\n            } overflow-hidden text-ellipsis whitespace-nowrap ${\n              !isSelectFocus && !value && value !== 0\n                ? 'pl-3 pr-3 py-4 text-base text-ink-40'\n                : 'pl-3 pr-3 py-[0.375rem] text-xs text-ink-60'\n            }`}\n            onClick={() => {\n              inputRef.current?.focus();\n            }}\n          >\n            {label}\n          </label>\n        )}\n        <div\n          onMouseOver={() => {\n            setIsSelectHover(true);\n          }}\n          onMouseLeave={() => {\n            setIsSelectHover(false);\n          }}\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n        >\n          <Select\n            // defaultValue={value}\n            value={value}\n            id={id}\n            name={name}\n            options={options}\n            // @ts-ignore\n            ref={inputRef}\n            menuPortalTarget={document.body}\n            indicatorContainerClassName={indicatorContainerClassName}\n            indicatorContainerIconClassName={indicatorContainerIconClassName}\n            menuPlacement=\"auto\"\n            // menuPosition=\"fixed\"\n            // menuIsOpen={true}\n            classNames={{\n              container: (state) => {\n                return `relative ${selectContainerClassName}`;\n              },\n              control: (state) => {\n                return `${inputSpacingWithLabel} relative w-full !overflow-hidden !text-ellipsis !whitespace-nowrap !bg-transparent !caret-yellow-500 !focus:outline-none ${\n                  !searchIcon ? '!pl-3 !pr-[2.875rem]' : '!pl-8 !pr-[2.875rem]'\n                } !rounded-xl ${\n                  isSelectDisabled\n                    ? 'border-input-ink !bg-ink-10'\n                    : error\n                    ? 'border-input-red'\n                    : isSelectFocus || isSelectHover\n                    ? 'border-primary'\n                    : 'border-input-ink'\n                } !border-0 !shadow-none ${inputClassName} !cursor-pointer`;\n                // return `${inputSpacingWithLabel} w-full overflow-hidden text-ellipsis whitespace-nowrap !bg-transparent caret-input focus:outline-none ${\n                //   !isSelectDisabled && !value && label\n                //     ? 'placeholder-transparent'\n                //     : 'placeholder-ink-20'\n                // } ${inputClassName}`;\n              },\n              valueContainer: (state) => {\n                return `!p-0`;\n              },\n              singleValue: (state) => {\n                return `!m-0 !text-ink-100`;\n              },\n              placeholder: (state) => {\n                return `!m-0 ${\n                  !isSelectFocus && !value && label && !isLabelOutside\n                    ? '!text-transparent'\n                    : '!text-ink-20'\n                }`;\n              },\n              menu: (state) => {\n                return `my-2 py-4 !overflow-hidden !rounded-2xl !bg-dropdown shadow-popup `;\n              },\n              menuList: (state) => {\n                return `!p-0`;\n              },\n              menuPortal: (state) => {\n                return `!z-[20000] ${menuPortalClassName}`;\n              },\n            }}\n            unstyled\n            isOptionSelected={(option, options) => {\n              return options[0]?.value === option?.value;\n            }}\n            components={{\n              IndicatorSeparator,\n              IndicatorsContainer,\n              MenuList,\n              Option,\n            }}\n            openMenuOnFocus={true}\n            onChange={(option, actionMeta) => {\n              if (onChange) {\n                onChange(option, actionMeta);\n              }\n              setIsSelectFocus(false);\n              setIsSelectHover(false);\n            }}\n            onBlur={(e) => {\n              if (onBlur) {\n                onBlur(e);\n              }\n              setIsSelectFocus(false);\n            }}\n            onFocus={(e) => {\n              if (onFocus) {\n                onFocus(e);\n              }\n              setIsSelectFocus(true);\n            }}\n            isSearchable={false}\n            isDisabled={isSelectDisabled}\n          />\n        </div>\n        {/* <div\n        className={`relative ${\n          fullWidth ? 'w-full' : ''\n        } ${containerClassName}`}\n      >\n        {!!label && (\n          <label\n            className={`cubic-bezier -z-10 absolute left-0 top-0 w-[70%] overflow-hidden text-ellipsis whitespace-nowrap ${\n              !isInputFocus && !value && value !== 0\n                ? 'px-3 py-4 text-base text-ink-40'\n                : 'px-3 py-[0.375rem] text-xs text-ink-60'\n            }`}\n          >\n            {label}\n          </label>\n        )}\n\n        <div\n          className={`px-3 flex justify-between items-center gap-x-3 rounded-xl ${\n            isSelectDisabled\n              ? 'border-input-ink bg-ink-10'\n              : error\n              ? 'border-input-red'\n              : isInputFocus\n              ? 'border-primary'\n              : 'border-input-ink'\n          } `}\n        ></div>\n      </div> */}\n        {(!!helperText || !!helperTextEnd) && (\n          <div className={`px-3 pt-2 flex justify-between ${helperClassName}`}>\n            <p\n              className={`${\n                isSelectDisabled\n                  ? 'text-ink-80'\n                  : error\n                  ? 'text-red-100'\n                  : 'text-ink-80'\n              } text-sm ${helperTextClassName}`}\n            >\n              {helperText}\n            </p>\n            <p className={`text-ink-100 text-sm ${helperTextEndClassName}`}>\n              {helperTextEnd}\n            </p>\n          </div>\n        )}\n      </div>\n    );\n  }\n);\n\nexport default SelectInput;\n","import { Cancel } from '@mui/icons-material';\nimport { TextField } from '@mui/material';\nimport React, { FC, useRef, useState } from 'react';\nimport { boolean } from 'yup';\nimport { isDisabled } from '@testing-library/user-event/dist/utils';\nimport CurrencyInput, { CurrencyInputProps } from 'react-currency-input-field';\nimport { CurrencyInputOnChangeValues } from 'react-currency-input-field/dist/components/CurrencyInputProps';\n\ninterface TextInputProps {\n  id?: string;\n  name: string;\n  label?: React.ReactNode;\n  isLabelOutside?: boolean;\n  type: React.InputHTMLAttributes<unknown>['type'];\n  placeholder?: string;\n  prefix?: string;\n  value: string | number | readonly string[] | undefined;\n  error?: boolean;\n  isInputDisabled?: boolean;\n  helperText?: React.ReactNode;\n  helperTextEnd?: React.ReactNode;\n  decimalsLimit?: number;\n  decimalScale?: number;\n  fixedDecimalLength?: number;\n  fullWidth?: boolean;\n  searchIcon?: string;\n  symbol?: string;\n  autoComplete?: boolean;\n  icon?: string | undefined;\n  button?: React.ReactNode;\n  searchIconClassName?: string;\n  containerClassName?: string;\n  inputClassName?: string;\n  symbolClassName?: string;\n  helperClassName?: string;\n  helperTextClassName?: string;\n  helperTextEndClassName?: string;\n  resetValue?: () => void;\n  onChange?: React.ChangeEventHandler<HTMLTextAreaElement | HTMLInputElement>;\n  onValueChange?:\n  | ((\n    value: string | undefined,\n    name?: string | undefined,\n    values?: CurrencyInputOnChangeValues | undefined\n  ) => void)\n  | undefined;\n  onBlur?: React.FocusEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n  onFocus?: React.FocusEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n  onKeyDown?: React.KeyboardEventHandler<\n    HTMLTextAreaElement | HTMLInputElement\n  >;\n  onKeyUp?: React.KeyboardEventHandler<HTMLTextAreaElement | HTMLInputElement>;\n  onMouseOver?: React.MouseEventHandler<HTMLTextAreaElement | HTMLInputElement>;\n  onMouseLeave?: React.MouseEventHandler<\n    HTMLTextAreaElement | HTMLInputElement\n  >;\n}\n\nconst TextInput: FC<TextInputProps> = ({\n  id,\n  name,\n  label,\n  isLabelOutside = false,\n  placeholder,\n  prefix,\n  type = 'text',\n  value,\n  error,\n  helperText,\n  helperTextEnd,\n  decimalsLimit = 3,\n  decimalScale,\n  fixedDecimalLength,\n  fullWidth,\n  searchIcon,\n  symbol,\n  icon,\n  autoComplete,\n  button,\n  isInputDisabled,\n  searchIconClassName = '',\n  containerClassName = '',\n  inputClassName = '',\n  symbolClassName = '',\n  helperClassName = '',\n  helperTextClassName = '',\n  helperTextEndClassName = '',\n  resetValue,\n  onChange,\n  onValueChange,\n  onBlur,\n  onFocus,\n  onKeyDown,\n  onKeyUp,\n  onMouseOver,\n  onMouseLeave,\n}) => {\n  const [isInputFocus, setInputFocus] = useState(false);\n  const [isInputHover, setIsInputHover] = useState(false);\n  const [isPasswordShowing, setIsPasswordShowing] = useState(false);\n  const inputRef = useRef<HTMLInputElement | null>(null);\n  // const [isClickingInside, setIsClickingInside] = useState(false);\n\n  const passwordType = isPasswordShowing ? 'text' : 'password';\n  const handlePasswordShown = () => {\n    inputRef.current?.focus();\n    setIsPasswordShowing((prev) => !prev);\n  };\n\n  const inputSpacingWithLabel =\n    label && !isLabelOutside ? 'pt-[1.625rem] pb-[0.375rem]' : 'py-4';\n\n  return (\n    <div\n      className={`relative ${fullWidth ? 'w-full' : ''} ${containerClassName}`}\n    >\n      {!!label && isLabelOutside && (\n        <div className={`mb-2 cubic-bezier ssss`}>\n          <label\n            className={`overflow-hidden text-ellipsis whitespace-nowrap small-caps`}\n            onClick={() => {\n              inputRef.current?.focus();\n            }}\n          >\n            {label}\n          </label>\n        </div>\n      )}\n      {!!label && !isLabelOutside && (\n        <label\n          className={`cubic-bezier absolute left-0 top-0  ${icon || button ? 'w-[85%]' : 'w-[70%]'\n            } overflow-hidden text-ellipsis whitespace-nowrap ${!isInputFocus && !value\n              ? 'pl-3 pr-3 py-4 text-base text-ink-40'\n              : 'pl-3 pr-3 py-[0.375rem] text-xs text-ink-60'\n            }`}\n          onClick={() => {\n            inputRef.current?.focus();\n          }}\n        >\n          {label}\n        </label>\n      )}\n      {!!searchIcon && (\n        <div className=\"absolute left-3 top-[50%] translate-y-[-50%]\">\n          <img className={`w-[1.5rem] ${searchIconClassName}`} src={searchIcon} alt=\"BotLambotrade\" />\n        </div>\n      )}\n\n      <div\n        className={`${!searchIcon ? 'pl-3 pr-3' : 'pl-10 pr-3'\n          } flex justify-between items-center gap-x-3 rounded-xl ${isInputDisabled\n            ? 'border-input-ink bg-ink-10'\n            : error\n              ? 'border-input-red'\n              : isInputFocus || isInputHover\n                ? 'border-primary'\n                : 'border-input-ink'\n          }`}\n      >\n        <div className=\"relative z-10 flex-grow flex justify-between items-center\">\n          {type === 'number' && (\n            <CurrencyInput\n              id={id}\n              name={name}\n              autoComplete={autoComplete === true ? 'new-password' : ''}\n              className={`${inputSpacingWithLabel} w-full overflow-hidden text-ellipsis whitespace-nowrap bg-transparent caret-yellow-500 focus:outline-none ${!isInputFocus && !value && label && !isLabelOutside\n                  ? 'placeholder-transparent'\n                  : 'placeholder-ink-20'\n                } ${inputClassName}`}\n              value={value}\n              placeholder={placeholder}\n              onChange={onChange}\n              onValueChange={(value, _, values) => {\n                if (onValueChange) {\n                  onValueChange(value, _, values);\n                }\n              }}\n              onBlur={(e) => {\n                if (onBlur) {\n                  onBlur(e);\n                }\n                setInputFocus(false);\n              }}\n              onFocus={(e) => {\n                if (onFocus) {\n                  onFocus(e);\n                }\n                setInputFocus(true);\n              }}\n              onKeyDown={onKeyDown}\n              onKeyUp={onKeyUp}\n              onMouseOver={(e) => {\n                if (onMouseOver) {\n                  onMouseOver(e);\n                }\n                setIsInputHover(true);\n              }}\n              onMouseLeave={(e) => {\n                if (onMouseLeave) {\n                  onMouseLeave(e);\n                }\n                setIsInputHover(false);\n              }}\n              prefix={prefix}\n              disabled={isInputDisabled}\n              allowNegativeValue={false}\n              decimalsLimit={decimalsLimit}\n              decimalScale={decimalScale}\n              fixedDecimalLength={fixedDecimalLength}\n              disableAbbreviations={true}\n              decimalSeparator=\".\"\n              groupSeparator=\",\"\n              maxLength={13}\n              // intlConfig={{ locale: 'en-US', currency: 'USD' }}\n              ref={inputRef}\n            />\n          )}\n          {type !== 'number' && (\n            <input\n              id={id}\n              name={name}\n              autoComplete={autoComplete === true ? 'new-password' : ''}\n              className={`${inputSpacingWithLabel} w-full overflow-hidden text-ellipsis whitespace-nowrap bg-transparent caret-input focus:outline-none ${!isInputFocus && !value && label && !isLabelOutside\n                  ? 'placeholder-transparent'\n                  : 'placeholder-ink-20'\n                } ${inputClassName}`}\n              type={type === 'password' ? passwordType : type}\n              value={value}\n              placeholder={placeholder}\n              onChange={onChange}\n              onBlur={(e) => {\n                if (onBlur) {\n                  onBlur(e);\n                }\n                setInputFocus(false);\n              }}\n              onFocus={(e) => {\n                if (onFocus) {\n                  onFocus(e);\n                }\n                setInputFocus(true);\n              }}\n              onKeyDown={onKeyDown}\n              onKeyUp={onKeyUp}\n              onMouseOver={(e) => {\n                if (onMouseOver) {\n                  onMouseOver(e);\n                }\n                setIsInputHover(true);\n              }}\n              onMouseLeave={(e) => {\n                if (onMouseLeave) {\n                  onMouseLeave(e);\n                }\n                setIsInputHover(false);\n              }}\n              disabled={isInputDisabled}\n              ref={inputRef}\n            />\n          )}\n\n          {symbol && (\n            <span className={`${inputSpacingWithLabel} ${symbolClassName}`}>\n              {symbol}\n            </span>\n          )}\n        </div>\n\n        {((!!value && resetValue) || !!icon || !!button) && (\n          <div className=\"z-10 flex justify-end items-center gap-x-[1.25rem]\">\n            {!!value && resetValue && (\n              <div\n                className={`${button || icon ? 'input-icon-seperator' : ''} ${isInputFocus || isInputHover ? 'opacity-100' : 'opacity-50'\n                  }`}\n                onClick={(e) => {\n                  if (resetValue) {\n                    resetValue();\n                    inputRef.current?.focus();\n                  }\n                }}\n              >\n                <Cancel className=\"w-[1.5rem] !fill-ink-60 cursor-pointer\" />\n              </div>\n            )}\n            {!!icon && (\n              <div className={`${button ? 'input-icon-seperator' : ''}`}>\n                <img\n                  className={`w-[1.5rem] cursor-pointer`}\n                  src={icon}\n                  alt=\"BotLambotrade\"\n                  onClick={handlePasswordShown}\n                />\n              </div>\n            )}\n            {!!button && <div className=\"py-[0.375rem]\">{button}</div>}\n          </div>\n        )}\n      </div>\n      {(!!helperText || !!helperTextEnd) && (\n        <div className={`px-3 pt-2 flex justify-between ${helperClassName}`}>\n          <p\n            className={`${isInputDisabled\n                ? 'text-ink-80'\n                : error\n                  ? 'text-red-100'\n                  : 'text-ink-80'\n              } text-sm ${helperTextClassName}`}\n          >\n            {helperText}\n          </p>\n          <p className={`text-ink-100 text-sm ${helperTextEndClassName}`}>\n            {helperTextEnd}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TextInput;\n","import React, { FC } from 'react';\nimport { SnackbarContent, SnackbarKey, SnackbarMessage } from 'notistack';\nimport images from 'assets';\nimport { Cancel } from '@mui/icons-material';\n\nconst ICONS = {\n  success: images.toast.check,\n  warning: images.toast.warning,\n  error: images.toast.error,\n};\n\nconst TEXT_COLORS = {\n  success: 'text-green-100',\n  warning: 'text-yellow-100',\n  error: 'text-red-100',\n};\n\nconst TITLES = {\n  success: 'Thành công',\n  warning: 'Cảnh báo',\n  error: 'Thất bại',\n};\n\ninterface CustomSnackbarProps {\n  id: SnackbarKey;\n  message: SnackbarMessage;\n  variant?: 'success' | 'error' | 'warning';\n  closeSnackBar: () => void;\n}\n\nconst CustomSnackbar = React.forwardRef<HTMLDivElement, CustomSnackbarProps>(\n  ({ id, message, variant, closeSnackBar }, ref) => {\n    return (\n      <>\n        <div\n          className={`flex items-center justify-between gap-x-3 p-4 rounded-3xl w-[full] md:w-[25rem] transition-all bg-dropdown toast-in-right`}\n          key={id}\n          ref={ref}\n        >\n          <div className=\"flex items-center justify-between gap-x-3\">\n            <div className=\"flex-shrink-0 p-[0.625rem] rounded-2xl bg-ink-05\">\n              <img\n                className=\"w-8\"\n                src={variant && ICONS[variant]}\n                alt=\"BotLambotrade\"\n              />\n            </div>\n            <div>\n              <p\n                className={`mb-1 font-bold ${variant && TEXT_COLORS[variant]}`}\n              >\n                {variant && TITLES[variant]}\n              </p>\n              <p className=\"text-ink-80 text-sm\">{message}</p>\n            </div>\n          </div>\n          <button onClick={closeSnackBar}>\n            <Cancel className=\"fill-ink-100\" />\n          </button>\n        </div>\n      </>\n    );\n  }\n);\n\nexport default CustomSnackbar;\n","import CustomSnackbar from 'components/CustomSnackbar';\nimport { OptionsObject, useSnackbar } from 'notistack';\nimport { useCallback } from 'react';\n\nexport const useEnqueueSnackbar = () => {\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  const pushSnackbar = useCallback(\n    (\n      message: string,\n      // extend the default options object\n      options?: OptionsObject &\n        Partial<{ variant: 'success' | 'error' | 'warning' }>\n    ) => {\n      enqueueSnackbar(message, {\n        ...options,\n        content: (key) => {\n          // destructure the options we need from the extended options\n          // object, and provide a default case if we didn't provide any\n          const { variant } = options || { variant: undefined };\n          const handleCloseSnackbar = () => {\n            closeSnackbar(key);\n          };\n          return (\n            <CustomSnackbar\n              id={`${key}`}\n              message={message}\n              variant={variant || 'success'}\n              closeSnackBar={handleCloseSnackbar}\n            />\n          );\n        },\n      });\n    },\n    [closeSnackbar, enqueueSnackbar]\n  );\n\n  return pushSnackbar;\n};\n","import APIs from \"apis\";\nimport axios from \"axios\";\nimport CustomRangePickerV2 from \"components/CustomDatePickerV2\";\nimport SelectInput from \"components/SelectInput\";\nimport dayjs from \"dayjs\";\nimport * as Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport { useEnqueueSnackbar } from \"hooks/useEnqueueSnackbar\";\nimport random from \"lodash/random\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { ActionMeta, SingleValue } from \"react-select\";\nimport BotData from \"types/BotData\";\nimport InputSelectOption from \"types/InputSelectOption\";\n\nconst METHOD_OWN_TYPES: InputSelectOption[] = [\n  { value: \"all\", label: \"Tất cả tài khoản giao dịch\" },\n  { value: \"bot_trade_123\", label: \"Bot Trade 123\" },\n  { value: \"bot_trade_1234\", label: \"Bot Trade 1234\" },\n];\n\n// const generateRandomData = () => {\n//   const data = [];\n//   for (let i = 1; i <= 10; i++) {\n//     const randomProfit = random(1000, 100000); // Random value between 0 and 100000\n//     data.push({ x: i, y: randomProfit });\n//   }\n//   return data;\n// };\n\nconst generateRandomData = ():\n  | Highcharts.SeriesAreasplineOptions[]\n  | undefined => [\n  {\n    id: \"bot_trade_123\",\n    name: \"Bot Trade 123\",\n    data: Array(20)\n      .fill(0)\n      .reduce((acc: any[], _, idx) => {\n        acc.push([\n          dayjs().add(idx, \"day\").valueOf(),\n          idx === 0 ? 0 : random(55000, 100000),\n        ]);\n        return acc;\n      }, []),\n    type: \"areaspline\",\n    color: \"#34C759\",\n    lineWidth: 4,\n    fillColor: {\n      linearGradient: { x1: 0, x2: 0, y1: 0, y2: 1 },\n      stops: [\n        [0, \"rgba(52, 199, 89, 0.4)\"], // Start color (at 0%)\n        [1, \"rgba(52, 199, 89, 0)\"], // End color (at 100%)\n      ],\n    },\n  },\n  {\n    id: \"bot_trade_1234\",\n    name: \"Bot Trade 1234\",\n    data: Array(20)\n      .fill(0)\n      .reduce((acc: any[], _, idx) => {\n        acc.push([\n          dayjs().add(idx, \"day\").valueOf(),\n          idx === 0 ? 0 : random(1000, 50000),\n        ]);\n        return acc;\n      }, []),\n    type: \"areaspline\",\n    lineWidth: 4,\n    color: \"#FF9500\",\n    fillColor: {\n      linearGradient: { x1: 0, x2: 0, y1: 0, y2: 1 },\n      stops: [\n        [0, \"rgba(255, 149, 0, 0.4)\"], // Start color (at 0%)\n        [1, \"rgba(255, 149, 0, 0)\"], // End color (at 100%)\n      ],\n    },\n  },\n];\n\nconst Statistic = () => {\n  const chartComponentRef = useRef<HighchartsReact.RefObject>(null);\n  const [partnerBotDatas, setPartnerBotDatas] = useState<BotData[]>([]);\n  const [chartData, setChartData] = useState(generateRandomData());\n  const [selectedPartnerBot, setSelectedPartnerBot] =\n    useState<InputSelectOption>(METHOD_OWN_TYPES[0]);\n\n  const enqueueSnackbar = useEnqueueSnackbar();\n\n  // RESPONSIVE\n  const isDesktop = useMediaQuery({\n    query: \"(min-width: 1224px)\",\n  });\n  const isTablet = useMediaQuery({\n    query: \"(min-width: 768px)\",\n  });\n  const isMobile = useMediaQuery({\n    query: \"(max-width: 767px)\",\n  });\n\n  const series = chartData?.reduce((acc: any[], data) => {\n    if (selectedPartnerBot.value === \"all\") {\n      acc.push(data);\n    } else if (\n      selectedPartnerBot.value === \"bot_trade_123\" &&\n      data.id === \"bot_trade_123\"\n    ) {\n      acc.push(data);\n    } else if (\n      selectedPartnerBot.value === \"bot_trade_1234\" &&\n      data.id === \"bot_trade_1234\"\n    ) {\n      acc.push(data);\n    }\n\n    return acc;\n  }, []);\n\n  const options: Highcharts.Options = {\n    title: {\n      text: \"\",\n    },\n    chart: {\n      type: \"areaspline\",\n      backgroundColor: \"#1d1b18\",\n      height: 768,\n    },\n    legend: {\n      // layout: \"vertical\",\n      // align: \"left\",\n      // verticalAlign: \"top\",\n      // x: 120,\n      // y: 70,\n      // floating: true,\n      // borderWidth: 1,\n      // backgroundColor: \"#FFFFFF\",\n      enabled: false,\n    },\n    xAxis: {\n      type: \"datetime\",\n      visible: true,\n      labels: {\n        format: \"{value:%b %e}\", // Format the x-axis labels (e.g., Jan 1)\n      },\n    },\n    yAxis: {\n      title: {\n        text: \"\",\n      },\n      labels: {\n        enabled: true, // Hide X-axis labels\n        style: {\n          color: \"#fff\",\n          fontSize: \"14\",\n        },\n      },\n      min: 0,\n      gridLineColor: \"rgba(255, 255, 255, 0.1)\",\n    },\n    tooltip: {\n      // split: true,\n      // headerFormat: \"\",\n      // formatter: function (this: Highcharts.TooltipFormatterContextObject) {\n      //   console.log(\"this\", this);\n      //   const tooltipValue = `$ ${this.y}`;\n      //   const tooltipDate = Highcharts.dateFormat(\"%m/%d/%Y\", this.x as number); // Use the timestamp directly for the date\n      //   return `<div className=\"px-4 py-2 flex flex-col text-ink-100 font-semibold bg-green-100\"><p>${tooltipValue}</p><p>${tooltipDate}</p></div>`;\n      // },\n      // formatter: function (this: Highcharts.TooltipFormatterContextObject) {\n      //   const tooltipValue = `$ ${this.y}`;\n      //   const tooltipDate = Highcharts.dateFormat(\"%m/%d/%Y\", this.x as number); // Use the timestamp directly for the date\n      //   return `${tooltipValue}<br>${tooltipDate}`;\n      // },\n      // formatter: function () {\n      //   // The first returned item is the header, subsequent items are the\n      //   // points\n      //   return [\"\"].concat(\n      //     this.points\n      //       ? this.points.map(function (point) {\n      //           return (\n      //             \"$ \" +\n      //             point.y?.toLocaleString() +\n      //             \"<br/>\" +\n      //             Highcharts.dateFormat(\"%m/%d/%Y\", point.x as number)\n      //           );\n      //         })\n      //       : []\n      //   );\n      // },\n      split: true,\n      useHTML: true,\n      headerFormat: \"\",\n      pointFormat:\n        '<div class=\"px-4 py-2 flex flex-col font-semibold rounded-2xl\" style=\"color: {series.color}\"><p>${point.y}</p><p>{point.x: %m/%d/%Y}</p></div>',\n      // pointFormat: '<tr><td style=\"color: {series.color}\">{series.name} </td>' +\n      //     '<td style=\"text-align: right\"><b>{point.y} EUR</b></td></tr>',\n      backgroundColor: \"#FFFFFF\",\n      footerFormat: \"\",\n      padding: 0,\n      borderRadius: 16,\n    },\n    credits: {\n      enabled: false,\n    },\n    plotOptions: {\n      // series: {\n      //   pointStart: 0,\n      // },\n      areaspline: {\n        pointStart: 0,\n        threshold: 20,\n        fillOpacity: 0,\n        marker: {\n          enabled: true, // Display data point markers\n          symbol: \"circle\", // Use circles as the marker symbol\n          radius: 6, // Set the radius of the circles\n          lineWidth: 3, // Set the border width of the circles\n          lineColor: \"#FFFFFF\", // Disable the border color of the circles\n        },\n      },\n    },\n    series: series,\n  };\n\n  const getAllPartnerBots = useCallback(() => {\n    axios\n      .get(APIs.partnerAccount)\n      .then((res) => {\n        const datas: BotData[] = res.data;\n        const partnerBotDatas = datas.filter(\n          (data) => data.status === \"active\"\n        );\n        setPartnerBotDatas(partnerBotDatas);\n      })\n      .catch((err) => {\n        enqueueSnackbar(\"Không thể lấy bot datas!\", {\n          variant: \"error\",\n        });\n      });\n  }, [enqueueSnackbar]);\n\n  const handleSelectMethodOwnType = (\n    option: SingleValue<InputSelectOption>,\n    actionMeta: ActionMeta<InputSelectOption>\n  ) => {\n    if (option != null) {\n      setSelectedPartnerBot(option);\n    }\n  };\n\n  useEffect(() => {\n    getAllPartnerBots();\n  }, [getAllPartnerBots]);\n\n  return (\n    <>\n      <Helmet>\n        <title>BotLambotrade | Bot Trade</title>\n      </Helmet>\n      <div className=\"h-fit mb-6 bg-background-80 rounded-3xl\">\n        <div className=\"p-6 border-b border-ink-10 flex flex-col md:flex-row md:justify-between md:items-center gap-4\">\n          <h1 className=\"text-xl text-ink-100 font-semibold\">\n            Thống kê tài khoản giao dịch\n          </h1>\n        </div>\n        <div className=\"mb-6 p-6 flex flex-col gap-y-6\">\n          <div className=\"flex flex-col md:flex-row items-center gap-4\">\n            {/* TÀI KHOẢN GIAO DỊCH */}\n            <SelectInput\n              value={selectedPartnerBot}\n              onChange={handleSelectMethodOwnType}\n              fullWidth={!isDesktop && !isTablet}\n              inputClassName=\"!py-2 !pr-8 text-sm w-full md:w-[21.375rem]\"\n              indicatorContainerClassName=\"!right-3\"\n              indicatorContainerIconClassName=\"!w-[1rem]\"\n              name=\"select\"\n              options={METHOD_OWN_TYPES}\n            />\n            <CustomRangePickerV2 placeholder={[\"Từ Ngày\", \"Đến ngày\"]} />\n          </div>\n        </div>\n        <div className=\"pl-6 pb-6\">\n          <HighchartsReact\n            highcharts={Highcharts}\n            options={options}\n            ref={chartComponentRef}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Statistic;\n"],"names":["_ref","width","height","fill","fillOpacity","className","_jsx","viewBox","xmlns","children","fillRule","clipRule","d","_jsxs","placeholder","fullWidth","RangePicker","DatePicker","twMerge","concat","popupClassName","dropdownClassName","format","onChange","date","dateString","console","log","separator","InputDatePickerSeperatorSvg","placement","suffixIcon","InputDatePickerSuffixSvg","clearIcon","InputClearSvg","IndicatorsContainer","props","indicatorContainerClassName","indicatorContainerIconClassName","selectProps","components","src","images","alt","IndicatorSeparator","innerProps","_Fragment","MenuList","searchInputIcon","searchInput","searchInputName","searchInputPlaceHolder","searchInputSymbol","searchInputResetValue","searchInputError","searchInputHelperText","TextInput","searchIcon","name","value","symbol","resetValue","error","helperText","type","Option","isSelected","data","selectOption","useRef","forwardRef","_ref2","ref","id","label","isLabelOutside","helperTextEnd","options","defaultValue","icon","button","isSelectDisabled","containerClassName","selectContainerClassName","inputClassName","symbolClassName","helperClassName","helperTextClassName","helperTextEndClassName","menuPortalClassName","onBlur","onFocus","onKeyDown","onKeyUp","onMouseOver","onMouseLeave","menuRef","isSelectFocus","setIsSelectFocus","useState","isSelectHover","setIsSelectHover","isPasswordShowing","setIsPasswordShowing","inputRef","inputSpacingWithLabel","onClick","_inputRef$current2","current","focus","e","stopPropagation","Select","menuPortalTarget","document","body","menuPlacement","classNames","container","state","control","valueContainer","singleValue","menu","menuList","menuPortal","unstyled","isOptionSelected","option","_options$","openMenuOnFocus","actionMeta","isSearchable","isDisabled","prefix","decimalsLimit","decimalScale","fixedDecimalLength","autoComplete","isInputDisabled","searchIconClassName","onValueChange","isInputFocus","setInputFocus","isInputHover","setIsInputHover","passwordType","_inputRef$current3","CurrencyInput","_","values","disabled","allowNegativeValue","disableAbbreviations","decimalSeparator","groupSeparator","maxLength","_inputRef$current4","Cancel","handlePasswordShown","_inputRef$current","prev","ICONS","success","warning","TEXT_COLORS","TITLES","React","message","variant","closeSnackBar","useEnqueueSnackbar","enqueueSnackbar","closeSnackbar","useSnackbar","useCallback","content","key","undefined","CustomSnackbar","handleCloseSnackbar","METHOD_OWN_TYPES","Statistic","chartComponentRef","partnerBotDatas","setPartnerBotDatas","chartData","setChartData","Array","reduce","acc","idx","push","dayjs","add","valueOf","random","color","lineWidth","fillColor","linearGradient","x1","x2","y1","y2","stops","selectedPartnerBot","setSelectedPartnerBot","isDesktop","useMediaQuery","query","isTablet","title","text","chart","backgroundColor","legend","enabled","xAxis","visible","labels","yAxis","style","fontSize","min","gridLineColor","tooltip","split","useHTML","headerFormat","pointFormat","footerFormat","padding","borderRadius","credits","plotOptions","areaspline","pointStart","threshold","marker","radius","lineColor","series","getAllPartnerBots","axios","APIs","then","res","filter","status","catch","err","useEffect","Helmet","SelectInput","handleSelectMethodOwnType","CustomRangePickerV2","HighchartsReact","highcharts","Highcharts"],"sourceRoot":""}