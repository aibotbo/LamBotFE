{"version":3,"file":"static/js/40.a60edaee.chunk.js","mappings":"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","sources":["components/SearchInput/index.tsx","components/CustomSnackbar/index.tsx","hooks/useEnqueueSnackbar.tsx","svgs/TableRightArrowSvg.tsx","pages/Signal/SignalBot.tsx","pages/Signal/SignalBotHistory.tsx","pages/Signal/index.tsx","svgs/TableLeftArrowSvg.tsx","../node_modules/@mui/icons-material/esm/Cancel.js","../node_modules/@mui/material/utils/createSvgIcon.js"],"sourcesContent":["import React, { FC } from 'react';\n\ntype SearchInputProps = {\n  inputClassName?: string;\n  inputName: string;\n  searchInput: string;\n  setSearchInput: React.Dispatch<React.SetStateAction<string>>;\n};\n\nconst SearchInput: FC<SearchInputProps> = ({\n  inputClassName,\n  inputName,\n  searchInput,\n  setSearchInput,\n}) => {\n  return (\n    <div>\n      <label\n        htmlFor=\"default-search\"\n        className=\"mb-2 text-sm font-medium sr-only text-ink-100\"\n      >\n        Search\n      </label>\n      <div className=\"relative\">\n        <div className=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n          <svg\n            aria-hidden=\"true\"\n            className=\"w-5 h-5 text-black-opacity-100\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n            ></path>\n          </svg>\n        </div>\n        <input\n          type=\"search\"\n          id={inputName}\n          name={inputName}\n          className={`${inputClassName} block py-3 pl-9 pr-8 text-sm text-black-opacity-40 border border-ink-20 rounded-xl bg-ink-05 focus:ring-blue-500 focus:border-blue-500 placeholder-black-opacity-40 dark:focus:ring-blue-500 dark:focus:border-blue-500`}\n          placeholder=\"Tìm kiếm\"\n          value={searchInput}\n          onChange={(e) => {\n            setSearchInput(e.target.value);\n          }}\n          required\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default SearchInput;\n","import React, { FC } from 'react';\nimport { SnackbarContent, SnackbarKey, SnackbarMessage } from 'notistack';\nimport images from 'assets';\nimport { Cancel } from '@mui/icons-material';\n\nconst ICONS = {\n  success: images.toast.check,\n  warning: images.toast.warning,\n  error: images.toast.error,\n};\n\nconst TEXT_COLORS = {\n  success: 'text-green-100',\n  warning: 'text-yellow-100',\n  error: 'text-red-100',\n};\n\nconst TITLES = {\n  success: 'Thành công',\n  warning: 'Cảnh báo',\n  error: 'Thất bại',\n};\n\ninterface CustomSnackbarProps {\n  id: SnackbarKey;\n  message: SnackbarMessage;\n  variant?: 'success' | 'error' | 'warning';\n  closeSnackBar: () => void;\n}\n\nconst CustomSnackbar = React.forwardRef<HTMLDivElement, CustomSnackbarProps>(\n  ({ id, message, variant, closeSnackBar }, ref) => {\n    return (\n      <>\n        <div\n          className={`flex items-center justify-between gap-x-3 p-4 rounded-3xl w-[full] md:w-[25rem] transition-all bg-dropdown toast-in-right`}\n          key={id}\n          ref={ref}\n        >\n          <div className=\"flex items-center justify-between gap-x-3\">\n            <div className=\"flex-shrink-0 p-[0.625rem] rounded-2xl bg-ink-05\">\n              <img\n                className=\"w-8\"\n                src={variant && ICONS[variant]}\n                alt=\"BotLambotrade\"\n              />\n            </div>\n            <div>\n              <p\n                className={`mb-1 font-bold ${variant && TEXT_COLORS[variant]}`}\n              >\n                {variant && TITLES[variant]}\n              </p>\n              <p className=\"text-ink-80 text-sm\">{message}</p>\n            </div>\n          </div>\n          <button onClick={closeSnackBar}>\n            <Cancel className=\"fill-ink-100\" />\n          </button>\n        </div>\n      </>\n    );\n  }\n);\n\nexport default CustomSnackbar;\n","import CustomSnackbar from 'components/CustomSnackbar';\nimport { OptionsObject, useSnackbar } from 'notistack';\nimport { useCallback } from 'react';\n\nexport const useEnqueueSnackbar = () => {\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  const pushSnackbar = useCallback(\n    (\n      message: string,\n      // extend the default options object\n      options?: OptionsObject &\n        Partial<{ variant: 'success' | 'error' | 'warning' }>\n    ) => {\n      enqueueSnackbar(message, {\n        ...options,\n        content: (key) => {\n          // destructure the options we need from the extended options\n          // object, and provide a default case if we didn't provide any\n          const { variant } = options || { variant: undefined };\n          const handleCloseSnackbar = () => {\n            closeSnackbar(key);\n          };\n          return (\n            <CustomSnackbar\n              id={`${key}`}\n              message={message}\n              variant={variant || 'success'}\n              closeSnackBar={handleCloseSnackbar}\n            />\n          );\n        },\n      });\n    },\n    [closeSnackbar, enqueueSnackbar]\n  );\n\n  return pushSnackbar;\n};\n","import React, { FC } from 'react';\nimport { ISvgIcon } from 'types';\n\nconst TableRightArrowSvg: FC<ISvgIcon> = ({\n  width = '24',\n  height = '24',\n  fill = 'white',\n  className = '',\n}) => {\n  return (\n    <svg\n      width={width}\n      height={height}\n      viewBox=\"0 0 24 24\"\n      fill={fill}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={className}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M7.88912 4.91668C8.32217 4.50425 9.02429 4.50425 9.45734 4.91668L16.1107 11.2533C16.5438 11.6657 16.5438 12.3344 16.1107 12.7468L9.45734 19.0834C9.02429 19.4958 8.32217 19.4958 7.88912 19.0834C7.45607 18.6709 7.45607 18.0022 7.88912 17.5898L13.7584 12L7.88912 6.41023C7.45607 5.9978 7.45607 5.32911 7.88912 4.91668Z\"\n        fill={fill}\n      />\n    </svg>\n  );\n};\n\nexport default TableRightArrowSvg;\n","import React, { FC, useCallback, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Column, useTable } from 'react-table';\nimport SearchInput from 'components/SearchInput';\nimport { useMediaQuery } from 'react-responsive';\nimport APIs from 'apis';\nimport { uiActions } from 'stores/uiSlice';\nimport { useAppDispatch } from 'stores/hooks';\nimport { useEnqueueSnackbar } from 'hooks/useEnqueueSnackbar';\nimport TableRightArrowSvg from 'svgs/TableRightArrowSvg';\nimport ICurrentSession, { ISession } from 'types/ICurrentSession';\nimport BotSignal, { BotSignalResult } from 'types/BotSignal';\n\nconst BASE_RATE = 0.95;\n\ntype SignalBotProps = {\n    searchInput: string;\n    setSearchInput: React.Dispatch<React.SetStateAction<string>>;\n    toggleHistory: () => void;\n};\n\ntype SelectedIdsType = {\n    [key: string]: boolean;\n};\n\nconst randomIntFromInterval = (min: number, max: number) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst fetchBotSignalData = async (page: number): Promise<BotSignalResult[]> => {\n    try {\n        const response = await axios.get(`${APIs.botSignalTeleList}`, {\n            params: {\n                page,\n                page_size: 20,\n            },\n        });\n        return response.data.results.map((bot: any) => ({\n            id: bot.id,\n            bot_name: bot.bot_name,\n            win_streak: bot.win_accum,\n            total_win_streak: 0,\n            lose_streak: bot.lose_accum,\n            total_lose_streak: 0,\n            total_win: bot.total_win,\n            total_lose: bot.total_lose,\n            total_volume: bot.total_volume,\n            history: '',\n        }));\n    } catch (error) {\n        console.error('Error fetching bot signal list:', error);\n        return [];\n    }\n};\n\nconst SignalBot: FC<SignalBotProps> = ({ searchInput, setSearchInput, toggleHistory }) => {\n    const [selected, setSelected] = useState<SelectedIdsType>({});\n    const [selectAll, setSelectAll] = useState(0);\n    const [botHistory, setBotHistory] = useState<BotSignal>({\n        count: 0,\n        next: null,\n        previous: null,\n        results: [],\n    });\n\n    const [isInitialized, setIsInitialized] = useState(false);\n    const [partnerBotId, setPartnerBotId] = useState(0);\n    const [session, setSession] = useState<ISession>({\n        ss_id: 0,\n        ss_t: '',\n        o_price: 0,\n        c_price: 0,\n        r_second: 0,\n        st_time: '',\n    });\n    const [countdown, setCountdown] = useState(1);\n\n    const isDesktop = useMediaQuery({ query: '(min-width: 1224px)' });\n    const isTablet = useMediaQuery({ query: '(min-width: 768px)' });\n    const isMobile = useMediaQuery({ query: '(max-width: 767px)' });\n\n    const [isPopupOpen, setIsPopupOpen] = useState(false);\n    const dispatch = useAppDispatch();\n    const enqueueSnackbar = useEnqueueSnackbar();\n\n    const handleOpenPopupModal = () => {\n        setIsPopupOpen(true);\n    };\n\n    const handleClosePopupModal = () => {\n        setIsPopupOpen(false);\n    };\n\n    const getCurrentSession = useCallback(() => {\n        axios\n            .get(APIs.currentSession)\n            .then((res) => {\n                const data: ICurrentSession = res.data;\n                setSession(data.d);\n                setCountdown(data.d.r_second);\n            })\n            .catch((err) => console.log(err));\n    }, []);\n\n    const countDownSession = useCallback(() => {\n        if (countdown === 1) {\n            getCurrentSession();\n            console.log(countdown);\n            if (botHistory.results.length > 0) {\n                // getOrderHistory();\n            }\n        } else {\n            setCountdown((prev) => prev - 1);\n        }\n    }, [botHistory.results.length, countdown, getCurrentSession]);\n\n    const columns = React.useMemo<Column<BotSignalResult>[]>(\n        () => [\n            {\n                accessor: 'bot_name',\n                Header: () => {\n                    return <div className=\"text-left\">Tên Bot Telegram</div>;\n                },\n                Cell: (props) => {\n                    const original = props.cell.row.original;\n                    return (\n                        <div className=\"flex\">\n                            <p>{original.bot_name}</p>\n                        </div>\n                    );\n                },\n            },\n\n            {\n                accessor: 'win_streak',\n                Header: () => {\n                    return <div className=\"text-center\">Win </div>;\n                },\n                Cell: (props) => {\n                    const original = props.cell.row.original;\n                    return (\n                        <div className=\"flex items-center justify-center\">\n                            <p className=\"px-2 rounded-3xl bg-green-100 text-xs text-ink-100\">\n                                {original.total_win}\n                            </p>\n                        </div>\n                    );\n                },\n            },\n            {\n                accessor: 'lose_streak',\n                Header: () => {\n                    return <div className=\"text-center\">Lose</div>;\n                },\n                Cell: (props) => {\n                    const original = props.cell.row.original;\n                    return (\n                        <div className=\"flex items-center justify-center\">\n                            <p className={`px-2 rounded-3xl bg-red-100 text-xs text-ink-100`}>\n                                {original.total_lose}\n                            </p>\n                        </div>\n                    );\n                },\n            },\n\n            {\n                accessor: 'total_win_lose',\n                Header: () => {\n                    return <div className=\"text-center\">Win/Lose</div>;\n                },\n                Cell: (props) => {\n                    const original = props.cell.row.original;\n                    return (\n                        <div className=\"flex items-center justify-center\">\n                            {/*\n              <p\n                className={`px-3 rounded-3xl bg-green-100 text-xs text-ink-100`}\n              >\n                {original.total_win}\n              </p>\n              /\n              <p className={`px-3 rounded-3xl bg-red-100 text-xs text-ink-100`}>\n                {original.total_lose}\n              </p>\n              :\n              */}\n                            <p\n                                className={`px-3 rounded-3xl bg-ink-100 text-xs text-background-100`}\n                            >\n                                {original.total_win - original.total_lose}\n                            </p>\n                        </div>\n                    );\n                },\n            },\n            {\n                accessor: 'total_volume',\n                Header: () => {\n                    return <div className=\"text-end\">KLGD</div>;\n                },\n                Cell: (props) => {\n                    const original = props.cell.row.original;\n                    return (\n                        <div className=\"flex items-center justify-end\">\n                            <p className=\"bg-primary-100 bg-clip-text text-transparent\">\n                                ${original.total_volume}\n                            </p>\n                        </div>\n                    );\n                },\n            },\n            {\n                accessor: 'history',\n                Header: () => {\n                    return <div className=\"text-end\">Lịch sử</div>;\n                },\n                Cell: (props) => {\n                    const original = props.cell.row.original;\n                    return (\n                        <div className=\"flex items-center justify-end\">\n                            <TableRightArrowSvg />\n                        </div>\n                    );\n                },\n            },\n        ],\n        []\n    );\n\n    const tableInstance = useTable({ columns, data: botHistory.results });\n\n    const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } = tableInstance;\n\n    const showIsDevelopingModal = () => {\n        dispatch(uiActions.updateIsModalOpen(true));\n    };\n\n    useEffect(() => {\n        const intervalId = setInterval(() => {\n            countDownSession();\n        }, 1000);\n        return () => clearInterval(intervalId);\n    }, [countDownSession]);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const data = await fetchBotSignalData(1); // Fetch data for page 1\n            setBotHistory((prevHistory) => ({\n                ...prevHistory,\n                results: data,\n            }));\n        };\n        fetchData();\n    }, []);\n\n    return (\n        <div className=\"h-fit mb-6 bg-background-80 rounded-3xl\">\n            <div className=\"p-6 border-b border-ink-10 flex justify-between items-center\">\n                <h1 className=\"text-xl text-ink-100 font-semibold\">Signal tín hiệu Bot Telegram</h1>\n            </div>\n\n            <div className=\"p-6 flex flex-col gap-y-6\">\n                <div>\n                    <SearchInput inputName=\"search\" inputClassName=\"w-full md:w-[21.375rem]\" searchInput={searchInput} setSearchInput={setSearchInput} />\n                </div>\n\n                <div>\n                    <div className={`border border-ink-05 rounded-2xl w-full ${!isDesktop ? 'overflow-x-scroll' : ''}`}>\n                        <table className=\"w-full\" {...getTableProps()}>\n                            <thead>\n                            {headerGroups.map((headerGroup) => (\n                                <tr {...headerGroup.getHeaderGroupProps()}>\n                                    {headerGroup.headers.map((column) => (\n                                        <th\n                                            className={`p-4 bg-primary-05 first-of-type:rounded-tl-2xl last-of-type:rounded-tr-2xl text-sm text-ink-100 font-normal whitespace-nowrap text-ellipsis`}\n                                            {...column.getHeaderProps()}\n                                        >\n                                            {column.render('Header')}\n                                        </th>\n                                    ))}\n                                </tr>\n                            ))}\n                            </thead>\n                            <tbody {...getTableBodyProps()}>\n                            {rows.map((row) => {\n                                prepareRow(row);\n                                return (\n                                    <tr\n                                        className=\"border-b border-ink-10 last:border-0 cursor-pointer\"\n                                        onClick={() => {\n                                            toggleHistory();\n                                        }}\n                                        {...row.getRowProps()}\n                                    >\n                                        {row.cells.map((cell) => (\n                                            <td className=\"p-4 text-sm\" {...cell.getCellProps()}>\n                                                {cell.render('Cell')}\n                                            </td>\n                                        ))}\n                                    </tr>\n                                );\n                            })}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default SignalBot;\n","import images from 'assets';\nimport React, { FC, useCallback, useEffect, useState } from 'react';\nimport { faker } from '@faker-js/faker';\nimport { Column, useTable } from 'react-table';\nimport SearchInput from 'components/SearchInput';\nimport CopyTradeSelfOrderHistory, {\n  CopyTradeSelfOrderHistoryResult,\n} from 'types/CopyTradeSelfOrderHistory';\nimport APIs from 'apis';\nimport axios from 'axios';\nimport { uiActions } from 'stores/uiSlice';\nimport { useAppDispatch } from 'stores/hooks';\nimport ICurrentSession, { ISession } from 'types/ICurrentSession';\nimport moment from 'moment';\nimport { useEnqueueSnackbar } from 'hooks/useEnqueueSnackbar';\nimport CustomModal from 'components/CustomModal';\nimport GreyButton from 'components/GreyButton';\nimport GoldButton from 'components/GoldButton';\nimport useWindowFocus from 'hooks/useWindowFocus';\nimport BotSignal, { BotSignalResult } from 'types/BotSignal';\nimport TableRightArrowSvg from 'svgs/TableRightArrowSvg';\nimport BotSignalHistory, {\n  BotSignalHistoryResult,\n} from 'types/BotSignalHistory';\nimport TableLeftArrowSvg from 'svgs/TableLeftArrowSvg';\nimport { useMediaQuery } from 'react-responsive';\n\nconst BASE_RATE = 0.95;\n\ntype SignalBotHistoryProps = {\n  searchInput: string;\n  setSearchInput: React.Dispatch<React.SetStateAction<string>>;\n  toggleHistory: () => void;\n};\n\ntype SelectedIdsType = {\n  [key: string]: boolean;\n};\n\nconst randomIntFromInterval = (min: number, max: number) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst O_TYPE = ['BUY', 'SELL'];\nconst O_RESULT = [-1, 0, 1];\n\nconst generateFakeData = (): BotSignalHistoryResult[] => {\n  return Array(10)\n    .fill(0)\n    .map((_, index) => ({\n      id: faker.datatype.uuid(),\n      ss_id: randomIntFromInterval(2865000, 2869000),\n      o_id: faker.datatype.uuid(),\n      o_type: O_TYPE[Math.floor(Math.random() * O_TYPE.length)],\n      o_result: O_RESULT[Math.floor(Math.random() * O_RESULT.length)],\n      created_at: moment().format('DD/MM/YYYY HH:mm'),\n      o_amount: 50,\n      output: 50,\n    }));\n};\n\nconst options: Intl.NumberFormatOptions = {\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 3,\n  style: 'decimal',\n};\n\nconst SignalBotHistory: FC<SignalBotHistoryProps> = ({\n  searchInput,\n  setSearchInput,\n  toggleHistory,\n}) => {\n  const [selected, setSelected] = useState<SelectedIdsType>({});\n  const [selectAll, setSelectAll] = useState(0);\n  const [botHistory, setBotHistory] = useState<BotSignalHistory>({\n    count: 0,\n    next: null,\n    previous: null,\n    results: generateFakeData(),\n  });\n\n  const [isInitialized, setIsInitialized] = useState(false);\n  const [partnerBotId, setPartnerBotId] = useState(0);\n\n  const [session, setSession] = useState<ISession>({\n    ss_id: 0,\n    ss_t: '',\n    o_price: 0,\n    c_price: 0,\n    r_second: 0,\n    st_time: '',\n  });\n  const [countdown, setCountdown] = useState(1);\n\n  // RESPONSIVE\n  const isDesktop = useMediaQuery({\n    query: '(min-width: 1224px)',\n  });\n  const isTablet = useMediaQuery({\n    query: '(min-width: 768px)',\n  });\n  const isMobile = useMediaQuery({\n    query: '(max-width: 767px)',\n  });\n\n  // MODAL\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n\n  // HOOKS\n  const dispatch = useAppDispatch();\n  const enqueueSnackbar = useEnqueueSnackbar();\n\n  // const isTabVisible = useWindowFocus(() => {\n  //   getCurrentSession();\n  // });\n\n  // const data = React.useMemo<BotCopyTradeSelfOrderHistoryResult[]>(\n  //   () => botHistory.results,\n  //   [botHistory]\n  // );\n\n  const data = React.useMemo<BotSignalHistoryResult[]>(\n    () => botHistory.results,\n    [botHistory.results]\n  );\n\n  const handleOpenPopupModal = () => {\n    setIsPopupOpen(true);\n  };\n\n  const handleClosePopupModal = () => {\n    setIsPopupOpen(false);\n  };\n\n  const getCurrentSession = useCallback(() => {\n    axios\n      .get(APIs.currentSession)\n      .then((res) => {\n        const data: ICurrentSession = res.data;\n        setSession(data.d);\n        setCountdown(data.d.r_second);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  // const getOrderHistory = useCallback(() => {\n  //   axios\n  //     .get(APIs.orderSelfList)\n  //     .then((res) => {\n  //       const data: BotCopyTradeSelfOrderHistory = res.data;\n  //       setBotHistory(data);\n  //     })\n  //     .catch(() => {\n  //       enqueueSnackbar('Không thể lấy lịch sử giao dịch!', {\n  //         variant: 'error',\n  //       });\n  //     });\n  // }, [enqueueSnackbar]);\n\n  const countDownSession = useCallback(() => {\n    if (countdown === 1) {\n      getCurrentSession();\n      console.log(countdown);\n      if (botHistory.results.length > 0) {\n        // getOrderHistory();\n      }\n    } else {\n      setCountdown((prev) => prev - 1);\n    }\n  }, [botHistory.results.length, countdown, getCurrentSession]);\n\n  const columns = React.useMemo<Column<BotSignalHistoryResult>[]>(\n    () => [\n      {\n        Header: () => {\n          return <div className=\"text-left\">Mã phiên</div>;\n        },\n        accessor: 'ss_id',\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          return (\n            <div className=\"flex\">\n              <p>{original.ss_id}</p>\n            </div>\n          );\n        },\n      },\n      {\n        Header: () => {\n          return <div className=\"text-left\">Thời gian</div>;\n        },\n        accessor: 'created_at',\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          // const convertedMoment = moment\n          //   .unix(original.o_time / 1000)\n          //   .format('DD/MM/YYYY HH:mm');\n          return <p>{original.created_at}</p>;\n        },\n      },\n      {\n        Header: () => <div className=\"text-center\">Lệnh vào</div>,\n        accessor: 'o_type',\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          const imageOrderType =\n            original.o_type === 'BUY' ? images.table.buy : images.table.sell;\n          return (\n            <div className=\"text-center\">\n              <img\n                className=\"w-[1.5rem] mx-auto\"\n                alt=\"BotLambotrade\"\n                src={imageOrderType}\n              />\n            </div>\n          );\n        },\n      },\n      {\n        Header: () => <div className=\"text-center\">Kết quả</div>,\n        accessor: 'o_result',\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          const isWinning = original.o_result === 1;\n          const isLosing = original.o_result === -1;\n          const isPending =\n            original.o_result === 0 || original.o_result == null;\n          return (\n            <div className=\"text-center\">\n              {isWinning && (\n                <img\n                  className=\"w-[1.5rem] mx-auto\"\n                  alt=\"BotLambotrade\"\n                  src={images.table.buy}\n                />\n              )}\n              {isLosing && (\n                <img\n                  className=\"w-[1.5rem] mx-auto\"\n                  alt=\"BotLambotrade\"\n                  src={images.table.sell}\n                />\n              )}\n              {isPending && (\n                <p className=\"bg-primary-100 bg-clip-text text-transparent\">\n                  ...\n                </p>\n              )}\n            </div>\n          );\n        },\n      },\n      {\n        Header: () => <div className=\"text-end\">Giá trị lệnh</div>,\n        accessor: 'o_amount',\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          return (\n            <div className=\"text-end\">\n              <span className=\"bg-primary-100 bg-clip-text text-transparent text-sm font-bold\">\n                ${original.o_amount?.toLocaleString('en-US', options)}\n              </span>\n            </div>\n          );\n        },\n      },\n      {\n        Header: () => <div className=\"text-end\">Thanh toán</div>,\n        accessor: 'output',\n        Cell: (props) => {\n          const original = props.cell.row.original;\n          const isWinning = original.o_result === 1;\n          const isLosing = original.o_result === -1;\n          const isPending =\n            original.o_result === 0 || original.o_result == null;\n          return (\n            <div className=\"text-end\">\n              {isWinning && (\n                <span className=\"text-green-100 rounded-3xl text-sm font-bold\">\n                  +$\n                  {(original.o_amount * BASE_RATE).toLocaleString(\n                    'en-US',\n                    options\n                  )}\n                </span>\n              )}\n              {isLosing && (\n                <span className=\"text-red-100 rounded-3xl text-sm font-bold\">\n                  -$\n                  {original.o_amount.toLocaleString('en-US', options)}\n                </span>\n              )}\n              {isPending && (\n                <span className=\"bg-primary-100 bg-clip-text text-transparent rounded-3xl text-sm font-bold\">\n                  ...\n                </span>\n              )}\n            </div>\n          );\n        },\n      },\n    ],\n    [toggleHistory]\n  );\n\n  const tableInstance = useTable({ columns, data });\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    tableInstance;\n\n  const showIsDevelopingModal = () => {\n    dispatch(uiActions.updateIsModalOpen(true));\n  };\n\n  // Count down session\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      countDownSession();\n    }, 1000);\n\n    return () => clearInterval(intervalId);\n  }, [countDownSession]);\n\n  // CHECK IF INITIALIZED => setPartnerBotId\n  // useEffect(() => {\n  //   if (!isInitialized && botHistory.results.length > 0) {\n  //     setPartnerBotId(data[0].o_PartnerAcc_owner);\n  //     setIsInitialized(true);\n  //   }\n  // }, [botHistory.results.length, data, isInitialized]);\n\n  // RETRIEVE ORDER HISTORY\n  // useEffect(() => {\n  //   getOrderHistory();\n  // }, [getOrderHistory]);\n\n  // CHECK IF TAB IS FOCUS OR NOT\n\n  return (\n    <>\n      <div className=\"h-fit mb-6 bg-background-80 rounded-3xl\">\n        <div className=\"p-6 border-b border-ink-10 flex justify-between items-center\">\n          <h1 className=\"text-xl text-ink-100 font-semibold\">\n            Lịch sử tín hiệu\n          </h1>\n          <button\n            className=\"px-3 py-[0.625rem] rounded-xl flex items-center gap-[0.625rem] bg-primary-100\"\n            onClick={() => {\n              toggleHistory();\n            }}\n          >\n            {/* <img src={images.table.left_arrow} alt=\"BotLambotrade\" /> */}\n            <TableLeftArrowSvg className=\"text-background-100\" />\n            <p className=\"bg-background-100 bg-clip-text text-transparent font-semibold\">\n              Trở lại\n            </p>\n          </button>\n        </div>\n\n        <div className=\"p-6 flex flex-col gap-y-6\">\n          <div>\n            <SearchInput\n              inputName=\"search\"\n              inputClassName=\"w-full md:w-[21.375rem]\"\n              searchInput={searchInput}\n              setSearchInput={setSearchInput}\n            />\n          </div>\n\n          <div>\n            <div\n              className={`border border-ink-05 rounded-2xl w-full ${\n                !isDesktop ? 'overflow-x-scroll' : ''\n              }`}\n            >\n              <table className=\"w-full\" {...getTableProps()}>\n                <thead>\n                  {headerGroups.map((headerGroup) => (\n                    <tr {...headerGroup.getHeaderGroupProps()}>\n                      {headerGroup.headers.map((column) => (\n                        <th\n                          className={`p-4 bg-primary-05 first-of-type:rounded-tl-2xl last-of-type:rounded-tr-2xl text-sm text-ink-100 font-normal whitespace-nowrap text-ellipsis`}\n                          {...column.getHeaderProps()}\n                        >\n                          {column.render('Header')}\n                        </th>\n                      ))}\n                    </tr>\n                  ))}\n                </thead>\n                <tbody {...getTableBodyProps()}>\n                  {rows.map((row) => {\n                    prepareRow(row);\n                    return (\n                      <tr\n                        className={`border-b border-ink-10 last:border-0 whitespace-nowrap text-ellipsis`}\n                        {...row.getRowProps()}\n                      >\n                        {row.cells.map((cell) => (\n                          <td className=\"p-4 text-sm\" {...cell.getCellProps()}>\n                            {cell.render('Cell')}\n                          </td>\n                        ))}\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default SignalBotHistory;\n","import React, { useState } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport SignalBot from './SignalBot';\nimport SignalBotHistory from './SignalBotHistory';\n\nconst Signal = () => {\n  const [searchInput, setSearchInput] = useState('');\n  const [isHistory, setIsHistory] = useState(false);\n\n  const toggleHistory = () => {\n    setIsHistory((prev) => !prev);\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>BotLambotrade | Copy Trade</title>\n      </Helmet>\n\n      {!isHistory && (\n        <SignalBot\n          searchInput={searchInput}\n          setSearchInput={setSearchInput}\n          toggleHistory={toggleHistory}\n        />\n      )}\n\n      {isHistory && (\n        <SignalBotHistory\n          searchInput={searchInput}\n          setSearchInput={setSearchInput}\n          toggleHistory={toggleHistory}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Signal;\n","import React, { FC } from 'react';\nimport { ISvgIcon } from 'types';\n\nconst TableLeftArrowSvg: FC<ISvgIcon> = ({\n  width = '24',\n  height = '24',\n  fill = '#0F0E0C',\n  className = '',\n}) => {\n  return (\n    <svg\n      width={width}\n      height={height}\n      viewBox=\"0 0 24 24\"\n      fill={fill}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={className}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M16.1109 4.91668C15.6778 4.50425 14.9757 4.50425 14.5426 4.91668L7.88924 11.2533C7.45619 11.6657 7.45619 12.3344 7.88924 12.7468L14.5426 19.0834C14.9757 19.4958 15.6778 19.4958 16.1109 19.0834C16.5439 18.6709 16.5439 18.0022 16.1109 17.5898L10.2416 12L16.1109 6.41023C16.5439 5.9978 16.5439 5.32911 16.1109 4.91668Z\"\n        fill={fill}\n      />\n    </svg>\n  );\n};\n\nexport default TableLeftArrowSvg;\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport SvgIcon from '../SvgIcon';\n\n/**\n * Private module reserved for @mui packages.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createSvgIcon(path, displayName) {\n  function Component(props, ref) {\n    return /*#__PURE__*/_jsx(SvgIcon, _extends({\n      \"data-testid\": `${displayName}Icon`,\n      ref: ref\n    }, props, {\n      children: path\n    }));\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // Need to set `displayName` on the inner component for React.memo.\n    // React prior to 16.14 ignores `displayName` on the wrapper.\n    Component.displayName = `${displayName}Icon`;\n  }\n  Component.muiName = SvgIcon.muiName;\n  return /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(Component));\n}"],"names":["_ref","inputClassName","inputName","searchInput","setSearchInput","_jsxs","children","_jsx","htmlFor","className","fill","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","type","id","name","concat","placeholder","value","onChange","e","target","required","ICONS","success","images","warning","error","TEXT_COLORS","TITLES","React","ref","message","variant","closeSnackBar","_Fragment","src","alt","onClick","Cancel","useEnqueueSnackbar","enqueueSnackbar","closeSnackbar","useSnackbar","useCallback","options","content","key","undefined","CustomSnackbar","handleCloseSnackbar","width","height","fillRule","clipRule","toggleHistory","selected","setSelected","useState","selectAll","setSelectAll","botHistory","setBotHistory","count","next","previous","results","isInitialized","setIsInitialized","partnerBotId","setPartnerBotId","session","setSession","ss_id","ss_t","o_price","c_price","r_second","st_time","countdown","setCountdown","isDesktop","useMediaQuery","query","isPopupOpen","setIsPopupOpen","getCurrentSession","useAppDispatch","axios","APIs","then","res","data","catch","err","console","log","countDownSession","length","prev","columns","accessor","Header","Cell","props","original","cell","row","bot_name","total_win","total_lose","total_volume","TableRightArrowSvg","tableInstance","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","useEffect","intervalId","setInterval","clearInterval","async","params","page","page_size","map","bot","win_streak","win_accum","total_win_streak","lose_streak","lose_accum","total_lose_streak","history","fetchBotSignalData","prevHistory","fetchData","SearchInput","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","getRowProps","cells","getCellProps","O_TYPE","O_RESULT","minimumFractionDigits","maximumFractionDigits","style","Array","_","index","faker","min","max","Math","floor","random","o_id","o_type","o_result","created_at","moment","format","o_amount","output","randomIntFromInterval","imageOrderType","isWinning","isLosing","isPending","_original$o_amount","toLocaleString","TableLeftArrowSvg","Signal","isHistory","setIsHistory","Helmet","SignalBot","SignalBotHistory","createSvgIcon","path","displayName","Component","SvgIcon","_extends","muiName"],"sourceRoot":""}