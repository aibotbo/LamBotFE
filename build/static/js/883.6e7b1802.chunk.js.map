{"version":3,"file":"static/js/883.6e7b1802.chunk.js","mappings":"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","sources":["components/CustomButton/index.tsx","components/SearchInput/index.tsx","components/TextInput/index.tsx","components/CustomSnackbar/index.tsx","hooks/useEnqueueSnackbar.tsx","pages/Home/HomeWelcome.tsx","components/CustomModalWithHeader/index.tsx","utils/fixNumber.tsx","pages/Home/HomeSelectInput.tsx","pages/Home/HomeBalanceInput.tsx","pages/Home/HomeGridRowOne.tsx","utils/isEmpty.tsx","pages/Home/HomeGridRowTwo.tsx","pages/Home/index.tsx","utils/ConvertToThreeDecimalPlaces.tsx","../node_modules/@mui/icons-material/esm/CloseOutlined.js"],"sourcesContent":["import React, { FC } from 'react';\n\ninterface CustomButtonProps {\n  children: React.ReactNode;\n  className?: string;\n  background?: string;\n  textClassName?: string;\n  textColor?: string;\n  icon?: string;\n  iconClassName?: string;\n  type?: 'button' | 'submit' | 'reset' | undefined;\n  onClick?: React.MouseEventHandler<HTMLButtonElement> | undefined;\n}\n\nconst CustomButton: FC<CustomButtonProps> = ({\n  children,\n  className = '',\n  background = 'bg-primary-100',\n  textClassName = '',\n  textColor = 'bg-background-100',\n  icon,\n  iconClassName = '',\n  type = 'button',\n  onClick,\n}) => {\n  return (\n    <button\n      className={`flex justify-center items-center gap-x-[0.625rem] px-4 py-2 rounded-xl ${background} ${className}`}\n      type={type}\n      onClick={onClick}\n    >\n      {icon && <img src={icon} className={iconClassName} alt=\"BotLambotrade\" />}\n      <p\n        className={`${textClassName} ${textColor} bg-clip-text text-transparent font-bold`}\n      >\n        {children}\n      </p>\n    </button>\n  );\n};\n\nexport default CustomButton;\n","import React, { FC } from 'react';\n\ntype SearchInputProps = {\n  inputClassName?: string;\n  inputName: string;\n  searchInput: string;\n  setSearchInput: React.Dispatch<React.SetStateAction<string>>;\n};\n\nconst SearchInput: FC<SearchInputProps> = ({\n  inputClassName,\n  inputName,\n  searchInput,\n  setSearchInput,\n}) => {\n  return (\n    <div>\n      <label\n        htmlFor=\"default-search\"\n        className=\"mb-2 text-sm font-medium sr-only text-ink-100\"\n      >\n        Search\n      </label>\n      <div className=\"relative\">\n        <div className=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n          <svg\n            aria-hidden=\"true\"\n            className=\"w-5 h-5 text-black-opacity-100\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n            ></path>\n          </svg>\n        </div>\n        <input\n          type=\"search\"\n          id={inputName}\n          name={inputName}\n          className={`${inputClassName} block py-3 pl-9 pr-8 text-sm text-black-opacity-40 border border-ink-20 rounded-xl bg-ink-05 focus:ring-blue-500 focus:border-blue-500 placeholder-black-opacity-40 dark:focus:ring-blue-500 dark:focus:border-blue-500`}\n          placeholder=\"Tìm kiếm\"\n          value={searchInput}\n          onChange={(e) => {\n            setSearchInput(e.target.value);\n          }}\n          required\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default SearchInput;\n","import { Cancel } from '@mui/icons-material';\nimport { TextField } from '@mui/material';\nimport React, { FC, useRef, useState } from 'react';\nimport { boolean } from 'yup';\nimport { isDisabled } from '@testing-library/user-event/dist/utils';\nimport CurrencyInput, { CurrencyInputProps } from 'react-currency-input-field';\nimport { CurrencyInputOnChangeValues } from 'react-currency-input-field/dist/components/CurrencyInputProps';\n\ninterface TextInputProps {\n  id?: string;\n  name: string;\n  label?: React.ReactNode;\n  isLabelOutside?: boolean;\n  type: React.InputHTMLAttributes<unknown>['type'];\n  placeholder?: string;\n  prefix?: string;\n  value: string | number | readonly string[] | undefined;\n  error?: boolean;\n  isInputDisabled?: boolean;\n  helperText?: React.ReactNode;\n  helperTextEnd?: React.ReactNode;\n  decimalsLimit?: number;\n  decimalScale?: number;\n  fixedDecimalLength?: number;\n  fullWidth?: boolean;\n  searchIcon?: string;\n  symbol?: string;\n  autoComplete?: boolean;\n  icon?: string | undefined;\n  button?: React.ReactNode;\n  searchIconClassName?: string;\n  containerClassName?: string;\n  inputClassName?: string;\n  symbolClassName?: string;\n  helperClassName?: string;\n  helperTextClassName?: string;\n  helperTextEndClassName?: string;\n  resetValue?: () => void;\n  onChange?: React.ChangeEventHandler<HTMLTextAreaElement | HTMLInputElement>;\n  onValueChange?:\n  | ((\n    value: string | undefined,\n    name?: string | undefined,\n    values?: CurrencyInputOnChangeValues | undefined\n  ) => void)\n  | undefined;\n  onBlur?: React.FocusEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n  onFocus?: React.FocusEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n  onKeyDown?: React.KeyboardEventHandler<\n    HTMLTextAreaElement | HTMLInputElement\n  >;\n  onKeyUp?: React.KeyboardEventHandler<HTMLTextAreaElement | HTMLInputElement>;\n  onMouseOver?: React.MouseEventHandler<HTMLTextAreaElement | HTMLInputElement>;\n  onMouseLeave?: React.MouseEventHandler<\n    HTMLTextAreaElement | HTMLInputElement\n  >;\n}\n\nconst TextInput: FC<TextInputProps> = ({\n  id,\n  name,\n  label,\n  isLabelOutside = false,\n  placeholder,\n  prefix,\n  type = 'text',\n  value,\n  error,\n  helperText,\n  helperTextEnd,\n  decimalsLimit = 3,\n  decimalScale,\n  fixedDecimalLength,\n  fullWidth,\n  searchIcon,\n  symbol,\n  icon,\n  autoComplete,\n  button,\n  isInputDisabled,\n  searchIconClassName = '',\n  containerClassName = '',\n  inputClassName = '',\n  symbolClassName = '',\n  helperClassName = '',\n  helperTextClassName = '',\n  helperTextEndClassName = '',\n  resetValue,\n  onChange,\n  onValueChange,\n  onBlur,\n  onFocus,\n  onKeyDown,\n  onKeyUp,\n  onMouseOver,\n  onMouseLeave,\n}) => {\n  const [isInputFocus, setInputFocus] = useState(false);\n  const [isInputHover, setIsInputHover] = useState(false);\n  const [isPasswordShowing, setIsPasswordShowing] = useState(false);\n  const inputRef = useRef<HTMLInputElement | null>(null);\n  // const [isClickingInside, setIsClickingInside] = useState(false);\n\n  const passwordType = isPasswordShowing ? 'text' : 'password';\n  const handlePasswordShown = () => {\n    inputRef.current?.focus();\n    setIsPasswordShowing((prev) => !prev);\n  };\n\n  const inputSpacingWithLabel =\n    label && !isLabelOutside ? 'pt-[1.625rem] pb-[0.375rem]' : 'py-4';\n\n  return (\n    <div\n      className={`relative ${fullWidth ? 'w-full' : ''} ${containerClassName}`}\n    >\n      {!!label && isLabelOutside && (\n        <div className={`mb-2 cubic-bezier ssss`}>\n          <label\n            className={`overflow-hidden text-ellipsis whitespace-nowrap small-caps`}\n            onClick={() => {\n              inputRef.current?.focus();\n            }}\n          >\n            {label}\n          </label>\n        </div>\n      )}\n      {!!label && !isLabelOutside && (\n        <label\n          className={`cubic-bezier absolute left-0 top-0  ${icon || button ? 'w-[85%]' : 'w-[70%]'\n            } overflow-hidden text-ellipsis whitespace-nowrap ${!isInputFocus && !value\n              ? 'pl-3 pr-3 py-4 text-base text-ink-40'\n              : 'pl-3 pr-3 py-[0.375rem] text-xs text-ink-60'\n            }`}\n          onClick={() => {\n            inputRef.current?.focus();\n          }}\n        >\n          {label}\n        </label>\n      )}\n      {!!searchIcon && (\n        <div className=\"absolute left-3 top-[50%] translate-y-[-50%]\">\n          <img className={`w-[1.5rem] ${searchIconClassName}`} src={searchIcon} alt=\"BotLambotrade\" />\n        </div>\n      )}\n\n      <div\n        className={`${!searchIcon ? 'pl-3 pr-3' : 'pl-10 pr-3'\n          } flex justify-between items-center gap-x-3 rounded-xl ${isInputDisabled\n            ? 'border-input-ink bg-ink-10'\n            : error\n              ? 'border-input-red'\n              : isInputFocus || isInputHover\n                ? 'border-primary'\n                : 'border-input-ink'\n          }`}\n      >\n        <div className=\"relative z-10 flex-grow flex justify-between items-center\">\n          {type === 'number' && (\n            <CurrencyInput\n              id={id}\n              name={name}\n              autoComplete={autoComplete === true ? 'new-password' : ''}\n              className={`${inputSpacingWithLabel} w-full overflow-hidden text-ellipsis whitespace-nowrap bg-transparent caret-yellow-500 focus:outline-none ${!isInputFocus && !value && label && !isLabelOutside\n                  ? 'placeholder-transparent'\n                  : 'placeholder-ink-20'\n                } ${inputClassName}`}\n              value={value}\n              placeholder={placeholder}\n              onChange={onChange}\n              onValueChange={(value, _, values) => {\n                if (onValueChange) {\n                  onValueChange(value, _, values);\n                }\n              }}\n              onBlur={(e) => {\n                if (onBlur) {\n                  onBlur(e);\n                }\n                setInputFocus(false);\n              }}\n              onFocus={(e) => {\n                if (onFocus) {\n                  onFocus(e);\n                }\n                setInputFocus(true);\n              }}\n              onKeyDown={onKeyDown}\n              onKeyUp={onKeyUp}\n              onMouseOver={(e) => {\n                if (onMouseOver) {\n                  onMouseOver(e);\n                }\n                setIsInputHover(true);\n              }}\n              onMouseLeave={(e) => {\n                if (onMouseLeave) {\n                  onMouseLeave(e);\n                }\n                setIsInputHover(false);\n              }}\n              prefix={prefix}\n              disabled={isInputDisabled}\n              allowNegativeValue={false}\n              decimalsLimit={decimalsLimit}\n              decimalScale={decimalScale}\n              fixedDecimalLength={fixedDecimalLength}\n              disableAbbreviations={true}\n              decimalSeparator=\".\"\n              groupSeparator=\",\"\n              maxLength={13}\n              // intlConfig={{ locale: 'en-US', currency: 'USD' }}\n              ref={inputRef}\n            />\n          )}\n          {type !== 'number' && (\n            <input\n              id={id}\n              name={name}\n              autoComplete={autoComplete === true ? 'new-password' : ''}\n              className={`${inputSpacingWithLabel} w-full overflow-hidden text-ellipsis whitespace-nowrap bg-transparent caret-input focus:outline-none ${!isInputFocus && !value && label && !isLabelOutside\n                  ? 'placeholder-transparent'\n                  : 'placeholder-ink-20'\n                } ${inputClassName}`}\n              type={type === 'password' ? passwordType : type}\n              value={value}\n              placeholder={placeholder}\n              onChange={onChange}\n              onBlur={(e) => {\n                if (onBlur) {\n                  onBlur(e);\n                }\n                setInputFocus(false);\n              }}\n              onFocus={(e) => {\n                if (onFocus) {\n                  onFocus(e);\n                }\n                setInputFocus(true);\n              }}\n              onKeyDown={onKeyDown}\n              onKeyUp={onKeyUp}\n              onMouseOver={(e) => {\n                if (onMouseOver) {\n                  onMouseOver(e);\n                }\n                setIsInputHover(true);\n              }}\n              onMouseLeave={(e) => {\n                if (onMouseLeave) {\n                  onMouseLeave(e);\n                }\n                setIsInputHover(false);\n              }}\n              disabled={isInputDisabled}\n              ref={inputRef}\n            />\n          )}\n\n          {symbol && (\n            <span className={`${inputSpacingWithLabel} ${symbolClassName}`}>\n              {symbol}\n            </span>\n          )}\n        </div>\n\n        {((!!value && resetValue) || !!icon || !!button) && (\n          <div className=\"z-10 flex justify-end items-center gap-x-[1.25rem]\">\n            {!!value && resetValue && (\n              <div\n                className={`${button || icon ? 'input-icon-seperator' : ''} ${isInputFocus || isInputHover ? 'opacity-100' : 'opacity-50'\n                  }`}\n                onClick={(e) => {\n                  if (resetValue) {\n                    resetValue();\n                    inputRef.current?.focus();\n                  }\n                }}\n              >\n                <Cancel className=\"w-[1.5rem] !fill-ink-60 cursor-pointer\" />\n              </div>\n            )}\n            {!!icon && (\n              <div className={`${button ? 'input-icon-seperator' : ''}`}>\n                <img\n                  className={`w-[1.5rem] cursor-pointer`}\n                  src={icon}\n                  alt=\"BotLambotrade\"\n                  onClick={handlePasswordShown}\n                />\n              </div>\n            )}\n            {!!button && <div className=\"py-[0.375rem]\">{button}</div>}\n          </div>\n        )}\n      </div>\n      {(!!helperText || !!helperTextEnd) && (\n        <div className={`px-3 pt-2 flex justify-between ${helperClassName}`}>\n          <p\n            className={`${isInputDisabled\n                ? 'text-ink-80'\n                : error\n                  ? 'text-red-100'\n                  : 'text-ink-80'\n              } text-sm ${helperTextClassName}`}\n          >\n            {helperText}\n          </p>\n          <p className={`text-ink-100 text-sm ${helperTextEndClassName}`}>\n            {helperTextEnd}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TextInput;\n","import React, { FC } from 'react';\nimport { SnackbarContent, SnackbarKey, SnackbarMessage } from 'notistack';\nimport images from 'assets';\nimport { Cancel } from '@mui/icons-material';\n\nconst ICONS = {\n  success: images.toast.check,\n  warning: images.toast.warning,\n  error: images.toast.error,\n};\n\nconst TEXT_COLORS = {\n  success: 'text-green-100',\n  warning: 'text-yellow-100',\n  error: 'text-red-100',\n};\n\nconst TITLES = {\n  success: 'Thành công',\n  warning: 'Cảnh báo',\n  error: 'Thất bại',\n};\n\ninterface CustomSnackbarProps {\n  id: SnackbarKey;\n  message: SnackbarMessage;\n  variant?: 'success' | 'error' | 'warning';\n  closeSnackBar: () => void;\n}\n\nconst CustomSnackbar = React.forwardRef<HTMLDivElement, CustomSnackbarProps>(\n  ({ id, message, variant, closeSnackBar }, ref) => {\n    return (\n      <>\n        <div\n          className={`flex items-center justify-between gap-x-3 p-4 rounded-3xl w-[full] md:w-[25rem] transition-all bg-dropdown toast-in-right`}\n          key={id}\n          ref={ref}\n        >\n          <div className=\"flex items-center justify-between gap-x-3\">\n            <div className=\"flex-shrink-0 p-[0.625rem] rounded-2xl bg-ink-05\">\n              <img\n                className=\"w-8\"\n                src={variant && ICONS[variant]}\n                alt=\"BotLambotrade\"\n              />\n            </div>\n            <div>\n              <p\n                className={`mb-1 font-bold ${variant && TEXT_COLORS[variant]}`}\n              >\n                {variant && TITLES[variant]}\n              </p>\n              <p className=\"text-ink-80 text-sm\">{message}</p>\n            </div>\n          </div>\n          <button onClick={closeSnackBar}>\n            <Cancel className=\"fill-ink-100\" />\n          </button>\n        </div>\n      </>\n    );\n  }\n);\n\nexport default CustomSnackbar;\n","import CustomSnackbar from 'components/CustomSnackbar';\nimport { OptionsObject, useSnackbar } from 'notistack';\nimport { useCallback } from 'react';\n\nexport const useEnqueueSnackbar = () => {\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  const pushSnackbar = useCallback(\n    (\n      message: string,\n      // extend the default options object\n      options?: OptionsObject &\n        Partial<{ variant: 'success' | 'error' | 'warning' }>\n    ) => {\n      enqueueSnackbar(message, {\n        ...options,\n        content: (key) => {\n          // destructure the options we need from the extended options\n          // object, and provide a default case if we didn't provide any\n          const { variant } = options || { variant: undefined };\n          const handleCloseSnackbar = () => {\n            closeSnackbar(key);\n          };\n          return (\n            <CustomSnackbar\n              id={`${key}`}\n              message={message}\n              variant={variant || 'success'}\n              closeSnackBar={handleCloseSnackbar}\n            />\n          );\n        },\n      });\n    },\n    [closeSnackbar, enqueueSnackbar]\n  );\n\n  return pushSnackbar;\n};\n","import React from 'react';\nimport images from 'assets';\nimport { useAppSelector } from 'stores/hooks';\nimport { useMediaQuery } from 'react-responsive';\n\nconst HomeWelcome = () => {\n  const user = useAppSelector((state) => state.user.user);\n  const isDesktop = useMediaQuery({\n    query: '(min-width: 1224px)',\n  });\n\n  const isTablet = useMediaQuery({\n    query: '(min-width: 768px)',\n  });\n\n  return (\n    <div\n      id=\"home_welcome\"\n      className=\"mb-6 mt-6 text-ink-100 relative overflow-visible\"\n    >\n      <div\n        className={`absolute ${\n          isDesktop || isTablet\n            ? 'top-[62%] translate-y-[-50%] left-6'\n            : 'top-4 left-4'\n        } 2xl:left-8`}\n      >\n        <h3 className=\"mb-4 text-4xl md:text-3xl lg:text-4xl font-medium\">\n          Hi, {user.username}\n        </h3>\n        <h2 className=\"text-5xl md:text-4xl lg:text-5xl font-bold\">\n          Welcome to {!isDesktop ? <br /> : ''} AI BotTrade\n        </h2>\n      </div>\n      <img\n        className={`${isDesktop ? 'mt-[-2rem]' : ''} h-auto max-w-full w-full`}\n        srcSet={`${\n          isDesktop\n            ? images.home.banner_desktop\n            : isTablet\n            ? images.home.banner_tablet\n            : images.home.banner_mobile\n        } 4x`}\n        alt=\"BotLambotrade\"\n      />\n      {/* <img\n        className=\"absolute left-[70%] translate-x-[-50%] top-[50%] translate-y-[-50%] w-[30rem] xl:w-[32rem] 2xl:w-[34rem] z-0\"\n        srcSet={`${images.home.welcome_background} 2x`}\n        alt=\"BotLambotrade\"\n      />\n      <img\n        className=\"absolute left-[55%] w-[16.75rem] 2xl:w-[20rem] 3xl:w-[22%] overflow-visible bottom-0\"\n        srcSet={`${images.home.robot_blue} 2x`}\n        alt=\"BotLambotrade\"\n      />\n      STARS\n      <img\n        className=\"absolute left-[50%] top-[20%] w-[1.5rem] 2xl:w-[1.75rem] opacity-80 bg-blend-screen mix-blend-screen overflow-visible\"\n        srcSet={`${images.home.star_1}`}\n        alt=\"BotLambotrade\"\n      />\n      <img\n        className=\"absolute left-[45%] top-[38%] w-[2rem] 2xl:w-[2.25rem] z-0 border-0 opacity-80 bg-blend-screen mix-blend-screen overflow-visible\"\n        srcSet={`${images.home.star_2}`}\n        alt=\"BotLambotrade\"\n      />\n      <img\n        className=\"absolute left-[45%] top-[21%] w-[1.25rem] 2xl:w-[1.5rem] z-0 border-0 opacity-80 bg-blend-screen mix-blend-screen overflow-visible\"\n        srcSet={`${images.home.star_3}`}\n        alt=\"BotLambotrade\"\n      />\n      <img\n        className=\"absolute left-[47%] top-[6%] w-[1rem] xl:w-[1.25rem] z-0 border-0 opacity-80 bg-blend-screen mix-blend-screen overflow-visible\"\n        srcSet={`${images.home.star_4}`}\n        alt=\"BotLambotrade\"\n      />\n      GOLD WITH STARS\n      <img\n        className=\"absolute left-[51%] w-[5rem] 2xl:w-[5.5rem] bottom-0 z-0 border-0 overflow-visible\"\n        srcSet={`${images.home.gold_1}`}\n        alt=\"BotLambotrade\"\n      />\n      <img\n        className=\"absolute left-[51%] top-[55%] w-[5.75rem] 2xl:w-[6.25rem] z-0 border-0 opacity-80 bg-blend-screen mix-blend-screen overflow-visible\"\n        srcSet={`${images.home.star_gold_1}`}\n        alt=\"BotLambotrade\"\n      />\n      <img\n        className=\"absolute left-[59%] top-[49%] w-[3.5rem] 2xl:w-[4rem] z-0 border-0 overflow-visible\"\n        srcSet={`${images.home.gold_2}`}\n        alt=\"BotLambotrade\"\n      />\n      <img\n        className=\"absolute left-[58.5%] top-[44%] w-[5rem] 2xl:w-[6rem] z-0 border-0 opacity-80 bg-blend-screen mix-blend-screen overflow-visible\"\n        srcSet={`${images.home.star_gold_2}`}\n        alt=\"BotLambotrade\"\n      />\n      <img\n        className=\"absolute left-[52%] top-[29%] x-[2rem] 2xl:w-[2.25rem] z-0 border-0 overflow-visible\"\n        srcSet={`${images.home.gold_3}`}\n        alt=\"BotLambotrade\"\n      />\n      <img\n        className=\"absolute left-[52%] top-[29%] w-[2.25rem] 2xl:w-[2.5rem] z-0 border-0 opacity-80 bg-blend-screen mix-blend-screen overflow-visible\"\n        srcSet={`${images.home.star_gold_3}`}\n        alt=\"BotLambotrade\"\n      />\n      <img\n        className=\"absolute left-[56%] top-[5%] w-[2rem] 2xl:w-[2.25rem] z-0 border-0 overflow-visible\"\n        srcSet={`${images.home.gold_4}`}\n        alt=\"BotLambotrade\"\n      />\n      <img\n        className=\"absolute left-[53%] 2xl:left-[56%] top-[5%] w-[2.25rem] 2xl:w-[2.5rem] z-0 border-0 opacity-80 bg-blend-screen mix-blend-screen overflow-visible\"\n        srcSet={`${images.home.star_gold_4}`}\n        alt=\"BotLambotrade\"\n      />\n      RIGHT STARS\n      <img\n        className=\"absolute right-[11%] top-[32%] w-[2rem] 2xl:w-[2.25rem] z-0 border-0 overflow-visible\"\n        srcSet={`${images.home.star_5}`}\n        alt=\"BotLambotrade\"\n      />\n      <img\n        className=\"absolute right-[6%] top-[57%] w-[2rem] 2xl:w-[2.25rem] z-0 border-0 overflow-visible\"\n        srcSet={`${images.home.star_6}`}\n        alt=\"BotLambotrade\"\n      />\n      <img\n        className=\"absolute right-[5%] top-[14%] w-[2rem] 2xl:w-[2.25rem] z-0 border-0 overflow-visible\"\n        srcSet={`${images.home.star_7}`}\n        alt=\"BotLambotrade\"\n      /> */}\n    </div>\n  );\n};\n\nexport default HomeWelcome;\n","import { CloseOutlined } from '@mui/icons-material';\nimport CustomButton from 'components/CustomButton';\nimport CustomModal from 'components/CustomModal';\nimport React, { FC } from 'react';\n\ninterface CustomModalWithHeaderProps {\n  open: boolean;\n  title: string;\n  content: React.ReactNode;\n  button: React.ReactNode;\n  handleOpen: () => void;\n  handleClose: () => void;\n}\n\nconst CustomModalWithHeader: FC<CustomModalWithHeaderProps> = ({\n  open,\n  title,\n  content,\n  button,\n  handleOpen,\n  handleClose,\n}) => {\n  return (\n    <CustomModal\n      isOpen={open}\n      handleOpen={handleOpen}\n      handleClose={handleClose}\n    >\n      <div className=\"absolute left-[50%] top-[50%] translate-x-[-50%] translate-y-[-50%] w-[calc(100vw-2rem)] md:w-[31.25rem] bg-background-80 rounded-3xl\">\n        <div className=\"p-6 border-b border-ink-10 flex justify-between items-center\">\n          <h3 className=\"text-xl text-ink-100 font-semibold\">{title}</h3>\n          <CloseOutlined className=\"cursor-pointer\" onClick={handleClose} />\n        </div>\n        {content}\n        <div className=\"justify-center items-center gap-4\">{button}</div>\n      </div>\n    </CustomModal>\n  );\n};\n\nexport default CustomModalWithHeader;\n","const OPTIONS: Intl.NumberFormatOptions = {\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 3,\n  style: 'decimal',\n};\n\nexport default function fixNumber(value: number | string) {\n  return value.toLocaleString('en-US', OPTIONS);\n}\n","import images from 'assets';\nimport SearchInputFormik from 'pages/CopyTradeSetting/CopyTradeSettingSearchInput';\nimport React, { FC, useRef, useState } from 'react';\nimport { FormikProps } from 'formik';\nimport SearchInput from 'components/SearchInput';\nimport InputSelectOption from 'types/InputSelectOption';\n\ninterface HomeSelectInputProps {\n  label: string;\n  inputValue: InputSelectOption;\n  options: InputSelectOption[];\n  // setInputValue: React.Dispatch<React.SetStateAction<InputSelectOption>>;\n  onSelectChange: (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    option: InputSelectOption\n  ) => void;\n  popupClassName?: string;\n  containerClassName?: string;\n  isSearchEnabled?: boolean;\n}\n\nconst HomeSelectInput: FC<HomeSelectInputProps> = ({\n  label,\n  popupClassName = '',\n  containerClassName = '',\n  isSearchEnabled = true,\n  inputValue,\n  // setInputValue,\n  onSelectChange,\n  options,\n}) => {\n  const [open, setOpen] = useState(false);\n  const [searchInput, setSearchInput] = useState('Money AI 1.8');\n  const handleOpen = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    setOpen((prev) => !prev);\n  };\n\n  // const handleSelect = (\n  //   e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n  //   option: InputSelectOption\n  // ) => {\n  //   setOpen((prev) => !prev);\n  //   setInputValue(option);\n  // };\n\n  return (\n    <>\n      <div\n        className={`relative px-3 py-[0.375rem] border border-ink-10 bg-ink-05 rounded-2xl cursor-pointer ${containerClassName}`}\n      >\n        <div className=\"flex justify-between items-center\" onClick={handleOpen}>\n          <div>\n            <label className=\"pb-1 text-ink-60 text-xs cursor-pointer\">\n              {label}\n            </label>\n            <p className=\"text-ink-100\">\n              {inputValue.label === '' || inputValue.label === 'None'\n                ? '\\u00A0'\n                : inputValue.label}\n            </p>\n          </div>\n          <img\n            className=\"w-[1.5rem]\"\n            src={images.home.white_dropdown}\n            alt=\"BotLambotrade\"\n          />\n        </div>\n        {open && (\n          <div\n            className={`z-[10000] top-[calc(100%+0.5rem)] absolute w-full left-0 bg-dropdown rounded-2xl cursor-pointer shadow-popup ${popupClassName}`}\n          >\n            {isSearchEnabled && (\n              <div className=\"p-4\">\n                <SearchInput\n                  inputName=\"search\"\n                  inputClassName=\"w-full\"\n                  searchInput={searchInput}\n                  setSearchInput={setSearchInput}\n                />\n              </div>\n            )}\n            <div className=\"flex flex-col max-h-[39.5rem] overflow-y-auto\">\n              {options.map((option, index) => (\n                <div\n                  className={`border-select-input first:rounded-tl-2xl first:rounded-tr-2xl last:rounded-bl-2xl last:rounded-br-2xl ${\n                    inputValue.value === option.value ? 'bg-primary-05' : 'p-4'\n                  }`}\n                  onClick={(e) => {\n                    // handleSelect(e, option);\n                    onSelectChange(e, option);\n                    setOpen((prev) => !prev);\n                  }}\n                  key={index}\n                >\n                  <p\n                    className={`${\n                      inputValue.value === option.value\n                        ? 'p-4 bg-primary-100 bg-clip-text text-transparent'\n                        : ''\n                    }`}\n                  >\n                    {option.label}\n                  </p>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default HomeSelectInput;\n","import React, { FC } from 'react';\nimport HomeSelectInput from './HomeSelectInput';\nimport InputSelectOption from 'types/InputSelectOption';\nimport { BotBalance } from 'types/BotBalance';\nimport BotData from 'types/BotData';\nimport images from 'assets';\n\ninterface HomeSelectInputProps {\n  selectedAccountType: InputSelectOption;\n  // setSelectedAccountType: React.Dispatch<\n  //   React.SetStateAction<InputSelectOption>\n  // >;\n  onSelectedAccountTypeChange: (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    option: InputSelectOption\n  ) => void;\n  selectedBotAccount: InputSelectOption;\n  // setSelectedBotAccount: React.Dispatch<\n  //   React.SetStateAction<InputSelectOption>\n  // >;\n  onSelectedBotAccountChange: (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    option: InputSelectOption\n  ) => void;\n  accountOptions: InputSelectOption[];\n  botBalance: BotBalance;\n  partnerBotDatas: BotData[];\n  // reloadDemoBalance: (id: number | string) => void;\n}\n\nconst options: Intl.NumberFormatOptions = {\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 3,\n  style: 'decimal',\n};\n\nconst ACCOUNT_TYPES = [\n  {\n    value: 'DEMO',\n    label: 'Tài khoản DEMO',\n  },\n  {\n    value: 'LIVE',\n    label: 'Tài khoản LIVE',\n  },\n];\n\nconst HomeBalanceInput: FC<HomeSelectInputProps> = ({\n  selectedAccountType,\n  // setSelectedAccountType,\n  onSelectedAccountTypeChange,\n  selectedBotAccount,\n  // setSelectedBotAccount,\n  onSelectedBotAccountChange,\n  accountOptions,\n  botBalance,\n  partnerBotDatas,\n  // reloadDemoBalance,\n}) => {\n  return (\n    <>\n      <HomeSelectInput\n        containerClassName=\"mb-4\"\n        label=\"Loại tài khoản\"\n        inputValue={selectedAccountType}\n        // setInputValue={setSelectedAccountType}\n        onSelectChange={onSelectedAccountTypeChange}\n        options={ACCOUNT_TYPES}\n        isSearchEnabled={false}\n      />\n      {partnerBotDatas.length > 0 && (\n        <HomeSelectInput\n          containerClassName=\"mb-4\"\n          label=\"Tài khoản giao dịch\"\n          inputValue={selectedBotAccount}\n          // setInputValue={setSelectedBotAccount}\n          onSelectChange={onSelectedBotAccountChange}\n          options={accountOptions}\n          isSearchEnabled={false}\n        />\n      )}\n      {partnerBotDatas.length > 0 && (\n        <div className=\"px-3 flex justify-between items-center\">\n          <div className=\"flex items-center gap-x-2\">\n            <p className=\"text-sm text-ink-100\">Số dư ví:</p>\n            {/* {selectedAccountType.value === 'DEMO' && (\n              <img\n                onClick={() => {\n                  reloadDemoBalance(selectedBotAccount.value);\n                }}\n                className=\"w-[1.5rem] cursor-pointer\"\n                src={images.home.reload}\n                alt=\"BotLambotrade\"\n              />\n            )} */}\n          </div>\n          <p className={`font-semibold text-xl text-gold`}>\n            $\n            {selectedAccountType.value === 'DEMO'\n              ? botBalance.demo_balance.toLocaleString('en-US', options)\n              : selectedAccountType.value === 'LIVE'\n              ? botBalance.balance.toLocaleString('en-US', options)\n              : 0}\n          </p>\n        </div>\n      )}\n      {partnerBotDatas.length === 0 && (\n        <div className=\"flex justify-between items-center\">\n          <p className={`font-semibold text-sm text-gold`}>\n            Bạn chưa liên kết tài khoản Lambotradevới sàn, vui lòng ấn vào nút\n            thêm mới tài khoản giao dịch để thực hiện liên kết tài khoản giao\n            dịch\n          </p>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default HomeBalanceInput;\n","import APIs from \"apis\";\nimport images from \"assets\";\nimport axios from \"axios\";\nimport CustomButton from \"components/CustomButton\";\nimport CustomModalWithHeader from \"components/CustomModalWithHeader\";\nimport TextInput from \"components/TextInput\";\nimport { useEnqueueSnackbar } from \"hooks/useEnqueueSnackbar\";\nimport { useCallback, useDeferredValue, useEffect, useState } from \"react\";\nimport CurrencyInput, { CurrencyInputProps } from \"react-currency-input-field\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { Link } from \"react-router-dom\";\nimport { useAppDispatch, useAppSelector } from \"stores/hooks\";\nimport { uiActions } from \"stores/uiSlice\";\nimport { userActions } from \"stores/userSlice\";\nimport HomeWalletSvg from \"svgs/HomeWalletSvg\";\nimport BotAimMaxMin from \"types/BotAimMaxMin\";\nimport { BotBalance } from \"types/BotBalance\";\nimport BotData from \"types/BotData\";\nimport InputSelectOption from \"types/InputSelectOption\";\nimport DashboardResetRequest from \"types/requests/DashboardResetRequest\";\nimport DashboardResponse from \"types/responses/DashboardResponse\";\nimport convertToThreeDecimalPlaces from \"utils/ConvertToThreeDecimalPlaces\";\nimport fixNumber from \"utils/fixNumber\";\nimport _isEmpty from \"../../utils/isEmpty\";\nimport HomeBalanceInput from \"./HomeBalanceInput\";\nimport HomeSelectInput from \"./HomeSelectInput\";\n\ninterface InputValueState {\n  error: null | string;\n  touched: boolean;\n}\n\nconst INITIAL_BOT_BALANCE = {\n  balance: 1,\n  demo_balance: 1,\n  usdt_balance: 1,\n};\n\nconst INITIAL_BOT_AIM_MAX_MIN = [\n  {\n    aim_min: 0,\n    aim_max: 0,\n    created_at: \"\",\n    updated_at: \"\",\n  },\n];\n\nconst INITIAL_SELECT_OPTIONS: InputSelectOption[] = [\n  {\n    value: \"\",\n    label: \"\",\n  },\n];\n\nconst INITIAL_SELECTED_OPTION: InputSelectOption = {\n  value: \"\",\n  label: \"\",\n};\n\nconst INITIAL_SELECTED_ACCOUNT_TYPE: InputSelectOption = {\n  value: \"LIVE\",\n  label: \"Tài khoản LIVE\",\n};\n\nconst ACCOUNT_TYPES = [\n  {\n    value: \"DEMO\",\n    label: \"Tài khoản DEMO\",\n  },\n  {\n    value: \"LIVE\",\n    label: \"Tài khoản LIVE\",\n  },\n];\n\nconst options: Intl.NumberFormatOptions = {\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 3,\n  style: \"decimal\",\n};\n\nconst INITIAL_INPUT_VALUE_STATE: InputValueState = {\n  error: null,\n  touched: false,\n};\n\nconst HomeGridRowOne = () => {\n  // const [profitTakeAmount, setProfitTakeAmount] = useState<string | number>(\n  //   1000000\n  // );\n  // const [stopLossAmount, setStopLossAmount] = useState<string | number>(500000);\n  const [botBalance, setBotBalance] = useState<BotBalance>(INITIAL_BOT_BALANCE);\n  const [selectedAccountType, setSelectedAccountType] =\n    useState<InputSelectOption>(INITIAL_SELECTED_ACCOUNT_TYPE);\n  const [selectedBotAccount, setSelectedBotAccount] =\n    useState<InputSelectOption>(INITIAL_SELECTED_OPTION);\n  const [accountOptions, setAccountOptions] = useState<InputSelectOption[]>(\n    INITIAL_SELECT_OPTIONS\n  );\n  const [partnerBotDatas, setPartnerBotDatas] = useState<BotData[]>([]);\n  const [botAimMaxMin, setBotAimMaxMin] = useState<BotAimMaxMin[]>(\n    INITIAL_BOT_AIM_MAX_MIN\n  );\n  const isDesktop = useMediaQuery({\n    query: \"(min-width: 1224px)\",\n  });\n  const isTablet = useMediaQuery({\n    query: \"(min-width: 768px)\",\n  });\n\n  // INITIAL PARTNER BOT USEFFECT\n  const [isPartnerBotInitialized, setIsPartnerBotInitialized] = useState(false);\n\n  // Dashboard\n  const [dashboardResponse, setDashboardResponse] = useState<DashboardResponse>(\n    {\n      id: 0,\n      date: \"\",\n      owner: 0,\n      current_profit: 0,\n      volume: 0,\n      profit: 0,\n      total_win: 0,\n      total_lose: 0,\n      account_type: \"\",\n      total_draft: 0,\n      created_at: \"\",\n      updated_at: \"\",\n    }\n  );\n\n  // MODAL\n  const [isTransferModalOpen, setIsTransferModalOpen] = useState(false);\n  const [isTransferByUSDT, setIsTransferByUSDT] = useState(true);\n  const [transferAmount, setTransferAmount] = useState<string | number>(0);\n  const [transferState, setTransferState] = useState<InputValueState>(\n    INITIAL_INPUT_VALUE_STATE\n  );\n  const deferredTransferAmount = useDeferredValue(transferAmount);\n\n  const dispatch = useAppDispatch();\n  const enqueueSnackbar = useEnqueueSnackbar();\n\n  const handleOpenTransferPopupModal = () => {\n    getBalance(selectedBotAccount.value);\n    setIsTransferModalOpen(true);\n  };\n\n  const handleCloseTransferPopupModal = () => {\n    setIsTransferModalOpen(false);\n    setTransferAmount(0);\n    setTransferState(INITIAL_INPUT_VALUE_STATE);\n  };\n\n  const onSelectedAccountTypeChange = (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    option: InputSelectOption\n  ) => {\n    setSelectedAccountType(option);\n    dispatch(userActions.updateSelectedAccountType(option));\n  };\n\n  const onSelectedBotAccountChange = (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    option: InputSelectOption\n  ) => {\n    setSelectedBotAccount(option);\n    dispatch(userActions.updateSelectedBotAccount(option));\n  };\n\n  const handleProfitTakeAmount: CurrencyInputProps[\"onValueChange\"] = (\n    value,\n    _,\n    values\n  ): void => {\n    // const valueToSet = value === undefined || +value <= 0 ? 0 : value || ' ';\n    const valueToSet = value === undefined ? \"\" : value;\n    const botAimMaxMinToUpdate = [...botAimMaxMin];\n    const convertedValue = convertToThreeDecimalPlaces(valueToSet);\n    botAimMaxMinToUpdate[0].aim_max = convertedValue;\n\n    setBotAimMaxMin(botAimMaxMinToUpdate);\n    // setBotAimMaxMin((prev) => ({\n    //   ...prev,\n    //   aim_max: valueToSet,\n    // }));\n  };\n\n  const handleTransferUSDT = () => {\n    const transferData = {\n      PartnerAcc_id: selectedBotAccount.value,\n      amount: transferAmount,\n    };\n\n    if (isTransferByUSDT) {\n      axios\n        .post(`${APIs.transferUSDTToLive}`, transferData)\n        .then((res) => {\n          getBalance(selectedBotAccount.value);\n          enqueueSnackbar(\"Chuyển tiền thành công!\", {\n            variant: \"success\",\n          });\n        })\n        .catch((err) => {\n          enqueueSnackbar(\"Có lỗi xảy ra\", {\n            variant: \"error\",\n          });\n        });\n    } else {\n      axios\n        .post(`${APIs.transferLiveToUSDT}`, transferData)\n        .then((res) => {\n          getBalance(selectedBotAccount.value);\n          enqueueSnackbar(\"Chuyển tiền thành công!\", {\n            variant: \"success\",\n          });\n        })\n        .catch((err) => {\n          enqueueSnackbar(\"Có lỗi xảy ra\", {\n            variant: \"error\",\n          });\n        });\n    }\n  };\n\n  const handleStopLossAmount: CurrencyInputProps[\"onValueChange\"] = (\n    value,\n    _,\n    values\n  ): void => {\n    // const valueToSet = value === undefined || +value <= 0 ? 0 : value || ' ';\n    const valueToSet = value === undefined ? \"\" : value;\n    const botAimMaxMinToUpdate = [...botAimMaxMin];\n    const convertedValue = convertToThreeDecimalPlaces(valueToSet);\n    botAimMaxMinToUpdate[0].aim_min = convertedValue;\n\n    setBotAimMaxMin(botAimMaxMinToUpdate);\n    // setBotAimMaxMin((prev) => ({\n    //   ...prev,\n    //   aim_min: valueToSet,\n    // }));\n  };\n\n  const getAllPartnerBots = useCallback(() => {\n    axios\n      .get(APIs.partnerAccount)\n      .then((res) => {\n        const datas: BotData[] = res.data;\n        const partnerBotDatas = datas.filter(\n          (data) => data.status === \"active\"\n        );\n        setPartnerBotDatas(partnerBotDatas);\n      })\n      .catch((err) => {\n        enqueueSnackbar(\"Không thể lấy bot datas!\", {\n          variant: \"error\",\n        });\n      });\n  }, [enqueueSnackbar]);\n\n  const getDashboardMetric = useCallback(() => {\n    axios\n      .get(APIs.dashboard)\n      .then((res) => {\n        const datas: DashboardResponse[] = res.data;\n        if (datas.length > 0) {\n          setDashboardResponse(datas[0]);\n        }\n      })\n      .catch((err) => {\n        enqueueSnackbar(\"Không thể lấy dashboard metric!\", {\n          variant: \"error\",\n        });\n      });\n  }, [enqueueSnackbar]);\n\n  const resetDashboardByField = (request: DashboardResetRequest) => {\n    axios\n      .patch(`${APIs.dashboardReset}${dashboardResponse.id}/`, request)\n      .then((res) => {\n        getDashboardMetric();\n        enqueueSnackbar(\"Làm mới thành công!\", {\n          variant: \"success\",\n        });\n      })\n      .catch((err) => {\n        enqueueSnackbar(\"Không thể làm mới!\", {\n          variant: \"error\",\n        });\n      });\n  };\n\n  const getBalance = useCallback(\n    (id: number | string) => {\n      axios\n        .get(`${APIs.balanceById}${id}/`)\n        .then((res) => {\n          const data: BotBalance = res.data;\n          setBotBalance(data);\n        })\n        .catch(() => {\n          enqueueSnackbar(\"Không thể lấy được số dư ví!\", {\n            variant: \"error\",\n          });\n        });\n    },\n    [enqueueSnackbar]\n  );\n\n  const reloadDemoBalance = useCallback(\n    (id: number | string) => {\n      axios\n        .get(`${APIs.reloadDemoBalance}${id}/`)\n        .then((res) => {\n          enqueueSnackbar(\"Đặt lại số dư ví DEMO thành công!\", {\n            variant: \"success\",\n          });\n          getBalance(selectedBotAccount.value);\n        })\n        .catch(() => {\n          enqueueSnackbar(\"Đặt lại số dư ví DEMO thất bại!\", {\n            variant: \"error\",\n          });\n        });\n    },\n    [enqueueSnackbar, getBalance, selectedBotAccount.value]\n  );\n\n  const getBotAimMaxMin = useCallback(() => {\n    axios\n      .get(APIs.aim)\n      .then((res) => {\n        console.log(res.data);\n        setBotAimMaxMin(res.data);\n      })\n      .catch((err) => {\n        enqueueSnackbar(\"Lấy mục tiêu thất bại\", { variant: \"error\" });\n      });\n  }, [enqueueSnackbar]);\n\n  const updateBotAimMaxMin = useCallback(() => {\n    const aimMaxMinToUpdate: BotAimMaxMin = {\n      aim_max: botAimMaxMin[0].aim_max,\n      aim_min: botAimMaxMin[0].aim_min,\n    };\n    axios\n      .post(APIs.aim, aimMaxMinToUpdate)\n      .then((res) => {\n        enqueueSnackbar(\"Lưu mục tiêu thành công\", { variant: \"success\" });\n      })\n      .catch((err) => {\n        enqueueSnackbar(\"Lưu mục tiêu thất bại\", { variant: \"error\" });\n      });\n  }, [botAimMaxMin, enqueueSnackbar]);\n\n  const resetBotAimMaxMin = useCallback(() => {\n    const aimMaxMinToUpdate: BotAimMaxMin = {\n      aim_max: 0,\n      aim_min: 0,\n    };\n    axios\n      .post(APIs.aim, aimMaxMinToUpdate)\n      .then((res) => {\n        getBotAimMaxMin();\n        enqueueSnackbar(\"Làm mới mục tiêu thành công\", { variant: \"success\" });\n      })\n      .catch((err) => {\n        enqueueSnackbar(\"Làm mới mục tiêu thất bại\", { variant: \"error\" });\n      });\n  }, [enqueueSnackbar, getBotAimMaxMin]);\n\n  const convertPartnerBotsToPartnerAccountOptions = useCallback(() => {\n    if (partnerBotDatas && partnerBotDatas.length > 0) {\n      const accountOptions = partnerBotDatas.map((botData) => ({\n        value: botData.id,\n        label: botData.botname,\n      }));\n      setAccountOptions(accountOptions);\n    }\n  }, [partnerBotDatas]);\n\n  const showIsDevelopingModal = () => {\n    dispatch(uiActions.updateIsModalOpen(true));\n  };\n\n  useEffect(() => {\n    getAllPartnerBots();\n  }, [getAllPartnerBots]);\n\n  useEffect(() => {\n    getBotAimMaxMin();\n  }, [getBotAimMaxMin]);\n\n  useEffect(() => {\n    getDashboardMetric();\n  }, [getDashboardMetric]);\n\n  useEffect(() => {\n    if (_isEmpty(deferredTransferAmount) && transferState.touched) {\n      setTransferState((prev) => ({\n        ...prev,\n        error: \"Transfer amount cannot be empty\",\n      }));\n    } else if (\n      isTransferByUSDT &&\n      transferState.touched &&\n      +deferredTransferAmount > +botBalance.usdt_balance\n    ) {\n      setTransferState((prev) => ({\n        ...prev,\n        error: \"Transfer amount cannot be greater than balance\",\n      }));\n    } else if (\n      !isTransferByUSDT &&\n      transferState.touched &&\n      +deferredTransferAmount > +botBalance.balance\n    ) {\n      setTransferState((prev) => ({\n        ...prev,\n        error: \"Transfer amount cannot be greater than balance\",\n      }));\n    } else {\n      setTransferState((prev) => ({\n        ...prev,\n        error: null,\n      }));\n    }\n  }, [deferredTransferAmount]);\n\n  useEffect(() => {\n    if (partnerBotDatas && partnerBotDatas.length > 0) {\n      if (selectedAccountType.value === \"LIVE\" && !isPartnerBotInitialized) {\n        getBalance(partnerBotDatas[0].id);\n        const firstBotOption = {\n          value: partnerBotDatas[0].id,\n          label: partnerBotDatas[0].botname,\n        };\n        setSelectedBotAccount(firstBotOption);\n        setIsPartnerBotInitialized(true);\n        dispatch(userActions.updateSelectedBotAccount(firstBotOption));\n      } else if (selectedBotAccount.value) {\n        getBalance(selectedBotAccount.value);\n      }\n\n      convertPartnerBotsToPartnerAccountOptions();\n    }\n  }, [\n    partnerBotDatas,\n    convertPartnerBotsToPartnerAccountOptions,\n    getBalance,\n    selectedAccountType,\n    selectedBotAccount.value,\n    dispatch,\n    isPartnerBotInitialized,\n  ]);\n\n  const isTransferError =\n    !transferState.touched ||\n    (transferState.touched && Boolean(transferState.error));\n\n  return (\n    <>\n      <div\n        className={`grid ${isDesktop ? \"grid-cols-3\" : \"grid-cols-1\"\n          } gap-6 mb-6`}\n      >\n        {/* GRID 1 */}\n        <div className=\"flex flex-col p-6 bg-background-80 rounded-3xl\">\n          {/* Trade Account */}\n          <div className=\"flex mb-8 gap-x-5 text-ink-100/80\">\n            <img\n              className=\"w-[3.5rem]\"\n              src={images.home.gold_wallet}\n              alt=\"BotLambotrade\"\n            />\n            <div>\n              <p className=\"pb-2\">Tài khoản giao dịch</p>\n              <img\n                className=\"w-[7.8125rem]\"\n                src={images.home.fibo_win}\n                alt=\"BotLambotrade\"\n              />\n            </div>\n          </div>\n          {/* Select Trade Account */}\n          <div className=\"p-4 mb-6 bg-ink-05 rounded-2xl\">\n            <HomeBalanceInput\n              selectedAccountType={selectedAccountType}\n              selectedBotAccount={selectedBotAccount}\n              onSelectedAccountTypeChange={onSelectedAccountTypeChange}\n              onSelectedBotAccountChange={onSelectedBotAccountChange}\n              accountOptions={accountOptions}\n              botBalance={botBalance}\n              partnerBotDatas={partnerBotDatas}\n            // reloadDemoBalance={reloadDemoBalance}\n            />\n          </div>\n          {/* Buttons */}\n          <div\n            className={`flex ${!isDesktop && !isTablet ? \"flex-col\" : \"\"\n              } items-center gap-4 mt-auto`}\n          >\n            {partnerBotDatas &&\n              partnerBotDatas.length > 0 &&\n              selectedAccountType.value === \"LIVE\" && (\n                <>\n                  <div\n                    className=\"flex-grow flex items-center justify-center rounded-xl py-4 w-full bg-primary-05 gap-x-[0.625rem] cursor-pointer\"\n                    onClick={() => {\n                      handleOpenTransferPopupModal();\n                    }}\n                  >\n                    <img\n                      className=\"w-[1.5rem]\"\n                      srcSet={images.home.gold_trade}\n                      alt=\"BotLambotrade\"\n                    />\n                    <p className={`font-semibold text-gold`}>Chuyển tiền</p>\n                  </div>\n                  {/* <div\n                  className=\"flex-grow flex items-center justify-center rounded-xl py-4 w-full bg-primary-05 gap-x-[0.625rem] cursor-pointer\"\n                  onClick={() => {\n                    showIsDevelopingModal();\n                  }}\n                >\n                  <img\n                    className=\"w-[1.5rem]\"\n                    srcSet={images.home.gold_trade}\n                    alt=\"BotLambotrade\"\n                  />\n                  <p className={`font-semibold text-gold`}>Quản lý ví</p>\n                </div> */}\n                </>\n              )}\n\n            {partnerBotDatas.length > 0 &&\n              selectedAccountType.value === \"DEMO\" && (\n                <div\n                  className=\"flex-grow flex items-center justify-center rounded-xl py-4 w-full bg-primary-05 gap-x-[0.625rem] cursor-pointer\"\n                  onClick={() => {\n                    reloadDemoBalance(selectedBotAccount.value);\n                  }}\n                >\n                  <img\n                    className=\"w-[1.5rem]\"\n                    srcSet={images.home.reload}\n                    alt=\"BotLambotrade\"\n                  />\n                  <p className={`font-semibold text-gold`}>Làm mới số dư ví</p>\n                </div>\n              )}\n\n            {partnerBotDatas.length === 0 && (\n              <Link\n                to=\"/account_trade\"\n                className=\"flex-grow flex items-center justify-center rounded-xl py-4 w-full bg-primary-05 gap-x-[0.625rem] cursor-pointer\"\n              >\n                <img\n                  className=\"w-[1.5rem]\"\n                  srcSet={images.copy.plus_gold}\n                  alt=\"BotLambotrade\"\n                />\n                <p className={`font-semibold text-gold`}>\n                  Thêm mới tài khoản giao dịch\n                </p>\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {/* GRID 2 */}\n        <div className=\"flex flex-col justify-between p-6 bg-background-80 rounded-3xl\">\n          {/* Lợi nhuận ngày  */}\n          <div className=\"flex mb-8 gap-x-5 text-ink-100/80\">\n            <img\n              className=\"w-[3.5rem] flex-shrink-0\"\n              src={images.home.profit}\n              alt=\"BotLambotrade\"\n            />\n            <div className=\"flex-grow\">\n              <p className=\"pb-1\">Lợi nhuận ngày</p>\n              <p\n                className={`text-3.5xl font-semibold  ${dashboardResponse.current_profit >= 0\n                  ? \"text-green-100\"\n                  : \"text-red-100\"\n                  }`}\n              >\n                {dashboardResponse.current_profit >= 0 ? \"$\" : \"-$\"}\n                {Math.abs(dashboardResponse.current_profit).toLocaleString(\n                  \"en-US\",\n                  options\n                )}\n              </p>\n            </div>\n            <img\n              className=\"cursor-pointer w-[2.75rem]\"\n              src={images.home.bg_reload}\n              alt=\"BotLambotrade\"\n              onClick={() => {\n                // showIsDevelopingModal();\n                // getDashboardMetric();\n                const dashboardRequestId: DashboardResetRequest = {\n                  current_profit: 0,\n                };\n                resetDashboardByField(dashboardRequestId);\n              }}\n            />\n          </div>\n          <hr className=\"mb-8 border-white/10\" />\n\n          {/* Volume ngày */}\n          <div className=\"flex mb-8 gap-x-5 text-ink-100/80\">\n            <img\n              className=\"w-[3.5rem] flex-shrink-0\"\n              src={images.home.volume}\n              alt=\"BotLambotrade\"\n            />\n            <div className=\"flex-grow\">\n              <p className=\"pb-1\">Volume ngày</p>\n              <p className=\"text-teal-100 text-3.5xl font-semibold\">\n                ${dashboardResponse.volume.toLocaleString(\"en-US\", options)}\n              </p>\n            </div>\n            <img\n              className=\"cursor-pointer w-[2.75rem]\"\n              src={images.home.bg_reload}\n              alt=\"BotLambotrade\"\n              onClick={() => {\n                // showIsDevelopingModal();\n                // getDashboardMetric();\n                const dashboardRequestId: DashboardResetRequest = {\n                  volume: 0,\n                };\n                resetDashboardByField(dashboardRequestId);\n              }}\n            />\n          </div>\n          <hr className=\"mb-8 border-white/10\" />\n\n          {/* Win/ Lose */}\n          <div className=\"flex gap-x-5 text-ink-100/80\">\n            <img\n              className=\"w-[3.5rem] flex-shrink-0\"\n              src={images.home.win_lose}\n              alt=\"BotLambotrade\"\n            />\n            <div className=\"flex-grow\">\n              <p className=\"pb-1\">Win/ Lose</p>\n              <p className=\"text-3.5xl font-semibold\">\n                <span className=\"text-green-100\">\n                  {dashboardResponse.total_win}\n                </span>{\" \"}\n                <span className=\"text-black-opacity-40\">/</span>{\" \"}\n                <span className=\"text-red-100\">\n                  {dashboardResponse.total_lose}\n                </span>\n              </p>\n            </div>\n            <img\n              className=\"cursor-pointer w-[2.75rem]\"\n              src={images.home.bg_reload}\n              alt=\"BotLambotrade\"\n              onClick={() => {\n                // showIsDevelopingModal();\n                // getDashboardMetric();\n                const dashboardRequestId: DashboardResetRequest = {\n                  total_win: 0,\n                  total_lose: 0,\n                };\n                resetDashboardByField(dashboardRequestId);\n              }}\n            />\n          </div>\n        </div>\n\n        {/* GRID 3 */}\n        <div className=\"flex flex-col p-6 bg-background-80 rounded-3xl\">\n          {/* Mục tiêu */}\n          <div className=\"flex mb-8 gap-x-5 text-ink-100/80\">\n            <img\n              className=\"w-[3.5rem] flex-shrink-0\"\n              src={images.home.aim}\n              alt=\"BotLambotrade\"\n            />\n            <div>\n              <p className=\"pb-2 font-semibold text-ink-100\">\n                Mục tiêu chốt lợi nhuận ngày\n              </p>\n              <p className=\"3xl:text-sm 2xl:text-xs text-ink-80\">\n                Thiết lập mục tiêu sẽ giúp bạn chốt được lợi nhuận mong muốn và\n                dễ dàng quản lý rủi ro\n              </p>\n            </div>\n          </div>\n          {/* Select Trade Account */}\n          <div>\n            <div className=\"flex items-center justify-between mb-6 cursor-pointer\">\n              <div className=\"flex-grow\">\n                <div className=\"relative\">\n                  <div className=\"absolute flex items-center pt-[6px] pl-3 pointer-events-none\">\n                    <label\n                      htmlFor=\"default-search\"\n                      className=\"mb-2 text-xs text-ink-60\"\n                    >\n                      Chốt lãi\n                    </label>\n                  </div>\n                  {/* <input\n                  type=\"text\"\n                  id=\"default-search\"\n                  className=\"block w-full pt-6 pb-1 pl-3 pr-6 text-xl font-bold text-green-100 border border-ink-20 rounded-xl bg-ink-05 focus:ring-blue-500 focus:border-blue-500 placeholder-black-opacity-40 dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n                  placeholder=\"Chốt lãi\"\n                  value={profitOrderAmount.toLocaleString(undefined, {\n                    minimumFractionDigits: 0,\n                  })}\n                  onChange={(e) => {\n                    const newValue = e.target.value.replace(/\\D/, '');\n                    setProfitOrderAmount(+newValue);\n                  }}\n                  pattern=\"[0-9]*\"\n                  required\n                /> */}\n                  <CurrencyInput\n                    className=\"block w-full pt-6 pb-1 pl-3 pr-6 text-xl font-bold text-green-100 border border-ink-20 rounded-xl bg-ink-05 focus:ring-blue-500 focus:border-blue-500 placeholder-black-opacity-40 dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n                    value={botAimMaxMin[0].aim_max}\n                    onValueChange={handleProfitTakeAmount}\n                    placeholder=\"Mời nhập số tiền\"\n                    // prefix={'$'}\n                    step={1}\n                    allowNegativeValue={false}\n                    decimalsLimit={3}\n                  />\n\n                  <p className=\"absolute flex items-center text-green-100 pointer-events-none top-6 right-3\">\n                    $\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"flex items-center justify-between mb-6 cursor-pointer\">\n              <div className=\"flex-grow\">\n                <div className=\"relative\">\n                  <div className=\"absolute flex items-center pt-[6px] pl-3 pointer-events-none\">\n                    <label\n                      htmlFor=\"default-search\"\n                      className=\"mb-2 text-xs text-ink-60\"\n                    >\n                      Cắt lỗ\n                    </label>\n                  </div>\n                  {/* <input\n                  type=\"text\"\n                  id=\"default-search\"\n                  className=\"block w-full pt-6 pb-1 pl-3 pr-6 text-xl font-bold text-red-100 border border-ink-20 rounded-xl bg-ink-05 focus:ring-blue-500 focus:border-blue-500 placeholder-black-opacity-40 dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n                  placeholder=\"Chốt lãi\"\n                  value={stopLossAmount.toLocaleString(undefined, {\n                    minimumFractionDigits: 0,\n                  })}\n                  onChange={(e) => {\n                    const newValue = e.target.value.replace(/\\D/, '');\n                    setStopLossAmount(+newValue);\n                  }}\n                  pattern=\"[0-9]*\"\n                  required\n                /> */}\n                  <CurrencyInput\n                    className=\"block w-full pt-6 pb-1 pl-3 pr-6 text-xl font-bold text-red-100 border border-ink-20 rounded-xl bg-ink-05 focus:ring-blue-500 focus:border-blue-500 placeholder-black-opacity-40 dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n                    value={botAimMaxMin[0].aim_min}\n                    onValueChange={handleStopLossAmount}\n                    placeholder=\"Mời nhập số tiền\"\n                    // prefix={'$'}\n                    step={1}\n                    allowNegativeValue={false}\n                    decimalsLimit={3}\n                  />\n\n                  <p className=\"absolute flex items-center text-red-100 pointer-events-none top-6 right-3\">\n                    $\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"flex flex-row justify-between items-center\">\n            <div className=\"flex flex-row gap-4\">\n              <p className=\"text-sm\">Chốt lợi nhuận tổng:</p>\n              {\" \"}\n              <p className={`w-fit ${dashboardResponse.profit >= 0\n                ? 'bg-green-100'\n                : 'bg-red-100'\n                } text-sm flex items-center justify-center px-2 rounded-[0.375rem] text-ink-100 leading-5`}>\n                {dashboardResponse.profit >= 0 ? '$' : '-$'}\n                {Math.abs(\n                  dashboardResponse.profit\n                ).toLocaleString('en-US', options)}\n              </p>\n            </div>\n            <img\n              className=\"cursor-pointer w-[2.75rem]\"\n              src={images.home.bg_reload}\n              alt=\"BotLambotrade\"\n              onClick={() => {\n                const dashboardRequestId: DashboardResetRequest = {\n                  volume: 0,\n                };\n                resetDashboardByField(dashboardRequestId);\n              }}\n            />\n          </div>\n          {/* Buttons */}\n          <div\n            className={`flex ${!isDesktop && !isTablet ? \"flex-col\" : \"\"\n              } items-center gap-4 mt-auto`}\n          >\n            <div\n              className=\"flex-grow flex items-center justify-center rounded-xl py-4 w-full bg-primary-05 gap-x-[0.625rem] cursor-pointer\"\n              onClick={resetBotAimMaxMin}\n            >\n              <img\n                className=\"w-[1.5rem]\"\n                srcSet={images.home.reload}\n                alt=\"BotLambotrade\"\n              />\n              <p className={`font-semibold text-gold`}>Làm mới mục tiêu</p>\n            </div>\n            <div\n              className=\"flex-grow flex items-center justify-center rounded-xl py-4 w-full bg-primary-100 background-animation gap-x-[0.625rem] cursor-pointer\"\n              onClick={updateBotAimMaxMin}\n            >\n              <img\n                className=\"w-[1.5rem]\"\n                srcSet={images.home.save_target}\n                alt=\"BotLambotrade\"\n              />\n              <p className={`font-semibold text-background-100`}>\n                Lưu mục tiêu\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <CustomModalWithHeader\n        open={isTransferModalOpen}\n        handleOpen={handleOpenTransferPopupModal}\n        handleClose={handleCloseTransferPopupModal}\n        title=\"Chuyển tiền\"\n        content={\n          <div className=\"flex flex-col px-6 pt-6 pb-6\">\n            <div className=\"flex items-start justify-center gap-6 mb-9\">\n              <div className=\"flex-[1_1_100%] flex flex-col gap-3 text-center\">\n                <p className=\"text-sm font-semibold text-ink-100\">\n                  {isTransferByUSDT ? \"USDT Wallet\" : \"Tài khoản thực\"}\n                </p>\n                <p className=\"text-2xl font-semibold text-ink-100\">\n                  {isTransferByUSDT\n                    ? fixNumber(botBalance.usdt_balance)\n                    : fixNumber(botBalance.balance)}\n                </p>\n              </div>\n              <div\n                className=\"flex-shrink-0 p-3 rounded-full bg-primary-10\"\n                onClick={() => {\n                  setIsTransferByUSDT((prev) => !prev);\n                }}\n              >\n                <img\n                  className=\"w-[1.5rem] cursor-pointer\"\n                  src={images.home.gold_trade}\n                  alt=\"BotLambotrade\"\n                />\n              </div>\n              <div className=\"flex-[1_1_100%] flex flex-col gap-3 text-center\">\n                <p className=\"text-sm font-semibold text-ink-100\">\n                  {isTransferByUSDT ? \"Tài khoản thực\" : \"USDT Wallet\"}\n                </p>\n                <p className=\"text-2xl font-semibold text-ink-100\">\n                  {isTransferByUSDT\n                    ? fixNumber(botBalance.balance)\n                    : fixNumber(botBalance.usdt_balance)}\n                </p>\n              </div>\n            </div>\n\n            <TextInput\n              id=\"transferAmount\"\n              name=\"transferAmount\"\n              type=\"number\"\n              label=\"Số tiền muốn chuyển\"\n              fullWidth\n              value={fixNumber(transferAmount)}\n              // onChange={(e) => {\n              //   setTransferAmount((prev) => ({\n              //     ...prev,\n              //     value: e.target.value,\n              //   }));\n              // }}\n              onValueChange={(value, _, values) => {\n                const valueToSet = value === undefined ? \"\" : value;\n                setTransferAmount(valueToSet);\n                setTransferState((prev) => ({ ...prev, touched: true }));\n              }}\n              onBlur={() => {\n                setTransferState((prev) => ({ ...prev, touched: true }));\n              }}\n              error={transferState.touched && Boolean(transferState.error)}\n              helperText={transferState.touched && transferState.error}\n              button={\n                <CustomButton\n                  onClick={() => {\n                    const transferAmountToSet = isTransferByUSDT\n                      ? botBalance.usdt_balance\n                      : botBalance.balance;\n                    setTransferAmount(transferAmountToSet.toString());\n                    setTransferState({\n                      touched: true,\n                      error: null,\n                    });\n                  }}\n                >\n                  Tất cả\n                </CustomButton>\n              }\n            />\n          </div>\n        }\n        button={\n          <div className=\"p-6\">\n            <CustomButton\n              className={`!p-4 w-full text-base font-bold ${isTransferError ? \"cursor-not-allowed\" : \"\"\n                }`}\n              textClassName=\"font-bold\"\n              onClick={() => {\n                if (transferState.touched && !transferState.error) {\n                  handleTransferUSDT();\n                }\n              }}\n              background={\n                isTransferError ? \"bg-background-60\" : \"bg-primary-100\"\n              }\n              textColor={\n                isTransferError ? \"bg-primary-100\" : \"bg-background-100\"\n              }\n            >\n              Chuyển tiền\n            </CustomButton>\n          </div>\n        }\n      />\n    </>\n  );\n};\n\nexport default HomeGridRowOne;\n","export default function _isEmpty(data: any) {\n  return (\n    data == null ||\n    data == '' ||\n    data == 0 ||\n    (Array.isArray(data) && data.length === 0) ||\n    (Object.keys(data).length === 0 && data.constructor === Object)\n  );\n}\n","import images from 'assets';\nimport HomeWalletSvg from 'svgs/HomeWalletSvg';\nimport { useState, useEffect, useCallback } from 'react';\nimport {\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n} from '@mui/material';\nimport moment from 'moment';\nimport HomeLeftArrowSvg from 'svgs/HomeLeftArrowSvg';\nimport HomeRightArrowSvg from 'svgs/HomeRightArrowGoldSvg';\nimport HomeSelectInput from './HomeSelectInput';\nimport { useAppDispatch, useAppSelector } from 'stores/hooks';\nimport InputSelectOption from 'types/InputSelectOption';\nimport BotSetting, { BotSettingResult } from 'types/BotSetting';\nimport axios from 'axios';\nimport APIs from 'apis';\nimport { uiActions } from 'stores/uiSlice';\nimport GreyButton from 'components/GreyButton';\nimport { useEnqueueSnackbar } from 'hooks/useEnqueueSnackbar';\nimport BotData from 'types/BotData';\nimport DashboardResponse from 'types/responses/DashboardResponse';\nimport { useMediaQuery } from 'react-responsive';\n\nconst INITIAL_SELECTED_OPTION: InputSelectOption = {\n  value: '',\n  label: '',\n};\n\nconst ACCOUNT_TYPES = [\n  {\n    value: 'DEMO',\n    label: 'Tài khoản DEMO',\n  },\n  {\n    value: 'LIVE',\n    label: 'Tài khoản LIVE',\n  },\n];\n\nconst INITIAL_BOT_SETTING_RESULT: BotSettingResult = {\n  id: 0,\n  master: 0,\n  master_name: '',\n  account_type: '',\n  follower: 0,\n  follower_name: '',\n  follower_username: '',\n  o_amount: 0,\n  o_owner: 0,\n  fold_command: 0,\n  status: '',\n  block_status: '',\n  created_at: '',\n  updated_at: '',\n  current_profit: 0,\n  current_date_profit: 0,\n  current_volume: 0,\n  current_date_volume: 0,\n  aim_min: 0,\n  aim_max: 0,\n};\n\nconst INITIAL_DASHBOARD_RESPONSE: DashboardResponse = {\n  id: 0,\n  date: '',\n  owner: 0,\n  current_profit: 0,\n  volume: 0,\n  profit: 0,\n  total_win: 0,\n  total_lose: 0,\n  account_type: '',\n  total_draft: 0,\n  created_at: '',\n  updated_at: '',\n};\n\nconst DAYS = ['T2', 'T3', 'T4', 'T5', 'T6', 'T7', 'CN'];\n\nconst options: Intl.NumberFormatOptions = {\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 3,\n  style: 'decimal',\n};\n\nconst HomeGridRowTwo = () => {\n  const [totalVolume, setTotalVolume] = useState(1500);\n  const [totalProfit, setTotalProfit] = useState(5000);\n  const [masterName, setMasterName] = useState('Lucas Tran');\n  const [calendar, setCalendar] = useState<moment.Moment[][]>([]);\n  const [currentMoment, setCurrentMoment] = useState(moment());\n  const [monthUpDown, setMonthUpDown] = useState(0);\n  const [volumeDate, setVolumeDate] = useState(20000);\n  const [successVolume, setSuccessVolume] = useState(100000);\n\n  // RESPONSIVE\n  const isDesktop = useMediaQuery({\n    query: '(min-width: 1224px)',\n  });\n  const isTablet = useMediaQuery({\n    query: '(min-width: 768px)',\n  });\n  const isMobile = useMediaQuery({\n    query: '(max-width: 767px)',\n  });\n\n  // SETTINGS\n  const [selectedBotSetting, setSelectedBotSetting] =\n    useState<InputSelectOption>(INITIAL_SELECTED_OPTION);\n  const [selectedBotSettingModal, setSelectedBotSettingModal] =\n    useState<BotSettingResult>(INITIAL_BOT_SETTING_RESULT);\n  const [partnerBotDatas, setPartnerBotDatas] = useState<BotData[]>([]);\n\n  const [allBotSettingData, setAllBotSettingData] = useState<BotSetting>({\n    count: 0,\n    next: null,\n    previous: null,\n    results: [],\n  });\n  const [allBotSettingResults, setAllBotSettingResults] = useState<\n    BotSettingResult[]\n  >([]);\n  const [allBotSettingOptions, setAllBotSettingOptions] = useState<\n    InputSelectOption[]\n  >([]);\n\n  // Dashboard\n  const [dashboardResponseMonthSum, setDashboardResponseMonthSum] =\n    useState<DashboardResponse>(INITIAL_DASHBOARD_RESPONSE);\n\n  const [dashboardResponseMonths, setDashboardResponseMonths] = useState<\n    DashboardResponse[]\n  >([INITIAL_DASHBOARD_RESPONSE]);\n\n  // GLOBAL STATES\n  const dispatch = useAppDispatch();\n  const enqueueSnackbar = useEnqueueSnackbar();\n  const selectedBotAccount = useAppSelector(\n    (state) => state.user.selectedBotAccount\n  );\n\n  const onSelectedBotSettingChange = (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    option: InputSelectOption\n  ) => {\n    setSelectedBotSetting(option);\n    if (option.value === -1)\n      setSelectedBotSettingModal(INITIAL_BOT_SETTING_RESULT);\n    for (const botSetting of allBotSettingResults) {\n      if (botSetting.id === option.value) {\n        setSelectedBotSettingModal(botSetting);\n        break;\n      }\n    }\n  };\n\n  const getAllPartnerBots = useCallback(() => {\n    axios\n      .get(APIs.partnerAccount)\n      .then((res) => {\n        const datas: BotData[] = res.data;\n        const partnerBotDatas = datas.filter(\n          (data) => data.status === 'active'\n        );\n        setPartnerBotDatas(partnerBotDatas);\n      })\n      .catch((err) => {\n        enqueueSnackbar('Không thể lấy bot datas', { variant: 'error' });\n      });\n  }, [enqueueSnackbar]);\n\n  const getAllBotSettings = useCallback(() => {\n    if (partnerBotDatas.length > 0) {\n      const followerIds = partnerBotDatas.map((botData) =>\n        botData.id.toString()\n      );\n      axios\n        .get(\n          `${APIs.listCopyTradeSetting}`\n          // `${APIs.listCopyTradeMasterFollowedByFollowerIds}${followerIds.join(\n          //   ','\n          // )}`\n        )\n        .then((res) => {\n          const data: BotSetting = res.data;\n          setAllBotSettingData(data);\n          setAllBotSettingResults(data.results);\n        })\n        .catch(() => {\n          enqueueSnackbar('Không thể lấy bot settings!', {\n            variant: 'error',\n          });\n        });\n    }\n  }, [enqueueSnackbar, partnerBotDatas]);\n\n  const getDashboardMonthSum = useCallback(() => {\n    if (partnerBotDatas.length > 0) {\n      const startOfMonth = currentMoment.startOf('month').format('YYYY-MM-DD');\n      const endOfMonth = currentMoment.endOf('month').format('YYYY-MM-DD');\n      axios\n        .get(`${APIs.dashboardMonthSum}${startOfMonth}/${endOfMonth}`)\n        .then((res) => {\n          const datas: DashboardResponse[] = res.data;\n          if (datas.length > 0) {\n            setDashboardResponseMonthSum(datas[0]);\n          }\n        })\n        .catch(() => {\n          enqueueSnackbar('Không thể lấy dashboard month sum!', {\n            variant: 'error',\n          });\n        });\n    }\n  }, [currentMoment, enqueueSnackbar, partnerBotDatas.length]);\n\n  const getDashboardMonth = useCallback(() => {\n    if (partnerBotDatas.length > 0) {\n      const startOfMonth = currentMoment.startOf('month').format('YYYY-MM-DD');\n      const endOfMonth = currentMoment.endOf('month').format('YYYY-MM-DD');\n      axios\n        .get(`${APIs.dashboardMonth}${startOfMonth}/${endOfMonth}`)\n        .then((res) => {\n          const datas: DashboardResponse[] = res.data;\n          if (datas.length > 0) {\n            setDashboardResponseMonths(datas);\n          }\n        })\n        .catch(() => {\n          enqueueSnackbar('Không thể lấy dashboard month sum!', {\n            variant: 'error',\n          });\n        });\n    }\n  }, [currentMoment, enqueueSnackbar, partnerBotDatas.length]);\n\n  const convertSelectedBotSettingToBotSetting = useCallback(() => {\n    if (selectedBotSetting) {\n      const allBotSettingsOptions = allBotSettingResults.map((botSetting) => ({\n        value: botSetting.id,\n        label: botSetting.master_name,\n      }));\n      allBotSettingsOptions.unshift({\n        value: -1,\n        label: 'None',\n      });\n      setAllBotSettingOptions(allBotSettingsOptions);\n    }\n  }, [allBotSettingResults, selectedBotSetting]);\n\n  const resetCurrentMonth = () => {\n    console.log('Test');\n    setMonthUpDown(0);\n    setCurrentMoment(moment());\n  };\n\n  const handleSubtractOneMonth = () => {\n    setMonthUpDown((prev) => prev - 1);\n    setCurrentMoment(moment().add(monthUpDown - 1, 'month'));\n  };\n\n  const handlePlusOneMonth = () => {\n    setMonthUpDown((prev) => prev + 1);\n    setCurrentMoment(moment().add(monthUpDown + 1, 'month'));\n  };\n\n  useEffect(() => {\n    const startDay = currentMoment.clone().startOf('month').startOf('isoWeek');\n    const endDay = currentMoment.clone().endOf('month').endOf('isoWeek');\n    const startDayMobile = currentMoment.clone().startOf('month');\n    const endDayMobile = currentMoment.clone().endOf('month');\n    const day = startDay.clone().subtract(1, 'day');\n    const dayMobile = startDayMobile.clone().subtract(1, 'day');\n\n    const a = [];\n    if (isDesktop) {\n      // if (deviceType === 'desktop') {\n      console.log('HERE');\n      const daysInWeek = 7;\n      while (day.isBefore(endDay, 'day')) {\n        a.push(\n          Array(daysInWeek)\n            .fill(0)\n            .map(() => day.add(1, 'day').clone())\n        );\n      }\n    } else {\n      console.log('HERE 2');\n      const daysInWeek = 3;\n      while (dayMobile.isBefore(endDayMobile, 'day')) {\n        console.log('AC');\n        a.push(\n          Array(daysInWeek)\n            .fill(0)\n            .map(() => dayMobile.add(1, 'day').clone())\n        );\n      }\n    }\n    console.log('HERE');\n    setCalendar(a);\n  }, [currentMoment, isDesktop, isTablet]);\n\n  useEffect(() => {\n    getAllBotSettings();\n  }, [getAllBotSettings]);\n\n  useEffect(() => {\n    getAllPartnerBots();\n  }, [getAllPartnerBots]);\n\n  useEffect(() => {\n    if (allBotSettingResults.length > 0) {\n      convertSelectedBotSettingToBotSetting();\n    }\n  }, [allBotSettingResults.length, convertSelectedBotSettingToBotSetting]);\n\n  useEffect(() => {\n    getDashboardMonthSum();\n  }, [getDashboardMonthSum]);\n\n  useEffect(() => {\n    getDashboardMonth();\n  }, [getDashboardMonth]);\n\n  const isCurrentMonthSelected =\n    moment().month() === currentMoment.month() &&\n    moment().year() === currentMoment.year();\n\n  return (\n    <div\n      className={`grid ${isDesktop ? 'grid-cols-3' : 'grid-cols-1'} gap-6 mb-6`}\n    >\n      {/* GRID 1 */}\n      <div className=\"bg-background-80 rounded-3xl p-6 flex flex-col\">\n        {/* Master name */}\n        <div className=\"flex items-center gap-x-5 mb-8 text-ink-100/80\">\n          <img\n            className=\"w-[3.5rem] flex-shrink-0\"\n            src={images.home.master_name}\n            alt=\"BotLambotrade\"\n          />\n          <div className=\"flex-grow\">\n            {/* <div className=\"py-2 pl-3 pr-4 bg-ink-05 rounded-2xl\">\n              <div className=\"flex justify-between items-center pb- cursor-pointer\">\n                <div>\n                  <p className=\"pb-1 text-xs text-ink-60\">Tên chuyên gia</p>\n                  <p className=\"text-ink-100\">Lucas Tran</p>\n                </div>\n                <img\n                  className=\"w-[1.5rem]\"\n                  src={images.home.white_dropdown}\n                  alt=\"BotLambotrade\"\n                />\n              </div>\n            </div> */}\n            <HomeSelectInput\n              label=\"Tên chuyên gia\"\n              inputValue={selectedBotSetting}\n              onSelectChange={onSelectedBotSettingChange}\n              options={allBotSettingOptions}\n              isSearchEnabled={false}\n            />\n          </div>\n        </div>\n\n        {/* Account Type */}\n        <div className=\"flex gap-x-5 mb-8 text-ink-100/80\">\n          <img\n            className=\"w-[3.5rem] flex-shrink-0\"\n            src={images.home.account_type}\n            alt=\"BotLambotrade\"\n          />\n          <div className=\"flex flex-col justify-center\">\n            <p className=\"pb-1\">Loại tài khoản</p>\n            <p className=\"text-xl text-ink-100\">\n              {selectedBotSettingModal.id !== 0\n                ? ACCOUNT_TYPES.filter(\n                    (accountType) => accountType.value === 'LIVE'\n                  )[0].label\n                : '---'}\n            </p>\n          </div>\n        </div>\n\n        {/* Loại tài khoản */}\n        <div className=\"flex gap-x-5 mb-8 text-ink-100/80\">\n          <img\n            className=\"w-[3.5rem] flex-shrink-0\"\n            src={images.home.bot_account}\n            alt=\"BotLambotrade\"\n          />\n          <div className=\"flex flex-col justify-center\">\n            <p className=\"mb-1\">Tài khoản giao dịch</p>\n            <p className=\"text-xl text-ink-100\">\n              {!!selectedBotSettingModal.master_name\n                ? selectedBotSettingModal.master_name\n                : '---'}\n            </p>\n          </div>\n        </div>\n\n        {/* Volume Amount */}\n        <div className=\"flex gap-x-5 mb-8 text-ink-100/80\">\n          <img\n            className=\"w-[3.5rem] flex-shrink-0\"\n            src={images.home.volume_amount}\n            alt=\"BotLambotrade\"\n          />\n          <div className=\"flex flex-col justify-center\">\n            <p className=\"mb-1\">Giá trị lệnh</p>\n            <h3 className=\"text-xl text-ink-100 font-semibold\">\n              $\n              {selectedBotSettingModal.o_amount.toLocaleString(\n                'en-US',\n                options\n              )}\n            </h3>\n          </div>\n        </div>\n\n        {/* AIM MAX */}\n        <div className=\"flex gap-x-5 mb-8 text-ink-100/80\">\n          <img\n            className=\"w-[3.5rem] flex-shrink-0\"\n            src={images.home.aim_max}\n            alt=\"BotLambotrade\"\n          />\n          <div className=\"flex flex-col justify-center\">\n            <p className=\"mb-1\">Mục tiêu chốt lãi</p>\n            <h3 className=\"text-xl text-green-100 font-semibold\">\n              {selectedBotSettingModal.aim_max <= 0\n                ? '$0'\n                : `$${selectedBotSettingModal.aim_max}`}\n            </h3>\n          </div>\n        </div>\n\n        {/* AIM MIN */}\n        <div className=\"flex gap-x-5 mb-8 text-ink-100/80\">\n          <img\n            className=\"w-[3.5rem] flex-shrink-0\"\n            src={images.home.aim_min}\n            alt=\"BotLambotrade\"\n          />\n          <div className=\"flex flex-col justify-center\">\n            <p className=\"mb-1\">Mục tiêu cắt lỗ</p>\n            <h3 className=\"text-xl text-red-100 font-semibold\">\n              {selectedBotSettingModal.aim_min <= 0\n                ? '$0'\n                : `$${selectedBotSettingModal.aim_min}`}\n            </h3>\n          </div>\n        </div>\n\n        {/* Status */}\n        <div className=\"flex gap-x-5 mb-8 text-ink-100/80\">\n          <img\n            className=\"w-[3.5rem] flex-shrink-0\"\n            src={images.home.status}\n            alt=\"BotLambotrade\"\n          />\n          <div className=\"flex flex-col justify-center\">\n            <p className=\"mb-1\">Trạng thái</p>\n            <p\n              className={`w-fit px-2 leading-5 rounded-md text-xs text-ink-100 font-semibold ${\n                selectedBotSettingModal.status === 'active'\n                  ? 'bg-green-100'\n                  : 'bg-red-100'\n              }`}\n            >\n              {selectedBotSettingModal.status === 'active'\n                ? 'Đang bật'\n                : 'Đang tắt'}\n            </p>\n          </div>\n        </div>\n      </div>\n\n      {/* GRID 2 */}\n      <div\n        className={`${\n          isDesktop ? 'col-span-2' : ''\n        } bg-background-80 rounded-3xl p-6 `}\n      >\n        <div\n          className={`flex ${\n            isDesktop && isTablet ? 'gap-x-[100px]' : 'flex-col gap-4'\n          } mb-6 text-ink-100/80`}\n        >\n          {/* Tổng Volume */}\n          <div className=\"flex gap-x-5\">\n            <img\n              className=\"w-[3.5rem] flex-shrink-0\"\n              src={images.home.total_volume}\n              alt=\"BotLambotrade\"\n            />\n            <div>\n              <p className=\"mb-1\">Tổng Volume</p>\n              <h3 className=\"text-3.5xl text-teal-100 font-semibold\">\n                $\n                {dashboardResponseMonthSum.volume.toLocaleString(\n                  'en-US',\n                  options\n                )}\n              </h3>\n            </div>\n          </div>\n          {/* Tổng lợi nhuận */}\n          <div className=\"flex gap-x-5\">\n            <img\n              className=\"w-[3.5rem] flex-shrink-0\"\n              src={images.home.total_profit}\n              alt=\"BotLambotrade\"\n            />\n            <div>\n              <p className=\"mb-1\">Tổng lợi nhuận</p>\n              <h3\n                className={`text-3.5xl font-semibold ${\n                  dashboardResponseMonthSum.current_profit >= 0\n                    ? 'text-green-100'\n                    : 'text-red-100'\n                }`}\n              >\n                {dashboardResponseMonthSum.current_profit >= 0 ? '$' : '-$'}\n                {Math.abs(\n                  dashboardResponseMonthSum.current_profit\n                ).toLocaleString('en-US', options)}\n              </h3>\n            </div>\n          </div>\n        </div>\n        {/* Time Table */}\n        <div\n          className={`border border-ink-05 rounded-2xl w-full`}\n        >\n          <div\n            className={`px-4 md:px-6 py-4 flex justify-between items-center`}\n          >\n            <p className=\"text-ink-100 text-base md:text-2xl font-semibold\">\n              Tháng {currentMoment.format('MM/YYYY')}\n            </p>\n            <div className=\"flex items-center gap-4\">\n              {isDesktop && (\n                <GreyButton\n                  buttonClassName={`${isDesktop ? 'px-3' : 'px-[0.5rem]'} ${\n                    isCurrentMonthSelected ? 'opacity-60' : ''\n                  }`}\n                  onClick={resetCurrentMonth}\n                  disabled={isCurrentMonthSelected}\n                >\n                  Hôm nay\n                </GreyButton>\n              )}\n              <div\n                className=\"flex items-center justify-center p-1 md:p-2 xl:p-3 bg-primary-05 rounded-full cursor-pointer\"\n                onClick={handleSubtractOneMonth}\n              >\n                <img\n                  className=\"w-[1.25rem]\"\n                  src={images.home.left_arrow_gold}\n                  alt=\"BotLambotrade\"\n                />\n              </div>\n              <div\n                className=\"flex items-center justify-center p-1 md:p-2 xl:p-3 bg-primary-05 rounded-full cursor-pointer\"\n                onClick={handlePlusOneMonth}\n              >\n                <img\n                  className=\"w-[1.25rem]\"\n                  src={images.home.right_arrow_gold}\n                  alt=\"BotLambotrade\"\n                />\n              </div>\n            </div>\n          </div>\n          {!isDesktop && (\n            <div className=\"px-4 pb-4 w-full border-b border-ink-10\">\n              <GreyButton\n                buttonClassName={`w-full ${\n                  isDesktop || isTablet ? 'px-3' : 'px-[0.5rem]'\n                } ${isCurrentMonthSelected ? 'opacity-60' : ''} text-sm`}\n                onClick={resetCurrentMonth}\n                disabled={isCurrentMonthSelected}\n              >\n                Hôm nay\n              </GreyButton>\n            </div>\n          )}\n\n          {isDesktop && (\n            <div className=\"grid grid-cols-7 text-ink-60 text-sm\">\n              {DAYS.map((day, indexDay, days) => {\n                const isFirstDay = indexDay === 0;\n                const isLastDay = indexDay + 1 === days.length;\n                return (\n                  <p\n                    key={indexDay * Math.random()}\n                    className={`w-full px-3 py-2 ${\n                      isFirstDay\n                        ? 'border-t border-b border-r'\n                        : isLastDay\n                        ? 'border-t border-b'\n                        : 'border-t border-b border-r'\n                    } border-ink-05 text-end`}\n                  >\n                    {day}\n                  </p>\n                );\n              })}\n            </div>\n          )}\n          {calendar.map((week, indexWeek, rowWeek) => (\n            <div\n              key={indexWeek * Math.random()}\n              className={`grid ${\n                isDesktop && isTablet ? 'grid-cols-7' : 'grid-cols-3'\n              } border-collapse rounded-2xl overhidden-hidden`}\n            >\n              {week.map((day, indexDay, rowDay) => {\n                // CHECK INDEX\n                const isLastIndexWeek = indexWeek + 1 === rowWeek.length;\n                const isLastIndexDay = indexDay + 1 === rowDay.length;\n\n                // CHECK DAY\n                const isCurrentMonth = currentMoment.month() === day.month();\n                const isToday =\n                  moment().format('DD') === day.format('DD') &&\n                  moment().month() === day.month();\n\n                const dataAfterFilter = dashboardResponseMonths.filter(\n                  (data) => data.date === day.format('YYYY-MM-DD')\n                );\n\n                let currentData: DashboardResponse;\n                if (dataAfterFilter.length > 0) {\n                  currentData = dataAfterFilter[0];\n                } else {\n                  currentData = INITIAL_DASHBOARD_RESPONSE;\n                }\n                const isProfit = currentData.current_profit > 0;\n                const isDraft = currentData.current_profit === 0;\n                const isLoss = currentData.current_profit < 0;\n                // SUCCESS\n                const profitText =\n                  isProfit &&\n                  '+$' +\n                    Math.abs(currentData.current_profit).toLocaleString(\n                      'en-US',\n                      options\n                    );\n\n                // DRAFT\n                const draftText = isDraft && '$0';\n\n                // FAIL\n                const lossText =\n                  isLoss &&\n                  '-$' +\n                    Math.abs(currentData.current_profit).toLocaleString(\n                      'en-US',\n                      options\n                    );\n\n                const isHavingRecords =\n                  currentData.current_profit !== 0 ||\n                  currentData.total_draft !== 0 ||\n                  currentData.total_lose !== 0 ||\n                  currentData.total_win !== 0;\n                const isCurrentMonthAndSelectedBotAccountNotEmpty =\n                  isCurrentMonth &&\n                  selectedBotAccount.value !== '' &&\n                  isHavingRecords;\n\n                return (\n                  <div\n                    key={indexDay * Math.random()}\n                    className={`flex flex-col ${\n                      !isLastIndexDay ? 'border-r' : ''\n                    }  ${\n                      !isLastIndexWeek ? 'border-b' : ''\n                    } border border-ink-05 py-2 px-3 m-0 relative w-full text-end`}\n                  >\n                    <p\n                      className={`mb-1 ${\n                        !isToday || !isCurrentMonth\n                          ? 'bg-primary-100 bg-clip-text text-transparent'\n                          : 'text-ink-100'\n                      } text-sm`}\n                    >\n                      {isCurrentMonth ? day.format('D') : ' '}\n                    </p>\n                    <p\n                      className={`${\n                        isProfit\n                          ? 'text-green-100'\n                          : isDraft\n                          ? 'bg-primary-100 bg-clip-text text-transparent'\n                          : 'text-red-100'\n                      } text-xs ${\n                        isCurrentMonthAndSelectedBotAccountNotEmpty\n                          ? ''\n                          : 'opacity-0'\n                      }`}\n                    >\n                      {isCurrentMonthAndSelectedBotAccountNotEmpty\n                        ? `${\n                            isProfit\n                              ? profitText\n                              : isDraft\n                              ? draftText\n                              : lossText\n                          }`\n                        : 'o'}\n                    </p>\n                    <p\n                      className={`text-teal-100 text-xs ${\n                        isCurrentMonthAndSelectedBotAccountNotEmpty\n                          ? ''\n                          : 'opacity-0'\n                      }`}\n                    >\n                      {isCurrentMonthAndSelectedBotAccountNotEmpty\n                        ? `$${currentData.volume.toLocaleString(\n                            'en-US',\n                            options\n                          )}`\n                        : 'o'}\n                    </p>\n                  </div>\n                );\n              })}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HomeGridRowTwo;\n","import { useFormik } from 'formik';\nimport React, { FC, useEffect, useState } from 'react';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport * as Yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\nimport images from 'assets';\nimport HomeWelcome from './HomeWelcome';\nimport HomeGridRowOne from './HomeGridRowOne';\nimport HomeGridRowTwo from './HomeGridRowTwo';\n\nconst Home: FC = () => {\n  return (\n    <>\n      <Helmet>\n        <title>BotLambotrade | Home</title>\n      </Helmet>\n      <HomeWelcome />\n      <HomeGridRowOne />\n      <HomeGridRowTwo />\n    </>\n  );\n};\n\nexport default Home;\n","export default function convertToThreeDecimalPlaces(num: string | number) {\n  const numDecimalPlaces = (num.toString().split('.')[1] || '').length;\n  if (numDecimalPlaces > 3) {\n    return (+num).toFixed(3);\n  } else {\n    return num;\n  }\n}\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z\"\n}), 'CloseOutlined');"],"names":["_ref","children","className","background","textClassName","textColor","icon","iconClassName","type","onClick","_jsxs","concat","_jsx","src","alt","inputClassName","inputName","searchInput","setSearchInput","htmlFor","fill","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","id","name","placeholder","value","onChange","e","target","required","label","isLabelOutside","prefix","error","helperText","helperTextEnd","decimalsLimit","decimalScale","fixedDecimalLength","fullWidth","searchIcon","symbol","autoComplete","button","isInputDisabled","searchIconClassName","containerClassName","symbolClassName","helperClassName","helperTextClassName","helperTextEndClassName","resetValue","onValueChange","onBlur","onFocus","onKeyDown","onKeyUp","onMouseOver","onMouseLeave","isInputFocus","setInputFocus","useState","isInputHover","setIsInputHover","isPasswordShowing","setIsPasswordShowing","inputRef","useRef","passwordType","inputSpacingWithLabel","_inputRef$current2","current","focus","_inputRef$current3","CurrencyInput","_","values","disabled","allowNegativeValue","disableAbbreviations","decimalSeparator","groupSeparator","maxLength","ref","_inputRef$current4","Cancel","handlePasswordShown","_inputRef$current","prev","ICONS","success","images","warning","TEXT_COLORS","TITLES","React","message","variant","closeSnackBar","_Fragment","useEnqueueSnackbar","enqueueSnackbar","closeSnackbar","useSnackbar","useCallback","options","content","key","undefined","CustomSnackbar","handleCloseSnackbar","HomeWelcome","user","useAppSelector","state","isDesktop","useMediaQuery","query","isTablet","username","srcSet","open","title","handleOpen","handleClose","CustomModal","isOpen","CloseOutlined","OPTIONS","minimumFractionDigits","maximumFractionDigits","style","fixNumber","toLocaleString","popupClassName","isSearchEnabled","inputValue","onSelectChange","setOpen","SearchInput","map","option","index","ACCOUNT_TYPES","selectedAccountType","onSelectedAccountTypeChange","selectedBotAccount","onSelectedBotAccountChange","accountOptions","botBalance","partnerBotDatas","HomeSelectInput","length","demo_balance","balance","INITIAL_BOT_BALANCE","usdt_balance","INITIAL_BOT_AIM_MAX_MIN","aim_min","aim_max","created_at","updated_at","INITIAL_SELECT_OPTIONS","INITIAL_SELECTED_OPTION","INITIAL_SELECTED_ACCOUNT_TYPE","INITIAL_INPUT_VALUE_STATE","touched","HomeGridRowOne","setBotBalance","setSelectedAccountType","setSelectedBotAccount","setAccountOptions","setPartnerBotDatas","botAimMaxMin","setBotAimMaxMin","isPartnerBotInitialized","setIsPartnerBotInitialized","dashboardResponse","setDashboardResponse","date","owner","current_profit","volume","profit","total_win","total_lose","account_type","total_draft","isTransferModalOpen","setIsTransferModalOpen","isTransferByUSDT","setIsTransferByUSDT","transferAmount","setTransferAmount","transferState","setTransferState","deferredTransferAmount","useDeferredValue","dispatch","useAppDispatch","handleOpenTransferPopupModal","getBalance","getAllPartnerBots","axios","APIs","then","res","data","filter","status","catch","err","getDashboardMetric","datas","resetDashboardByField","request","reloadDemoBalance","getBotAimMaxMin","console","log","updateBotAimMaxMin","aimMaxMinToUpdate","resetBotAimMaxMin","convertPartnerBotsToPartnerAccountOptions","botData","botname","useEffect","Array","isArray","Object","keys","constructor","firstBotOption","userActions","isTransferError","Boolean","HomeBalanceInput","Link","to","Math","abs","handleProfitTakeAmount","valueToSet","botAimMaxMinToUpdate","convertedValue","convertToThreeDecimalPlaces","step","handleStopLossAmount","CustomModalWithHeader","handleCloseTransferPopupModal","TextInput","CustomButton","transferAmountToSet","toString","handleTransferUSDT","transferData","PartnerAcc_id","amount","INITIAL_BOT_SETTING_RESULT","master","master_name","follower","follower_name","follower_username","o_amount","o_owner","fold_command","block_status","current_date_profit","current_volume","current_date_volume","INITIAL_DASHBOARD_RESPONSE","DAYS","HomeGridRowTwo","totalVolume","setTotalVolume","totalProfit","setTotalProfit","masterName","setMasterName","calendar","setCalendar","currentMoment","setCurrentMoment","moment","monthUpDown","setMonthUpDown","volumeDate","setVolumeDate","successVolume","setSuccessVolume","selectedBotSetting","setSelectedBotSetting","selectedBotSettingModal","setSelectedBotSettingModal","allBotSettingData","setAllBotSettingData","count","next","previous","results","allBotSettingResults","setAllBotSettingResults","allBotSettingOptions","setAllBotSettingOptions","dashboardResponseMonthSum","setDashboardResponseMonthSum","dashboardResponseMonths","setDashboardResponseMonths","getAllBotSettings","getDashboardMonthSum","startOfMonth","startOf","format","endOfMonth","endOf","getDashboardMonth","convertSelectedBotSettingToBotSetting","allBotSettingsOptions","botSetting","unshift","resetCurrentMonth","startDay","clone","endDay","startDayMobile","endDayMobile","day","subtract","dayMobile","a","daysInWeek","isBefore","push","add","isCurrentMonthSelected","month","year","onSelectedBotSettingChange","accountType","GreyButton","buttonClassName","handleSubtractOneMonth","handlePlusOneMonth","indexDay","days","isFirstDay","isLastDay","random","week","indexWeek","rowWeek","rowDay","isLastIndexWeek","isLastIndexDay","isCurrentMonth","isToday","dataAfterFilter","currentData","isProfit","isDraft","isLoss","profitText","draftText","lossText","isHavingRecords","isCurrentMonthAndSelectedBotAccountNotEmpty","Home","Helmet","num","split","toFixed","createSvgIcon"],"sourceRoot":""}