{"version":3,"file":"static/js/120.40db9f37.chunk.js","mappings":"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","sources":["components/CustomInputSpinner/index.tsx","components/CustomRadio/index.tsx","components/SearchInput/index.tsx","pages/BotTradeSetting/BotTradeSettingButton.tsx","components/CustomNumberInputOnlyFocus/index.tsx","components/CustomRadio/CustomRadioNoBackground.tsx","svgs/BotTableZoomOut.tsx","svgs/TableCancelSvg.tsx","pages/BotTradeSetting/BotTradeSettingViewTableRow.tsx","components/TextArea/index.tsx","pages/BotTradeSetting/Countdown.tsx","pages/BotTradeSetting/CountdownManager.tsx","pages/BotTradeSetting/BotTradeSettingView.tsx","pages/BotTradeSetting/index.tsx","pages/CopyTradeZoom/CopyTradeZoomSelectInput.tsx","utils/ConvertToThreeDecimalPlaces.tsx"],"sourcesContent":["import images from 'assets';\nimport React, { FC, useState } from 'react';\nimport CurrencyInput from 'react-currency-input-field';\nimport TextInput from 'components/TextInput';\nimport { CurrencyInputOnChangeValues } from 'react-currency-input-field/dist/components/CurrencyInputProps';\nimport CustomButton from 'components/CustomButton';\n\ninterface CustomInputSpinnerProps {\n  // Text Input props\n  id?: string;\n  name: string;\n  label?: React.ReactNode;\n  isLabelOutside?: boolean;\n  placeholder?: string;\n  value: string | number | readonly string[] | undefined;\n  error?: boolean;\n  helperText?: React.ReactNode;\n  helperTextEnd?: React.ReactNode;\n  fullWidth?: boolean;\n  searchIcon?: string;\n  symbol?: string;\n  prefix?: string;\n  icon?: string | undefined;\n  button?: React.ReactNode;\n  isInputDisabled?: boolean;\n  PREFIX_VALUE?: string;\n  VALUES?: (string | number)[];\n  inputSpinnerWrapperClassName?: string;\n  containerClassName?: string;\n  inputClassName?: string;\n  symbolClassName?: string;\n  helperClassName?: string;\n  helperTextClassName?: string;\n  helperTextEndClassName?: string;\n  resetValue?: () => void;\n  onFixedValueChange: (value: string | number) => void;\n  onChange?: React.ChangeEventHandler<HTMLTextAreaElement | HTMLInputElement>;\n  handleValueMinusOne: () => void;\n  handleValuePlusOne: () => void;\n  onValueChange?:\n    | ((\n        value: string | undefined,\n        name?: string | undefined,\n        values?: CurrencyInputOnChangeValues | undefined\n      ) => void)\n    | undefined;\n  onBlur?: React.FocusEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n  onFocus?: React.FocusEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n  onKeyDown?: React.KeyboardEventHandler<\n    HTMLTextAreaElement | HTMLInputElement\n  >;\n  onKeyUp?: React.KeyboardEventHandler<HTMLTextAreaElement | HTMLInputElement>;\n  onMouseOver?: React.MouseEventHandler<HTMLTextAreaElement | HTMLInputElement>;\n  onMouseLeave?: React.MouseEventHandler<\n    HTMLTextAreaElement | HTMLInputElement\n  >;\n}\n\nconst CustomInputSpinner: FC<CustomInputSpinnerProps> = ({\n  id,\n  name,\n  label,\n  isLabelOutside = false,\n  placeholder,\n  value,\n  error,\n  helperText,\n  helperTextEnd,\n  fullWidth,\n  searchIcon,\n  symbol,\n  icon,\n  button,\n  isInputDisabled,\n  prefix = '$ ',\n  PREFIX_VALUE = '+',\n  VALUES = [],\n  inputSpinnerWrapperClassName = '',\n  containerClassName = '',\n  inputClassName = '',\n  symbolClassName = '',\n  helperClassName = '',\n  helperTextClassName = '',\n  helperTextEndClassName = '',\n  onFixedValueChange,\n  resetValue,\n  onChange,\n  handleValueMinusOne,\n  handleValuePlusOne,\n  onValueChange,\n  onBlur,\n  onFocus,\n  onKeyDown,\n  onKeyUp,\n  onMouseOver,\n  onMouseLeave,\n}) => {\n  const [isMinusFocus, setIsMinusFocus] = useState(false);\n  const [isPlusFocus, setIsPlusFocus] = useState(false);\n  // border border-ink-20 hover:bg-ink-20 hover:border-ink-10\n\n  return (\n    <div>\n      {/* INPUT */}\n      <div\n        className={`flex justify-between gap-x-3 ${inputSpinnerWrapperClassName}`}\n      >\n        <div\n          onClick={handleValueMinusOne}\n          className={`p-3 flex-shrink-0 flex items-center justify-center rounded-xl text-ink-60 cursor-pointer ${\n            isMinusFocus ? 'border-primary' : 'border-input-ink bg-ink-05'\n          }`}\n          onMouseOver={(e) => {\n            setIsMinusFocus(true);\n          }}\n          onMouseLeave={(e) => {\n            setIsMinusFocus(false);\n          }}\n        >\n          {isMinusFocus ? (\n            <img\n              className=\"w-[2rem]\"\n              src={images.input.minus_gold}\n              alt=\"BotLambotrade\"\n            />\n          ) : (\n            <img\n              className=\"w-[2rem]\"\n              src={images.input.minus}\n              alt=\"BotLambotrade\"\n            />\n          )}\n        </div>\n        <TextInput\n          containerClassName=\"flex-grow font-bold\"\n          id={id}\n          name={name}\n          label={label}\n          type=\"number\"\n          value={value}\n          onValueChange={onValueChange}\n          placeholder={placeholder}\n          prefix={prefix}\n          inputClassName=\"!py-[0.875rem] text-center text-xl\"\n          fullWidth={true}\n          onBlur={onBlur}\n          onFocus={onFocus}\n          onKeyDown={onKeyDown}\n          onKeyUp={onKeyUp}\n          onMouseOver={onMouseOver}\n          onMouseLeave={onMouseLeave}\n          // containerClassName=\"w-[25rem]\"\n          // icon={images.input.eye}\n          // button={<CustomButton>Button</CustomButton>}\n        />\n        <div\n          onClick={handleValuePlusOne}\n          className={`p-3 flex-shrink-0 flex items-center justify-center rounded-xl cursor-pointer ${\n            isPlusFocus ? 'border-primary' : 'border-input-ink'\n          }`}\n          onMouseOver={(e) => {\n            setIsPlusFocus(true);\n          }}\n          onMouseLeave={(e) => {\n            setIsPlusFocus(false);\n          }}\n        >\n          <img\n            className=\"w-[2rem]\"\n            src={images.copy.plus_gold}\n            alt=\"BotLambotrade\"\n          />\n        </div>\n      </div>\n\n      {/* BUTTON */}\n      {VALUES.length > 0 && (\n        <div className=\"mt-4 grid grid-flow-col auto-cols-fr gap-x-2\">\n          {VALUES.map((value, index) => {\n            let renderText;\n            if (typeof value === 'string') {\n              renderText = value;\n            } else {\n              renderText = PREFIX_VALUE + value;\n            }\n            return (\n              <div\n                key={index * Math.random() * 100}\n                className=\"flex-grow xl:px-3 xl:py-3 px-2 py-2 text-center bg-ink-05 hover:bg-ink-20 text-ink-100 rounded-xl cursor-pointer\"\n                onClick={() => {\n                  if (onFixedValueChange) {\n                    onFixedValueChange(value);\n                  }\n                }}\n              >\n                {renderText}\n              </div>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CustomInputSpinner;\n","import React, { FC } from 'react';\n\ninterface CustomRadioProps {\n  checked: boolean;\n  label: string;\n  containerClassName?: string;\n  onClick: React.MouseEventHandler<HTMLDivElement> | undefined;\n}\n\nconst CustomRadio: FC<CustomRadioProps> = ({\n  checked,\n  label,\n  containerClassName = '',\n  onClick,\n}) => {\n  return (\n    <div\n      className={`flex items-center gap-x-[0.625rem] rounded-xl p-4 cursor-pointer radio-container-hover ${\n        checked ? 'border-primary-z-0 bg-primary-05' : 'border-input-ink'\n      } ${containerClassName}`}\n      onClick={onClick}\n    >\n      <div className=\"p-[0.125rem]\">\n        <div\n          className={`p-[0.3125rem] flex items-center justify-center z-[100] ${\n            checked ? 'border-radio-primary' : 'border-radio-ink'\n          }`}\n        >\n          <div\n            className={`rounded-full w-[0.625rem] h-[0.625rem] ${\n              checked ? 'bg-primary-100' : ''\n            }`}\n          />\n        </div>\n      </div>\n      <label className={`text-ink-100 cursor-pointer`}>{label}</label>\n    </div>\n  );\n};\n\nexport default CustomRadio;\n","import React, { FC } from 'react';\n\ntype SearchInputProps = {\n  inputClassName?: string;\n  inputName: string;\n  searchInput: string;\n  setSearchInput: React.Dispatch<React.SetStateAction<string>>;\n};\n\nconst SearchInput: FC<SearchInputProps> = ({\n  inputClassName,\n  inputName,\n  searchInput,\n  setSearchInput,\n}) => {\n  return (\n    <div>\n      <label\n        htmlFor=\"default-search\"\n        className=\"mb-2 text-sm font-medium sr-only text-ink-100\"\n      >\n        Search\n      </label>\n      <div className=\"relative\">\n        <div className=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n          <svg\n            aria-hidden=\"true\"\n            className=\"w-5 h-5 text-black-opacity-100\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n            ></path>\n          </svg>\n        </div>\n        <input\n          type=\"search\"\n          id={inputName}\n          name={inputName}\n          className={`${inputClassName} block py-3 pl-9 pr-8 text-sm text-black-opacity-40 border border-ink-20 rounded-xl bg-ink-05 focus:ring-blue-500 focus:border-blue-500 placeholder-black-opacity-40 dark:focus:ring-blue-500 dark:focus:border-blue-500`}\n          placeholder=\"Tìm kiếm\"\n          value={searchInput}\n          onChange={(e) => {\n            setSearchInput(e.target.value);\n          }}\n          required\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default SearchInput;\n","import React, { FC, useState } from 'react';\n\ninterface BotTradeSettingButtonProps {\n  children: React.ReactNode;\n  className?: string;\n  classNameHover?: string;\n  background?: string;\n  backgroundHover?: string;\n  textClassName?: string;\n  textClassNameHover?: string;\n  textColor?: string;\n  textColorHover?: string;\n  icon?: string;\n  iconHover?: string;\n  type?: 'button' | 'submit' | 'reset' | undefined;\n  onClick?: React.MouseEventHandler<HTMLButtonElement> | undefined;\n}\n\nconst BotTradeSettingButton: FC<BotTradeSettingButtonProps> = ({\n  children,\n  className = '',\n  classNameHover = '',\n  background = 'bg-primary-05',\n  backgroundHover = 'bg-primary-100',\n  textClassName = '',\n  textClassNameHover = '',\n  textColor = 'bg-primary-100',\n  textColorHover = 'bg-background-100',\n  icon,\n  iconHover,\n  type = 'button',\n  onClick,\n}) => {\n  console.log(onClick);\n  console.log('CLICKED');\n  const [isButtonHover, setIsButtonHover] = useState(false);\n\n  return (\n    <button\n      className={`flex justify-center items-center gap-x-[0.625rem] px-3 py-[0.625rem] rounded-xl ${\n        isButtonHover ? backgroundHover : background\n      } ${isButtonHover ? classNameHover : className}`}\n      type={type}\n      onClick={onClick}\n      onMouseOver={() => {\n        setIsButtonHover(true);\n      }}\n      onMouseLeave={() => {\n        setIsButtonHover(false);\n      }}\n    >\n      {icon && iconHover && (\n        <img src={isButtonHover ? iconHover : icon} alt=\"BotLambotrade\" />\n      )}\n      <p\n        className={`${isButtonHover ? textClassNameHover : textClassName} ${\n          isButtonHover ? textColorHover : textColor\n        } bg-clip-text text-transparent font-bold`}\n      >\n        {children}\n      </p>\n    </button>\n  );\n};\n\nexport default BotTradeSettingButton;\n","import { FormikBag, FormikProps, FormikValues } from 'formik';\nimport React, { FC, useRef, useState } from 'react';\nimport CurrencyInput from 'react-currency-input-field';\nimport { CurrencyInputOnChangeValues } from 'react-currency-input-field/dist/components/CurrencyInputProps';\n\ninterface CustomNumberInputWithFocusProps {\n  id?: string;\n  name?: string;\n  label?: React.ReactNode;\n  isLabelOutside?: boolean;\n  placeholder?: string;\n  prefix?: string;\n  value: string | number | readonly string[] | undefined;\n  error?: boolean;\n  isInputDisabled?: boolean;\n  helperText?: React.ReactNode;\n  helperTextEnd?: React.ReactNode;\n  decimalsLimit?: number;\n  decimalScale?: number;\n  fixedDecimalLength?: number;\n  fullWidth?: boolean;\n  maxLength?: number;\n  searchIcon?: string;\n  symbol?: string;\n  icon?: string | undefined;\n  button?: React.ReactNode;\n  containerClassName?: string;\n  inputClassName?: string;\n  symbolClassName?: string;\n  helperClassName?: string;\n  helperTextClassName?: string;\n  helperTextEndClassName?: string;\n  resetValue?: () => void;\n  onChange?: React.ChangeEventHandler<HTMLTextAreaElement | HTMLInputElement>;\n  onValueChange?:\n    | ((\n        value: string | undefined,\n        name?: string | undefined,\n        values?: CurrencyInputOnChangeValues | undefined\n      ) => void)\n    | undefined;\n  onBlur?: React.FocusEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n  onFocus?: React.FocusEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n  onKeyDown?: React.KeyboardEventHandler<\n    HTMLTextAreaElement | HTMLInputElement\n  >;\n  onKeyUp?: React.KeyboardEventHandler<HTMLTextAreaElement | HTMLInputElement>;\n  onMouseOver?: React.MouseEventHandler<HTMLTextAreaElement | HTMLInputElement>;\n  onMouseLeave?: React.MouseEventHandler<\n    HTMLTextAreaElement | HTMLInputElement\n  >;\n}\n\nconst CustomNumberInputWithFocus: FC<CustomNumberInputWithFocusProps> = ({\n  id,\n  name,\n  label,\n  isLabelOutside = false,\n  placeholder,\n  prefix,\n  value,\n  error,\n  helperText,\n  helperTextEnd,\n  decimalsLimit = 3,\n  decimalScale,\n  fixedDecimalLength,\n  fullWidth,\n  maxLength,\n  searchIcon,\n  symbol,\n  icon,\n  button,\n  isInputDisabled,\n  containerClassName = '',\n  inputClassName = '',\n  symbolClassName = '',\n  helperClassName = '',\n  helperTextClassName = '',\n  helperTextEndClassName = '',\n  resetValue,\n  onChange,\n  onValueChange,\n  onBlur,\n  onFocus,\n  onKeyDown,\n  onKeyUp,\n  onMouseOver,\n  onMouseLeave,\n}) => {\n  const [isInputFocus, setInputFocus] = useState(false);\n  const [isInputHover, setIsInputHover] = useState(false);\n\n  return (\n    <CurrencyInput\n      id={id}\n      name={name}\n      className={`w-full overflow-hidden text-ellipsis whitespace-nowrap bg-transparent caret-yellow-500 focus:outline-none ${\n        !isInputFocus && !value && label && !isLabelOutside\n          ? 'placeholder-transparent'\n          : 'placeholder-ink-20'\n      } ${inputClassName}`}\n      value={value}\n      placeholder={placeholder}\n      onChange={onChange}\n      onValueChange={(value, _, values) => {\n        if (onValueChange) {\n          onValueChange(value, _, values);\n        }\n      }}\n      onBlur={(e) => {\n        if (onBlur) {\n          onBlur(e);\n        }\n        setInputFocus(false);\n      }}\n      onFocus={(e) => {\n        if (onFocus) {\n          onFocus(e);\n        }\n        setInputFocus(true);\n      }}\n      onKeyDown={onKeyDown}\n      onKeyUp={onKeyUp}\n      onMouseOver={(e) => {\n        if (onMouseOver) {\n          onMouseOver(e);\n        }\n        setIsInputHover(true);\n      }}\n      onMouseLeave={(e) => {\n        if (onMouseLeave) {\n          onMouseLeave(e);\n        }\n        setIsInputHover(false);\n      }}\n      prefix={prefix}\n      inputMode='text'\n      disabled={isInputDisabled}\n      allowNegativeValue={false}\n      decimalsLimit={decimalsLimit}\n      disableAbbreviations={true}\n      decimalSeparator=\".\"\n      groupSeparator=\",\"\n      maxLength={maxLength}\n    />\n  );\n};\n\nexport default CustomNumberInputWithFocus;\n","import React, { FC } from 'react';\n\ninterface CustomRadioNoBackgroundProps {\n  checked: boolean;\n  label: string;\n  containerClassName?: string;\n  onClick: React.MouseEventHandler<HTMLDivElement> | undefined;\n}\n\nconst CustomRadioNoBackground: FC<CustomRadioNoBackgroundProps> = ({\n  checked,\n  label,\n  containerClassName = '',\n  onClick,\n}) => {\n  return (\n    <div\n      className={`flex items-center gap-x-[0.625rem] rounded-xl cursor-pointer ${containerClassName}`}\n      onClick={onClick}\n    >\n      <div className=\"p-[0.125rem]\">\n        <div\n          className={`p-[0.3125rem] flex items-center justify-center z-[100] ${\n            checked ? 'border-radio-primary' : 'border-radio-ink'\n          }`}\n        >\n          <div\n            className={`rounded-full w-[0.625rem] h-[0.625rem] ${\n              checked ? 'bg-primary-100' : ''\n            }`}\n          />\n        </div>\n      </div>\n      <label className={`text-ink-100 cursor-pointer select-none`}>{label}</label>\n    </div>\n  );\n};\n\nexport default CustomRadioNoBackground;\n","import React, { FC } from 'react';\nimport { ISvgIcon } from 'types';\n\nconst BotTableZoomOut: FC<ISvgIcon> = ({\n  width = '24',\n  height = '24',\n  fill = 'white',\n  className = '',\n  onClick = () => {},\n}) => {\n  return (\n    <svg\n      width={width}\n      height={height}\n      viewBox=\"0 0 24 24\"\n      fill={fill}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={className}\n      onClick={onClick}\n    >\n      <path\n        d=\"M20.2935 2.29302C20.481 2.10547 20.7353 2.00005 21.0006 2C21.2656 2.00009 21.5198 2.10538 21.7073 2.29283C22.0979 2.6833 22.098 3.31648 21.7075 3.70705L17.4145 8.00004L20.0005 8.00004C20.5528 8.00004 21.0005 8.44774 21.0005 9.00002C21.0005 9.55231 20.5528 10 20.0005 10L15.0006 10C14.4483 10 14.0005 9.55231 14.0006 9.00002L14.0006 4.00001C14.0006 3.44773 14.4483 3.00003 15.0006 3.00003C15.5528 3.00003 16.0005 3.44773 16.0005 4.00001V6.58601L20.2935 2.29302Z\"\n        fill={fill}\n      />\n      <path\n        d=\"M3.9877 14.0122H8.98771C9.53999 14.0122 9.9877 14.46 9.9877 15.0122L9.9877 20.0122C9.9877 20.5645 9.53995 21.0122 8.98767 21.0122C8.43539 21.0122 7.98768 20.5645 7.98768 20.0122L7.98768 17.4262L3.69469 21.7192C3.30717 22.0935 2.69278 22.0935 2.30527 21.7192C1.90805 21.3355 1.89703 20.7025 2.2807 20.3052L6.5737 16.0122H3.9877C3.43542 16.0122 2.98772 15.5645 2.98772 15.0122C2.98772 14.4599 3.43542 14.0122 3.9877 14.0122Z\"\n        fill={fill}\n      />\n    </svg>\n  );\n};\n\nexport default BotTableZoomOut;\n","import React, { FC } from 'react';\nimport { ISvgIcon } from 'types';\n\nconst TableCancelSvg: FC<ISvgIcon> = ({\n  width = '32',\n  height = '32',\n  fill = 'white',\n  className = '',\n}) => {\n  return (\n    <svg\n      width={width}\n      height={height}\n      viewBox=\"0 0 32 32\"\n      fill={fill}\n      className={className}\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M8.39052 21.7239C7.86983 22.2446 7.86983 23.0888 8.39052 23.6095C8.91122 24.1302 9.75544 24.1302 10.2761 23.6095L16 17.8856L21.7239 23.6095C22.2446 24.1302 23.0888 24.1302 23.6095 23.6095C24.1302 23.0888 24.1302 22.2446 23.6095 21.7239L17.8856 16L23.6095 10.2761C24.1302 9.75544 24.1302 8.91122 23.6095 8.39052C23.0888 7.86983 22.2446 7.86983 21.7239 8.39052L16 14.1144L10.2761 8.39053C9.75544 7.86983 8.91122 7.86983 8.39052 8.39053C7.86983 8.91122 7.86983 9.75544 8.39052 10.2761L14.1144 16L8.39052 21.7239Z\"\n        fill={fill}\n      />\n    </svg>\n  );\n};\n\nexport default TableCancelSvg;\n","import images from 'assets';\nimport CustomNumberInputWithFocus from 'components/CustomNumberInputOnlyFocus';\nimport React, { FC, useState } from 'react';\nimport { CurrencyInputOnChangeValues } from 'react-currency-input-field/dist/components/CurrencyInputProps';\n\ninterface BotTradeSettingViewTableRowProps {\n  row: number;\n  onDeleteRow: () => void;\n}\n\nconst BotTradeSettingViewTableRow: FC<BotTradeSettingViewTableRowProps> = ({\n  row,\n  onDeleteRow,\n}) => {\n  const [isHovered, setIsHovered] = useState(false);\n\n  const handleMouseEnter = () => {\n    setIsHovered(true);\n  };\n\n  const handleMouseLeave = () => {\n    setIsHovered(false);\n  };\n\n  return (\n    <div\n      className=\"left-0 sticky rt-th w-[7.375rem] max-w-[7.375rem] p-4 flex-[100_0_auto] bg-background-80 border-r border-ink-10 z-[100] text-sm cursor-pointer overflow-visible whitespace-nowrap text-ellipsis\"\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n    >\n      {row <= 1  ? (\n        `Giá trị lệnh ${row + 1}`\n      ) : isHovered ? (\n        <div className=\"flex items-center gap-1\" onClick={onDeleteRow}>\n          <img\n            src={images.bot.delete_gold}\n            alt=\"BotLambotrade\"\n            className=\"w-[1.5rem]\"\n          />\n          <p>Xoá</p>\n        </div>\n      ) : (\n        `Giá trị lệnh ${row + 1}`\n      )}\n    </div>\n  );\n};\n\nexport default BotTradeSettingViewTableRow;\n","import { Cancel } from '@mui/icons-material';\nimport React, { FC, useRef, useState, useEffect } from 'react';\n\ninterface TextInputProps {\n  id?: string;\n  name: string;\n  label?: React.ReactNode;\n  isLabelOutside?: boolean;\n  type: React.InputHTMLAttributes<unknown>['type'];\n  placeholder?: string;\n  prefix?: string;\n  value: string | number | readonly string[] | undefined;\n  error?: boolean;\n  isInputDisabled?: boolean;\n  helperText?: React.ReactNode;\n  helperTextEnd?: React.ReactNode;\n  decimalsLimit?: number;\n  decimalScale?: number;\n  fixedDecimalLength?: number;\n  fullWidth?: boolean;\n  searchIcon?: string;\n  symbol?: string;\n  icon?: string | undefined;\n  button?: React.ReactNode;\n  searchIconClassName?: string;\n  containerClassName?: string;\n  inputClassName?: string;\n  symbolClassName?: string;\n  helperClassName?: string;\n  helperTextClassName?: string;\n  helperTextEndClassName?: string;\n  resetValue?: () => void;\n  onChange?: React.ChangeEventHandler<HTMLTextAreaElement | HTMLInputElement>;\n  onValueChange?:\n  | ((\n    value: string | undefined,\n    name?: string | undefined,\n    values?: any,\n  ) => void)\n  | undefined;\n  onBlur?: React.FocusEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n  onFocus?: React.FocusEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n  onKeyDown?: React.KeyboardEventHandler<\n    HTMLTextAreaElement | HTMLInputElement\n  >;\n  onKeyUp?: React.KeyboardEventHandler<HTMLTextAreaElement | HTMLInputElement>;\n  onMouseOver?: React.MouseEventHandler<HTMLTextAreaElement | HTMLInputElement>;\n  onMouseLeave?: React.MouseEventHandler<\n    HTMLTextAreaElement | HTMLInputElement\n  >;\n}\n\nconst TextArea: FC<TextInputProps> = ({\n  id,\n  name,\n  label,\n  isLabelOutside = false,\n  placeholder,\n  prefix,\n  type = 'text',\n  value,\n  error,\n  helperText,\n  helperTextEnd,\n  decimalsLimit = 3,\n  decimalScale,\n  fixedDecimalLength,\n  fullWidth,\n  searchIcon,\n  symbol,\n  icon,\n  button,\n  isInputDisabled,\n  searchIconClassName = '',\n  containerClassName = '',\n  inputClassName = '',\n  symbolClassName = '',\n  helperClassName = '',\n  helperTextClassName = '',\n  helperTextEndClassName = '',\n  resetValue,\n  onChange,\n  onValueChange,\n  onBlur,\n  onFocus,\n  onKeyDown,\n  onKeyUp,\n  onMouseOver,\n  onMouseLeave,\n}) => {\n  const [isInputFocus, setInputFocus] = useState(false);\n  const [isInputHover, setIsInputHover] = useState(false);\n  const [isPasswordShowing, setIsPasswordShowing] = useState(false);\n  const inputRef = useRef<HTMLTextAreaElement>(null);\n\n  const handlePasswordShown = () => {\n    inputRef.current?.focus();\n    setIsPasswordShowing((prev) => !prev);\n  };\n\n  const inputSpacingWithLabel =\n    label && !isLabelOutside ? 'pt-[1.625rem] pb-[0.375rem]' : 'py-4';\n\n  const resizeTextArea = () => {\n    if (inputRef.current) {\n      inputRef.current.style.height = 'auto';\n      inputRef.current.style.height = `${inputRef.current.scrollHeight}px`;\n    }\n  };\n\n  useEffect(() => {\n    resizeTextArea();\n  }, [value]);\n\n  return (\n    <div\n      className={`relative ${fullWidth ? 'w-full' : ''} ${containerClassName}`}\n    >\n      {!!label && isLabelOutside && (\n        <div className={`mb-2 cubic-bezier`}>\n          <label\n            className={`overflow-hidden text-ellipsis whitespace-nowrap small-caps`}\n            onClick={() => {\n              inputRef.current?.focus();\n            }}\n          >\n            {label}\n          </label>\n        </div>\n      )}\n      {!!label && !isLabelOutside && (\n        <label\n          className={`cubic-bezier absolute left-0 top-0  ${icon || button ? 'w-[85%]' : 'w-[70%]'\n            } overflow-hidden text-ellipsis whitespace-nowrap ${!isInputFocus && !value && value !== 0\n              ? 'pl-3 pr-3 py-4 text-base text-ink-40'\n              : 'pl-3 pr-3 py-[0.375rem] text-xs text-ink-60'\n            }`}\n          onClick={() => {\n            inputRef.current?.focus();\n          }}\n        >\n          {label}\n        </label>\n      )}\n      {!!searchIcon && (\n        <div className=\"absolute left-3 top-[50%] translate-y-[-50%]\">\n          <img className={`w-[1.5rem] ${searchIconClassName}`} src={searchIcon} alt=\"BotLambotrade\" />\n        </div>\n      )}\n\n      <div\n        className={`${!searchIcon ? 'pl-3 pr-3' : 'pl-10 pr-3'\n          } flex justify-between items-center gap-x-3 rounded-xl ${isInputDisabled\n            ? 'border-input-ink bg-ink-10'\n            : error\n              ? 'border-input-red'\n              : isInputFocus || isInputHover\n                ? 'border-primary'\n                : 'border-input-ink'\n          }`}\n      >\n        <div className=\"relative z-10 flex-grow flex justify-between items-center\">\n          <textarea\n            ref={inputRef}\n            id={id}\n            name={name}\n            className={`${inputSpacingWithLabel} w-full overflow-hidden text-ellipsis whitespace-nowrap bg-transparent caret-input focus:outline-none ${!isInputFocus && !value && label && !isLabelOutside\n                ? 'placeholder-transparent'\n                : 'placeholder-ink-20'\n              } ${inputClassName}`}\n            value={value}\n            placeholder={placeholder}\n            onChange={(e) => {\n              if (onChange) onChange(e);\n              resizeTextArea();\n            }}\n            onBlur={(e) => {\n              if (onBlur) {\n                onBlur(e);\n              }\n              setInputFocus(false);\n            }}\n            onFocus={(e) => {\n              if (onFocus) {\n                onFocus(e);\n              }\n              setInputFocus(true);\n            }}\n            onKeyDown={onKeyDown}\n            onKeyUp={onKeyUp}\n            onMouseOver={(e) => {\n              if (onMouseOver) {\n                onMouseOver(e);\n              }\n              setIsInputHover(true);\n            }}\n            onMouseLeave={(e) => {\n              if (onMouseLeave) {\n                onMouseLeave(e);\n              }\n              setIsInputHover(false);\n            }}\n            disabled={isInputDisabled}\n          />\n\n          {symbol && (\n            <span className={`${inputSpacingWithLabel} ${symbolClassName}`}>\n              {symbol}\n            </span>\n          )}\n        </div>\n\n        {((!!value && resetValue) || !!icon || !!button) && (\n          <div className=\"z-10 flex justify-end items-center gap-x-[1.25rem]\">\n            {!!value && resetValue && (\n              <div\n                className={`${button || icon ? 'input-icon-seperator' : ''} ${isInputFocus || isInputHover ? 'opacity-100' : 'opacity-50'\n                  }`}\n                onClick={(e) => {\n                  if (resetValue) {\n                    resetValue();\n                    inputRef.current?.focus();\n                  }\n                }}\n              >\n                <Cancel className=\"w-[1.5rem] !fill-ink-60 cursor-pointer\" />\n              </div>\n            )}\n            {!!icon && (\n              <div className={`${button ? 'input-icon-seperator' : ''}`}>\n                <img\n                  className={`w-[1.5rem] cursor-pointer`}\n                  src={icon}\n                  alt=\"BotLambotrade\"\n                  onClick={handlePasswordShown}\n                />\n              </div>\n            )}\n            {!!button && <div className=\"py-[0.375rem]\">{button}</div>}\n          </div>\n        )}\n      </div>\n      {(!!helperText || !!helperTextEnd) && (\n        <div className={`px-3 pt-2 flex justify-between ${helperClassName}`}>\n          <p\n            className={`${isInputDisabled\n                ? 'text-ink-80'\n                : error\n                  ? 'text-red-100'\n                  : 'text-ink-80'\n              } text-sm ${helperTextClassName}`}\n          >\n            {helperText}\n          </p>\n          <p className={`text-ink-100 text-sm ${helperTextEndClassName}`}>\n            {helperTextEnd}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TextArea;\n","import React, { useEffect, useState } from \"react\";\n\ninterface FollowBotSchedule {\n    id: number;\n    followbotschedule_name: string;\n    followbotid: number[];\n    status: string;\n    hour_of_day: number;\n    minute_of_day: number;\n    created_at: string;\n    updated_at: string;\n}\n\ninterface CountdownProps {\n    foundObject: FollowBotSchedule;\n    onCountdownEnd: () => void;\n}\n\nconst Countdown: React.FC<CountdownProps> = ({ foundObject, onCountdownEnd }) => {\n    const [timeLeft, setTimeLeft] = useState<number | null>(null);\n\n    useEffect(() => {\n        if (!foundObject) return;\n\n        const calculateTimeLeft = () => {\n            const now = new Date();\n            const targetTime = new Date();\n            targetTime.setHours(foundObject.hour_of_day, foundObject.minute_of_day, 0, 0);\n            if (targetTime <= now) {\n                targetTime.setDate(targetTime.getDate() + 1);\n            }\n            return targetTime.getTime() - now.getTime();\n        };\n\n        const updateCountdown = () => {\n            const initialTimeLeft = calculateTimeLeft();\n            setTimeLeft(initialTimeLeft);\n        };\n\n        const intervalId = setInterval(() => {\n            setTimeLeft(prevTimeLeft => {\n                if (prevTimeLeft && prevTimeLeft <= 0) {\n                    clearInterval(intervalId);\n                    onCountdownEnd();\n                    return null;\n                }\n                return prevTimeLeft && prevTimeLeft - 1000;\n            });\n        }, 1000);\n\n        updateCountdown();\n\n        return () => clearInterval(intervalId);\n    }, [foundObject, onCountdownEnd]);\n\n    if (timeLeft === null || timeLeft <= 0) {\n        return null;\n    }\n\n    const hours = Math.floor((timeLeft / (1000 * 60 * 60)) % 24);\n    const minutes = Math.floor((timeLeft / (1000 * 60)) % 60);\n    const seconds = Math.floor((timeLeft / 1000) % 60);\n\n    return (\n        <div>{`${hours}:${minutes}:${seconds}`}</div>\n    );\n};\n\nexport default Countdown;\n","import { useEffect, useState } from \"react\";\nimport Countdown from \"./Countdown\";\n\ninterface FollowBotSchedule {\n    id: number;\n    followbotschedule_name: string;\n    followbotid: number[];\n    status: string;\n    hour_of_day: number;\n    minute_of_day: number;\n    created_at: string;\n    updated_at: string;\n}\n\ninterface CountdownManagerProps {\n    schedules: FollowBotSchedule[];\n    onCountdownEnd: (schedule: FollowBotSchedule) => void;\n}\n\nconst CountdownManager: React.FC<CountdownManagerProps> = ({ schedules, onCountdownEnd }) => {\n    const [sortedSchedules, setSortedSchedules] = useState<FollowBotSchedule[]>([]);\n    const [currentSchedule, setCurrentSchedule] = useState<FollowBotSchedule | null>(null);\n\n    useEffect(() => {\n        const now = new Date();\n\n        // Sắp xếp các đối tượng dựa trên thời gian hiện tại\n        const sorted = schedules.sort((a, b) => {\n            const timeA = new Date();\n            timeA.setHours(a.hour_of_day, a.minute_of_day, 0, 0);\n            if (timeA <= now) {\n                timeA.setDate(timeA.getDate() + 1);\n            }\n\n            const timeB = new Date();\n            timeB.setHours(b.hour_of_day, b.minute_of_day, 0, 0);\n            if (timeB <= now) {\n                timeB.setDate(timeB.getDate() + 1);\n            }\n\n            return timeA.getTime() - timeB.getTime();\n        });\n\n        setSortedSchedules(sorted);\n        setCurrentSchedule(sorted.length > 0 ? sorted[0] : null);\n    }, [schedules]);\n\n    const handleCountdownEnd = (schedule: FollowBotSchedule) => {\n        if (sortedSchedules.length > 0) {\n            onCountdownEnd(schedule);\n            // Lấy đối tượng tiếp theo từ danh sách sortedSchedules\n            const nextIndex = sortedSchedules.findIndex(s => s.id === schedule.id) + 1;\n            if (nextIndex < sortedSchedules.length) {\n                setCurrentSchedule(sortedSchedules[nextIndex]);\n            } else {\n                setCurrentSchedule(null); // Không có đối tượng tiếp theo\n            }\n        }\n    };\n\n    return (\n        <div>\n            {currentSchedule && (\n                <div\n                    style={{\n                        width: '70px',\n                        overflow: 'hidden'\n                    }}\n                    className={`flex justify-center px-2 rounded-[0.375rem] text-xs text-ink-100 leading-5 ${currentSchedule.status === 'start' ? 'bg-green-100' : 'bg-red-100'}`}\n                >\n                    <Countdown\n                        foundObject={currentSchedule}\n                        onCountdownEnd={() => handleCountdownEnd(currentSchedule)}\n                    />\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default CountdownManager;\n","import { CloseOutlined } from \"@mui/icons-material\";\nimport { Tooltip } from \"@mui/material\";\nimport APIs from \"apis\";\nimport images from \"assets\";\nimport axios from \"axios\";\nimport CustomButton from \"components/CustomButton\";\nimport CustomInputSpinner from \"components/CustomInputSpinner\";\nimport CustomModal from \"components/CustomModal\";\nimport CustomNumberInputWithFocus from \"components/CustomNumberInputOnlyFocus\";\nimport CustomRadio from \"components/CustomRadio\";\nimport CustomRadioNoBackground from \"components/CustomRadio/CustomRadioNoBackground\";\nimport CustomSwitch from \"components/CustomSwitch\";\nimport CustomValidateModel from \"components/CustomValidateModal\";\nimport GoldButton from \"components/GoldButton\";\nimport GreyButton from \"components/GreyButton\";\nimport SelectInput from \"components/SelectInput\";\nimport TextInput from \"components/TextInput\";\nimport { useFormik } from \"formik\";\nimport { useEnqueueSnackbar } from \"hooks/useEnqueueSnackbar\";\nimport moment from \"moment\";\nimport CopyTradeZoomSelectInput from \"pages/CopyTradeZoom/CopyTradeZoomSelectInput\";\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { CurrencyInputOnChangeValues } from \"react-currency-input-field/dist/components/CurrencyInputProps\";\nimport ReactPaginate from \"react-paginate\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ActionMeta, SingleValue } from \"react-select\";\nimport { animated, useSpring } from \"react-spring\";\nimport { Column, usePagination, useTable } from \"react-table\";\nimport { useAppDispatch, useAppSelector } from \"stores/hooks\";\nimport { uiActions } from \"stores/uiSlice\";\nimport { userActions } from \"stores/userSlice\";\nimport BotTableZoomIn from \"svgs/BotTableZoomIn\";\nimport BotTableZoomOut from \"svgs/BotTableZoomOut\";\nimport TableCancelSvg from \"svgs/TableCancelSvg\";\nimport AutoBotManagementList from \"types/AutoBotManagementList\";\nimport AutoBotSetting, { AutoBotSettingResult } from \"types/AutoBotSetting\";\nimport AutoBotSettingUpdate from \"types/AutoBotSettingUpdate\";\nimport { AutoBotSignalTelegram } from \"types/AutoBotSignalTelegram\";\nimport { BotAllData } from \"types/BotAllData\";\nimport { BotBalance } from \"types/BotBalance\";\nimport BotData from \"types/BotData\";\nimport BotSignalPersonal from \"types/BotSignalPersonal\";\nimport CustomValidateModelProps from \"types/CustomValidateProps\";\nimport InputSelectOption from \"types/InputSelectOption\";\nimport AutoBotSettingRequest from \"types/requests/AutoBotSettingRequest\";\nimport convertToThreeDecimalPlaces from \"utils/ConvertToThreeDecimalPlaces\";\nimport * as Yup from \"yup\";\nimport BotTradeSettingButton from \"./BotTradeSettingButton\";\nimport BotTradeSettingViewTableRow from \"./BotTradeSettingViewTableRow\";\nimport TextArea from \"components/TextArea\";\nimport CountdownManager from \"./CountdownManager\";\n\n// type OrderValue = {\n//   [key: string]: {\n//     [key: string]: number;\n//   };\n// };\ntype OrderValue = {\n  [key: string]: (number | string)[];\n};\n\ninterface FormikValueType {\n  configName: string;\n  youngProfit?: any;\n  secondAction: number;\n  autoFillInDemo: boolean;\n  young_loss?: any;\n  amountPerOrder: number;\n  orderValue: OrderValue;\n  orderValueText: string;\n  increaseType: number;\n  stepType: number;\n  aimMin: number;\n  aimMax: number;\n  status: string;\n  reverse: boolean;\n  isSignal: boolean;\n  conditionFire: boolean;\n  fireOne: number;\n  fireTwo: number;\n  fireThree: number;\n  fireFour: number;\n  isShareConfig: boolean;\n  isMasterConfig: boolean;\n  isTelegramConfig: boolean;\n}\n\ninterface TooltipToggle {\n  [x: string | number]: boolean;\n}\n\ntype SelectedIdsType = {\n  [key: string]: boolean;\n};\n\nconst STATUSES_MAP = {\n  active: \"Đang bật\",\n  inactive: \"Đang tắt\",\n};\n\nconst PAGE_SIZE_OPTIONS: InputSelectOption[] = [\n  { value: 10, label: \"10/page\" },\n  { value: 20, label: \"20/page\" },\n  { value: 30, label: \"30/page\" },\n  { value: 40, label: \"40/page\" },\n];\n\nconst PLUS_VALUES = [5, 10, 20, 50, 100, \"All\"];\nconst MULTIPLY_VALUES = [2, 5, 10, 20, 40, 100];\nconst OPTIONS = [\n  {\n    value: 10,\n    name: \"Ten\",\n  },\n  {\n    value: 15,\n    name: \"Fifteen\",\n  },\n  {\n    value: 20,\n    name: \"Twenty\",\n  },\n  {\n    value: 25,\n    name: \"Twenty-five\",\n  },\n];\n\nconst INITIAL_BOT_BALANCE = {\n  balance: 1,\n  demo_balance: 1,\n  usdt_balance: 1,\n};\n\nconst INITIAL_SELECT_OPTIONS: InputSelectOption[] = [\n  {\n    value: \"\",\n    label: \"\",\n  },\n];\n\nconst INITIAL_SELECTED_OPTION: InputSelectOption = {\n  value: \"\",\n  label: \"\",\n};\n\nconst INITIAL_SELECTED_ACCOUNT_TYPE: InputSelectOption = {\n  value: \"LIVE\",\n  label: \"Tài khoản LIVE\",\n};\n\nconst INITIAL_FORMIK_VALUES: FormikValueType = {\n  configName: \"\",\n  youngProfit: null,\n  secondAction: 20,\n  young_loss: null,\n  autoFillInDemo: false,\n  amountPerOrder: 1,\n  orderValue: {},\n  orderValueText: '',\n  aimMin: 1000,\n  aimMax: 1000,\n  increaseType: 1,\n  stepType: 1,\n  status: \"active\",\n  reverse: false,\n  isSignal: true,\n  conditionFire: false,\n  fireOne: 1,\n  fireTwo: 1,\n  fireThree: 1,\n  fireFour: 1,\n  isShareConfig: false,\n  isMasterConfig: false,\n  isTelegramConfig: false,\n};\n\nconst ACCOUNT_TYPES = [\n  {\n    value: \"DEMO\",\n    label: \"Tài khoản DEMO\",\n  },\n  {\n    value: \"LIVE\",\n    label: \"Tài khoản LIVE\",\n  },\n];\n\nconst MANAGEMENT_LIST = {\n  DEU_LENH: \"Đều lệnh\",\n  MARTINGALE: \"Martingale (Gấp thếp)\",\n  VICTOR: \"Victor đa tầng\",\n  FIBO: \"Fibo đa tầng\",\n  CUSTOM: \"Custom autowin\",\n};\n\nconst BUDGET_MANAGEMENT_OPTIONS: InputSelectOption[] = [\n  {\n    value: 1,\n    label: \"Đều lệnh\",\n  },\n  {\n    value: 2,\n    label: \"Martingale (Gấp thếp)\",\n  },\n  {\n    value: 3,\n    label: \"Victor đa tầng\",\n  },\n  {\n    value: 4,\n    label: \"Fibo đa tầng\",\n  },\n  {\n    value: 5,\n    label: \"Custom autowin\",\n  },\n];\n\nconst INCREASE_TYPE_OPTIONS = [\n  {\n    value: 1,\n    label: \"Tăng giá trị khi thua\",\n  },\n  {\n    value: 2,\n    label: \"Tăng giá trị khi thắng\",\n  },\n  {\n    value: 3,\n    label: \"Luôn luôn tăng giá trị\",\n  },\n];\n\nexport interface ICopyTradeSettingFormik {\n  accountType: string;\n  email: string;\n  balance: number;\n  masterName: string;\n  amountPerOrder: number;\n  multiply: number;\n  takeProfit: number;\n  stopLoss: number;\n}\n\nconst INITIAL_BOT_SETTING_RESULT: AutoBotSettingResult = {\n  id: 0,\n  config_name: \"\",\n  follower: 0,\n  follower_name: \"\",\n  follower_username: \"\",\n  account_type: \"\",\n  young_profit: null,\n  young_loss: null,\n  second_action: 0,\n  budgetmanagement_id: 0,\n  budgetmanagement_name: \"\",\n  o_amount: 0,\n  order_value: {},\n  orderValueText: '',\n  aim_min: 0,\n  aim_max: 0,\n  increase_type: 1,\n  step_type: 1,\n  current_profit: 0,\n  current_date_profit: 0,\n  current_volume: 0,\n  current_date_volume: 0,\n  total_win: 0,\n  total_lose: 0,\n  status: \"\",\n  block_status: \"\",\n  o_owner: 0,\n  auto_fillindemo: false,\n  signal_id: 0,\n  singal_name: \"\",\n  signalpersonal_id: 0,\n  signalpersonal_name: \"\",\n  reverse: false,\n  condition_fire: false,\n  fire_one: 0,\n  fire_two: 0,\n  fire_three: 0,\n  fire_four: 0,\n  created_at: \"\",\n  updated_at: \"\",\n  date: \"\",\n  is_master: false,\n};\n\nconst COLUMNS_ARR = Array(30)\n  .fill(0)\n  .map((_, index) => index);\n\nconst CELL_WIDTH = 90;\nconst BASE_CELL_WIDTH = 120;\nconst MIN_WIDTH = CELL_WIDTH * 30 + BASE_CELL_WIDTH;\n\nconst options: Intl.NumberFormatOptions = {\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 3,\n  style: \"decimal\",\n};\n\ninterface FollowBotSchedule {\n  id: number;\n  followbotschedule_name: string;\n  followbotid: number[];\n  status: string;\n  hour_of_day: number;\n  minute_of_day: number;\n  created_at: string;\n  updated_at: string;\n}\n\ninterface TypeSearchUser {\n  label: string\n  value: number\n}\n\nconst BotTradeSettingView = () => {\n  const [selectedIds, setSelectedIds] = useState<SelectedIdsType>({});\n  const [selectAll, setSelectAll] = useState(0);\n  const [refetch, setRefetch] = useState(0)\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [followbotschedule, setFollowbotschedule] = useState<FollowBotSchedule[]>([])\n\n  // ! BOT\n  const [allBotDatas, setAllBotDatas] = useState<BotAllData[]>([]);\n  const [partnerBotDatas, setPartnerBotDatas] = useState<BotData[]>([]);\n  const [botBalance, setBotBalance] = useState<BotBalance>(INITIAL_BOT_BALANCE);\n  const [selectedAccountType, setSelectedAccountType] =\n    useState<InputSelectOption>(INITIAL_SELECTED_ACCOUNT_TYPE);\n  const [selectedBotAccount, setSelectedBotAccount] =\n    useState<InputSelectOption>(INITIAL_SELECTED_OPTION);\n  const [selectedMasterAccount, setSelectedMasterAccount] =\n    useState<InputSelectOption>(INITIAL_SELECTED_OPTION);\n  const [isUpdate, setIsUpdate] = useState(0)\n  const [isMasterAccountValid, setIsMasterAccountValid] = useState(false);\n  const [accountOptions, setAccountOptions] = useState<InputSelectOption[]>([]);\n  const [allBotAccountOptions, setAllBotAccountOptions] = useState<\n    InputSelectOption[]\n  >([]);\n\n  // ! INITIAL PARTNER BOT USEFFECT\n  const [isPartnerBotInitialized, setIsPartnerBotInitialized] = useState(false);\n  const [isAllBotInitialized, setIsAllBotInitialized] = useState(false);\n\n  // ! SETTINGS\n  const [botSettingData, setAutoBotSettingData] = useState<AutoBotSetting>({\n    count: 0,\n    next: null,\n    previous: null,\n    results: [],\n  });\n  const [allBotSettingResults, setAllBotSettingResults] = useState<\n    AutoBotSettingResult[]\n  >([]);\n  const userData = useAppSelector((state) => state.user.user);\n  const [isDeletingByList, setIsDeletingByList] = useState(false);\n\n  // ! MODAL\n  const [isUpsertModalOpen, setIsUpsertModalOpen] = useState(false);\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [isInformationModalOpen, setIsInformationModalOpen] = useState(false);\n  const [isUpsertZoomTableOpen, setIsUpsertZoomTableOpen] = useState(false);\n  // -- Xem hướng dẫn\n  const [isGuidePopupOpen, setGuidePopup] = useState(false);\n\n  // ! PAGINATION\n  const [selectedPageSizeOption, setSelectedPageSizeOption] =\n    useState<InputSelectOption>(PAGE_SIZE_OPTIONS[0]);\n  const [page, setPage] = useState(0);\n  const [totalPages, setTotalPages] = useState(10);\n  const menuRef = useRef<HTMLDivElement>(null);\n  const [isPrevHover, setIsPrevHover] = useState(false);\n  const [isNextHover, setIsNextHover] = useState(false);\n\n  // ! RESPONSIVE\n  const isDesktop = useMediaQuery({\n    query: \"(min-width: 1224px)\",\n  });\n  const isTablet = useMediaQuery({\n    query: \"(min-width: 768px)\",\n  });\n  const isMobile = useMediaQuery({\n    query: \"(max-width: 767px)\",\n  });\n\n  // ! MODAL VALIDATE\n  const [modalAttributes, setModalAttributes] =\n    useState<CustomValidateModelProps>({\n      isOpen: false,\n      icon: \"\",\n      headingMessage: \"\",\n      message: \"\",\n      buttonMessage: \"\",\n      handleOpen: () => { },\n      handleClose: () => { },\n    });\n  const [isAmountPerOrderAmountFocus, setIsAmountPerOrderAmountFocus] =\n    useState(false);\n\n  // ! FORMIK RELATED STATES\n  const [formikValues, setFormikValues] = useState<FormikValueType>(\n    INITIAL_FORMIK_VALUES\n  );\n  const [selectedAutoBotSettingResult, setSelectedAutoBotSettingResult] =\n    useState<AutoBotSettingResult>(INITIAL_BOT_SETTING_RESULT);\n\n  const [searchUser, setSearchUser] = useState('')\n  const [reSearch, setResearch] = useState(0)\n  const [successUser, setSuccessUser] = useState<null | TypeSearchUser>(null)\n  const [selectedGift, setSelectedGift] = useState<AutoBotSettingResult | null>(null)\n\n  // -- BUGGET\n  const [selectedBotCapitalManagement, setSelectedBotCapitalManagement] =\n    useState<InputSelectOption>(BUDGET_MANAGEMENT_OPTIONS[0]);\n  const [botCapitalManagementOptions, setBotCapitalManagementOptions] =\n    useState<InputSelectOption[]>(BUDGET_MANAGEMENT_OPTIONS);\n\n  // -- INCRESE TYPE\n  const [selectedIncreaseType, setSelectedIncreaseType] =\n    useState<InputSelectOption>(INCREASE_TYPE_OPTIONS[0]);\n\n  // -- SIGNAL BOT LIST\n  const [selectedSignalBot, setSelectedSignalBot] = useState<InputSelectOption>(\n    INITIAL_SELECTED_OPTION\n  );\n  const [signalBotOptions, setSignalBotOptions] = useState<InputSelectOption[]>(\n    []\n  );\n\n  // -- SIGNAL PERSONAL LIST\n  const [selectedSignalPersonal, setSelectedSignalPersonal] =\n    useState<InputSelectOption>(INITIAL_SELECTED_OPTION);\n  const [signalPersonalOptions, setSignalPersonalOptions] = useState<\n    InputSelectOption[]\n  >([]);\n\n  const [isEditing, setIsEditing] = useState(false);\n  const [isSettingCapitalManagement, setIsSettingCapitalManagement] =\n    useState(true);\n  const [signalError, setSignalError] = useState(\"\");\n\n  // ! ANIMATIONS\n  const animationSettingCapitalManagement = useSpring({\n    to: {\n      opacity: isSettingCapitalManagement ? 1 : 0,\n      transform: isSettingCapitalManagement\n        ? \"translateX(0%)\"\n        : \"translateX(-100%)\",\n    },\n  });\n\n  const animationUpsertModalMobile = useSpring({\n    to: {\n      opacity: isUpsertModalOpen ? 1 : 0,\n      transform: isUpsertModalOpen ? \"translateX(0%)\" : \"translateX(-100%)\",\n    },\n  });\n\n  const animationSettingMethod = useSpring({\n    to: {\n      opacity: isSettingCapitalManagement ? 0 : 1,\n      transform: isSettingCapitalManagement\n        ? \"translateX(100%)\"\n        : \"translateX(0%)\",\n    },\n  });\n\n  // ! TABLE\n  const [tableAccountTypeOptions, setTableAccountTypeOptions] = useState<\n    (InputSelectOption | null)[]\n  >(new Array(allBotSettingResults.length).fill(null));\n\n  // ! CREATE TABLE\n  const [totalCreateTableRows, setTotalCreateTableRows] = useState(\n    Array(1)\n      .fill(0)\n      .map((_, index) => index)\n  );\n\n  // ! HOOKS\n  const dispatch = useAppDispatch();\n  const enqueueSnackbar = useEnqueueSnackbar();\n  const navigate = useNavigate();\n  const scrollElement = useRef<HTMLDivElement>(null);\n\n  const data = React.useMemo<AutoBotSettingResult[]>(\n    () => allBotSettingResults,\n    [allBotSettingResults]\n  );\n\n  const updateStatusById = (schedule: FollowBotSchedule) => {\n    setAllBotSettingResults((prev) => {\n      const updatedResults = prev.map((e) =>\n        schedule.followbotid.includes(e.id)\n          ? { ...e, status: schedule.status === \"start\" ? \"active\" : \"inactive\" }\n          : e\n      );\n      return updatedResults;\n    });\n    // setIsUpdate(prev => prev + 1); // Trigger re-render\n  };\n\n  // ! Tooltips\n  const [isTooltipOpen, setIsTooltipOpen] = useState<TooltipToggle>({});\n\n  const handleTooltipOpen = useCallback((rowIndex: string | number) => {\n    if (!isTooltipOpen[rowIndex]) {\n      setIsTooltipOpen((prevState) => ({\n        [rowIndex]: true,\n      }));\n    }\n  }, []);\n\n  const handleTooltipClose = (rowIndex: string | number) => {\n    // console.log(\"handleTooltipClose\");\n    if (isTooltipOpen[rowIndex]) {\n      setIsTooltipOpen((prevState) => ({\n        [rowIndex]: false,\n      }));\n    }\n  };\n\n  const handleTooltipToggle = (rowIndex: string | number) => {\n    setIsTooltipOpen((prevState) => ({\n      [rowIndex]: !prevState[rowIndex],\n    }));\n  };\n\n  const onSelectedAccountTypeChange = (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    option: InputSelectOption\n  ) => {\n    setSelectedAccountType(option);\n    dispatch(userActions.updateSelectedAccountType(option));\n  };\n\n  const onSelectedBotAccountChange = (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    option: InputSelectOption\n  ) => {\n    setSelectedBotAccount(option);\n    dispatch(userActions.updateSelectedBotAccount(option));\n  };\n\n  const onSelectedMasterChange = (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    option: InputSelectOption\n  ) => {\n    setSelectedMasterAccount(option);\n  };\n\n  // FUNCTIONS FOR MODAL\n  const handleOpenUpsertModal = () => {\n    setIsUpsertModalOpen(true);\n    setSelectedBotCapitalManagement({ value: 1, label: 'Đều lệnh' })\n  };\n\n  const handleCloseUpsertModal = () => {\n    setIsUpsertModalOpen(false);\n    formikUpsert.resetForm();\n    setIsMasterAccountValid(false);\n    setIsSettingCapitalManagement(true);\n    setFormikValues(INITIAL_FORMIK_VALUES);\n    setSelectedAccountType(INITIAL_SELECTED_ACCOUNT_TYPE);\n    setSignalError(\"\");\n    // setSelectedBotAccount(INITIAL_SELECTED_OPTION);\n    // setSelectedMasterAccount(INITIAL_SELECTED_OPTION);\n  };\n\n  const handleOpenInformationModal = () => {\n    setIsInformationModalOpen(true);\n  };\n\n  const handleCloseInformationModal = () => {\n    setIsInformationModalOpen(false);\n  };\n\n  const handleOpenUpsertZoomTableModal = () => {\n    setIsUpsertZoomTableOpen(true);\n  };\n\n  const handleCloseUpsertZoomTableModal = () => {\n    setIsUpsertZoomTableOpen(false);\n  };\n\n  const handleOpenPopupModal = () => {\n    setIsPopupOpen(true);\n  };\n\n  const handleClosePopupModal = () => {\n    setIsPopupOpen(false);\n  };\n\n  const handleOpenValidAmountPopupModal = () => {\n    setModalAttributes((prev) => ({\n      ...prev,\n      isOpen: false,\n    }));\n  };\n\n  const handleCloseValidAmountPopupModal = useCallback(() => {\n    setModalAttributes((prev) => ({\n      ...prev,\n      isOpen: false,\n    }));\n    formikUpsert.setFieldValue(\"amountPerOrder\", 1);\n    formikUpsert.setFieldValue(\"multiply\", 1);\n  }, []);\n\n  const handleOpenAccountTradePopupModal = () => {\n    setModalAttributes((prev) => ({\n      ...prev,\n      isOpen: true,\n    }));\n  };\n\n  const handleCloseAccountTradePopupModal = () => {\n    setModalAttributes((prev) => ({\n      ...prev,\n      isOpen: false,\n    }));\n    navigate(\"/account_trade\");\n  };\n\n  const handleOpenGuidePopupModal = () => {\n    setGuidePopup(true);\n  };\n\n  const handleCloseGuidePopupModal = () => {\n    setGuidePopup(false);\n  };\n\n  const showIsDevelopingModal = () => {\n    dispatch(uiActions.updateIsModalOpen(true));\n  };\n\n  // FUNCTIONS FOR INPUT AMOUNT\n  const handleAmount = (\n    value: number | string | undefined,\n    fieldName: string,\n    values: CurrencyInputOnChangeValues | undefined\n  ): void => {\n    // console.log(value, 'value')\n    // const valueToSet = value === undefined || +value <= 0 ? 0 : value || ' ';\n    const valueToSet = value === undefined ? \"\" : value;\n    formikUpsert.setFieldValue(fieldName, valueToSet);\n  };\n\n  const handleAmountMinusOne = (value: number, fieldName: string) => {\n    // if (value - 1 <= 1) return;\n    // formikUpsert.setFieldValue(fieldName, +value - 1);\n    formikUpsert.setFieldValue(fieldName, Math.max(0, +value - 1));\n  };\n\n  const handleOrderAmountPlusOne = (value: number, fieldName: string) => {\n    formikUpsert.setFieldValue(fieldName, +value + 1);\n  };\n\n  const handleTableInputAmount = (\n    value: number | string | undefined,\n    col: number,\n    row: string\n  ) => {\n    const valueToSet = value === undefined ? \"\" : value;\n    // console.log(\"valueToSet\", valueToSet);\n    const arrToSet = { ...formikUpsert.values.orderValue };\n    // console.log(\"arrToSet\", arrToSet);\n    const convertedValue = convertToThreeDecimalPlaces(valueToSet);\n    // console.log(\"convertedValue\", convertedValue);\n    const convertedRowToLayer = \"layer\" + row;\n    if (!arrToSet[convertedRowToLayer]) {\n      arrToSet[convertedRowToLayer] = [];\n    }\n\n    const isCustomAutoWin = MANAGEMENT_LIST.CUSTOM.includes(\n      selectedBotCapitalManagement.label.toString()\n    );\n    // console.log(\"convertedValue === undefined\", convertedValue === undefined);\n    if (\n      isCustomAutoWin &&\n      (convertedRowToLayer === \"layer0\" || convertedRowToLayer === \"layer2\")\n    ) {\n      arrToSet[convertedRowToLayer][col] =\n        convertedValue === \"\" ? \"\" : Math.round(+convertedValue);\n    } else {\n      arrToSet[convertedRowToLayer][col] = convertedValue;\n    }\n\n    // console.log(\n    //   \"arrToSet[convertedRowToLayer][col]\",\n    //   arrToSet[convertedRowToLayer][col]\n    // );\n\n    // POP THE LAST EMPTY ELEMENT\n    const lastIndexConvertedRowToLayer =\n      arrToSet[convertedRowToLayer].length - 1;\n    for (let i = lastIndexConvertedRowToLayer; i > 0; i--) {\n      if (!arrToSet[convertedRowToLayer][i]) {\n        arrToSet[convertedRowToLayer].pop();\n      } else {\n        break;\n      }\n    }\n\n    // REMOVE ARR IF EMPTY\n    if (\n      arrToSet[convertedRowToLayer].length === 0 ||\n      (arrToSet[convertedRowToLayer].length === 1 &&\n        !arrToSet[convertedRowToLayer][0])\n    ) {\n      // console.log(\"delete arrToSet[convertedRowToLayer]\");\n      delete arrToSet[convertedRowToLayer];\n    }\n    // console.log(\"arrToSet['layer0'][0]\", arrToSet['layer0'][0]);\n    // console.log('arrToSet[convertedRowToLayer]', arrToSet[convertedRowToLayer]);\n    // console.log('arrToSet', arrToSet);\n    formikUpsert.setFieldValue(\"orderValue\", arrToSet);\n    formikUpsert.setFieldValue(\"amountPerOrder\", arrToSet[\"layer0\"]?.[0]);\n  };\n\n  const handleSelectBotCapitalManagement = (\n    option: SingleValue<InputSelectOption>,\n    actionMeta: ActionMeta<InputSelectOption>\n  ) => {\n    if (option != null) {\n      if (option.value === 2) {\n        formikUpsert.setFieldValue('orderValueText', '1-2-4-8-17-35')\n      }\n      if (option.value === 3) {\n        formikUpsert.setFieldValue('orderValueText', '1-1-2-2-3-4-5-7-10-13-18-24-32-44-59-80-108-146-197-271\\n0-2-4-4-6-8-10-14-20-26-36-48-64-88-118-160-216-292-394-542')\n      }\n      if (option.value === 4) {\n        formikUpsert.setFieldValue('orderValueText', '1-2-3-5-8-13-21-34-55-89-144')\n      }\n      if (option.value === 5) {\n        formikUpsert.setFieldValue('orderValueText', '1-1-2-6-4-3\\n1-2-4-8-17-35\\n2-3-4-5-6-1')\n      }\n      setSelectedBotCapitalManagement(option);\n      // formikUpsert.setFieldValue(\"orderValueText\", \"\");\n      if (\n        MANAGEMENT_LIST.MARTINGALE.includes(option?.label.toString()) ||\n        MANAGEMENT_LIST.FIBO.includes(option?.label.toString())\n      ) {\n        // console.log(\"FIBO\");\n        setTotalCreateTableRows(\n          Array(1)\n            .fill(0)\n            .map((_, index) => index)\n        );\n      } else if (MANAGEMENT_LIST.VICTOR.includes(option?.label.toString())) {\n        setTotalCreateTableRows(\n          Array(2)\n            .fill(0)\n            .map((_, index) => index)\n        );\n      } else if (MANAGEMENT_LIST.CUSTOM.includes(option?.label.toString())) {\n        setTotalCreateTableRows(\n          Array(3)\n            .fill(0)\n            .map((_, index) => index)\n        );\n      }\n    }\n  };\n\n  const handleSelectIncreaseType = (\n    option: SingleValue<InputSelectOption>,\n    actionMeta: ActionMeta<InputSelectOption>\n  ) => {\n    if (option != null) {\n      setSelectedIncreaseType(option);\n    }\n  };\n\n  const handleSelectSignalBot = (\n    option: SingleValue<InputSelectOption>,\n    actionMeta: ActionMeta<InputSelectOption>\n  ) => {\n    if (option != null) {\n      setSelectedSignalBot(option);\n      setSignalError(\"\");\n    }\n  };\n\n  const handleSelectSignalPersonal = (\n    option: SingleValue<InputSelectOption>,\n    actionMeta: ActionMeta<InputSelectOption>\n  ) => {\n    if (option != null) {\n      setSelectedSignalPersonal(option);\n      setSignalError(\"\");\n    }\n  };\n\n  const handleInputCheckbox = (fieldName: string, value: boolean) => {\n    formikUpsert.setFieldValue(fieldName, value);\n  };\n\n  // FUNCTIONS FOR CHECKBOX\n  const toggleRow = useCallback(\n    (id: string | number) => {\n      const newSelected = { ...selectedIds };\n      newSelected[id] = !newSelected[id];\n      // console.log(newSelected);\n      setSelectedIds(newSelected);\n      const totalSelected = Object.entries(newSelected).reduce(\n        (prev, value) => {\n          if (value[1]) return prev + 1;\n          return prev;\n        },\n        0\n      );\n      if (totalSelected >= data.length) {\n        setSelectAll(1);\n      } else {\n        setSelectAll(0);\n      }\n    },\n    [data.length, selectedIds]\n  );\n\n  const toggleAllRow = useCallback(() => {\n    let newSelected: SelectedIdsType = {};\n\n    if (selectAll === 0) {\n      data.forEach((x) => {\n        newSelected[x.id] = true;\n      });\n    }\n    setSelectedIds(newSelected);\n    setSelectAll((prev) => (prev === 0 ? 1 : 0));\n  }, [data, selectAll]);\n\n  const resetToggleButton = useCallback(() => {\n    setSelectAll(0);\n    setSelectedIds({});\n  }, []);\n\n  // COMMON FUNCTIONS\n  const getAllAutoBotSettings = useCallback(\n    (page: number) => {\n      if (partnerBotDatas.length > 0) {\n        // const data: ListMasterCopyTradeSetting = {\n        //   master: userData.pk,\n        // };\n        const followerIds = partnerBotDatas.map((botData) =>\n          botData.id.toString()\n        );\n        axios\n          .get(`${APIs.autoBotList}`, {\n            params: {\n              page,\n              search: searchInput,\n            },\n          })\n          .then((res) => {\n            const data: AutoBotSetting = res.data;\n            setAutoBotSettingData(data);\n            setAllBotSettingResults(data.results);\n            if (data.count != null && selectedPageSizeOption.value != null) {\n              setTotalPages(\n                Math.ceil(data.count / +selectedPageSizeOption.value)\n              );\n            }\n          })\n          .catch(() => {\n            enqueueSnackbar(\"Không thể lấy bot settings!\", {\n              variant: \"error\",\n            });\n          });\n      }\n    },\n    [\n      enqueueSnackbar,\n      partnerBotDatas,\n      searchInput,\n      selectedPageSizeOption.value,\n      refetch\n    ]\n  );\n\n  const getAllBotManagementList = useCallback(() => {\n    axios\n      .get(`${APIs.botManagementList}`)\n      .then((res) => {\n        const data: AutoBotManagementList = res.data;\n        if (data.count != null) {\n          const botCapitalOptionsToSet: InputSelectOption[] = data.results.map(\n            (d) => ({ value: d.id, label: d.name })\n          );\n          setBotCapitalManagementOptions(botCapitalOptionsToSet);\n          if (botCapitalOptionsToSet.length > 0) {\n            setSelectedBotCapitalManagement(botCapitalOptionsToSet[0]);\n          }\n        }\n      })\n      .catch(() => {\n        enqueueSnackbar(\"Không thể lấy bot settings!\", {\n          variant: \"error\",\n        });\n      });\n  }, [enqueueSnackbar]);\n\n  const getAllBotSignals = useCallback(() => {\n    axios\n      .get(`${APIs.botSignalList}`)\n      .then((res) => {\n        const data: AutoBotSignalTelegram = res.data;\n        if (data.count != null) {\n          const signalBotOptionsToSet: InputSelectOption[] = data.results.map(\n            (d) => ({ value: d.id, label: d.bot_name })\n          );\n          setSignalBotOptions(signalBotOptionsToSet);\n          if (signalBotOptionsToSet.length > 0) {\n            setSelectedSignalBot(signalBotOptionsToSet[0]);\n          }\n        }\n      })\n      .catch(() => {\n        enqueueSnackbar(\"Không thể lấy signal bots!\", {\n          variant: \"error\",\n        });\n      });\n  }, [enqueueSnackbar]);\n\n  const getAllPersonalSignals = useCallback(() => {\n    axios\n      .get(`${APIs.botSignalPersonalList}`)\n      .then((res) => {\n        const data: BotSignalPersonal = res.data;\n        if (data.count != null) {\n          const signalPersonalOptionsToSet: InputSelectOption[] =\n            data.results.map((d) => ({ value: d.id, label: d.config_name }));\n          setSignalPersonalOptions(signalPersonalOptionsToSet);\n          if (signalPersonalOptionsToSet.length > 0) {\n            setSelectedSignalPersonal(signalPersonalOptionsToSet[0]);\n          }\n        }\n      })\n      .catch(() => {\n        enqueueSnackbar(\"Không thể lấy signal bots!\", {\n          variant: \"error\",\n        });\n      });\n  }, [enqueueSnackbar]);\n\n  const updateSettingAccountType = useCallback(\n    (botSettingResult: AutoBotSettingResult, accountType: string) => {\n      const data: AutoBotSettingUpdate = {\n        account_type: accountType,\n      };\n      axios\n        .patch(\n          `${APIs.updateAutoBotAccountTypeByIds}${botSettingResult.id}/`,\n          data\n        )\n        .then((res) => {\n          getAllAutoBotSettings(page + 1);\n          enqueueSnackbar(`Cập nhật cấu hình thành công!`, {\n            variant: \"success\",\n          });\n        })\n        .catch((err) => {\n          enqueueSnackbar(`Cập nhật cấu hình thất bại!`, {\n            variant: \"error\",\n          });\n        });\n    },\n    [enqueueSnackbar, getAllAutoBotSettings, page]\n  );\n\n  const updateSettingStatusByIds = useCallback(\n    (ids: number[], status: string) => {\n      const data: AutoBotSettingUpdate = {\n        status: status,\n        current_profit: 0,\n        current_date_profit: 0,\n        current_volume: 0,\n        current_date_volume: 0,\n      };\n      const idToUpdate = ids.join(\",\");\n      axios\n        .patch(`${APIs.updateAutoBotUltimateByIds}${idToUpdate}/`, data)\n        .then((res) => {\n          getAllAutoBotSettings(page + 1);\n          enqueueSnackbar(`Cập nhật cấu hình thành công!`, {\n            variant: \"success\",\n          });\n        })\n        .catch((err) => {\n          enqueueSnackbar(`Cập nhật cấu hình thất bại!`, {\n            variant: \"error\",\n          });\n        });\n    },\n    [enqueueSnackbar, getAllAutoBotSettings, page]\n  );\n\n  const updateSettingPartnerAccount = useCallback(\n    (\n      botSettingResult: AutoBotSettingResult,\n      partnerOption: InputSelectOption\n    ) => {\n      const data: AutoBotSettingUpdate = {\n        follower: +partnerOption.value,\n        follower_name: partnerOption.label?.toString(),\n      };\n      axios\n        .patch(\n          `${APIs.updateAutoBotFollowerByIds}${botSettingResult.id}/`,\n          data\n        )\n        .then((res) => {\n          getAllAutoBotSettings(page + 1);\n          enqueueSnackbar(`Cập nhật cấu hình thành công!`, {\n            variant: \"success\",\n          });\n        })\n        .catch((err) => {\n          enqueueSnackbar(`Cập nhật cấu hình thất bại!`, {\n            variant: \"error\",\n          });\n        });\n    },\n    [enqueueSnackbar, getAllAutoBotSettings, page]\n  );\n\n  const deleteAutoBotSettingById = () => {\n    axios\n      .delete(\n        `${APIs.deleteAutoBotStatusByIds}${selectedAutoBotSettingResult.id}`\n      )\n      .then((res) => {\n        getAllAutoBotSettings(page + 1);\n        enqueueSnackbar(\"Xoá cấu hình thành công!\", { variant: \"success\" });\n      })\n      .catch(() => {\n        enqueueSnackbar(\"Không thể xoá cấu hình!\", { variant: \"error\" });\n      });\n  };\n\n  const deleteAutoBotSettingByListIds = () => {\n    // ENTRY: string: boolean\n    const selectedListIds = Object.entries(selectedIds)\n      .filter((selected) => selected[1])\n      .map((selected) => selected[0]);\n    // console.log(\"selectedListIds:\", selectedListIds);\n    axios\n      .delete(`${APIs.deleteAutoBotStatusByIds}${selectedListIds}`)\n      .then((res) => {\n        getAllAutoBotSettings(page + 1);\n        setSelectedIds({});\n        setSelectAll(0);\n        enqueueSnackbar(\"Xoá cấu hình thành công!\", { variant: \"success\" });\n      })\n      .catch(() => {\n        enqueueSnackbar(\"Xoá cấu hình thất bại!\", { variant: \"error\" });\n      });\n  };\n\n  const updateModelData = useCallback(\n    (autoBotSettingResult: AutoBotSettingResult) => {\n      // FIND SELECTED ACCOUNT TYPE\n      // console.log(autoBotSettingResult);\n      const accountType = ACCOUNT_TYPES.filter(\n        (accountType) => accountType.value === autoBotSettingResult.account_type\n      )[0];\n\n      // SELECTED MANAGEMENT BUDGET\n      const selectedBotCapitalManagent = BUDGET_MANAGEMENT_OPTIONS.filter(\n        (option) => option.value === autoBotSettingResult.budgetmanagement_id\n      )[0];\n\n      // console.log(BUDGET_MANAGEMENT_OPTIONS);\n      // console.log(\"selectedBotCapitalManagent\", selectedBotCapitalManagent);\n      // console.log(\n      //   \"autoBotSettingResult.budgetmanagement_id\",\n      //   autoBotSettingResult.budgetmanagement_id\n      // );\n\n      // console.log(\n      //   \"updateModelData autoBotSettingResult:\",\n      //   autoBotSettingResult\n      // );\n\n      // FIND SELECTED BOT MASTER ACCOUNT\n      // const masterAccount = {\n      //   value: botSetting.master,\n      //   label: botSetting.master_name,\n      // };\n\n      // FIND SELECTED BOT ACCOUNT\n      const botAccount = accountOptions.filter(\n        (botAccount) => botAccount.value === autoBotSettingResult.follower\n      )[0];\n\n      const increaseType = INCREASE_TYPE_OPTIONS.filter(\n        (option) => option.value === autoBotSettingResult.increase_type\n      )[0];\n\n      const selectedBotSignal =\n        signalBotOptions.filter(\n          (option) => option.value === autoBotSettingResult.signal_id\n        )[0] || signalBotOptions[0];\n\n      const selectedBotSignalPersonal =\n        signalPersonalOptions.filter(\n          (option) => option.value === autoBotSettingResult.signalpersonal_id\n        )[0] || signalPersonalOptions[0];\n\n      // console.log(autoBotSettingResult);\n      // console.log(accountType);\n      // console.log(accountOptions);\n      // console.log(botAccount);\n\n      const orderValueConvertedToString: OrderValue = {};\n      const orderValue = { ...autoBotSettingResult.order_value };\n      for (const key of Object.keys(orderValue)) {\n        orderValueConvertedToString[key] = orderValue[key].map(String);\n      }\n\n      // console.log(orderValueConvertedToString);\n\n      // UPDATE FORM MODAL\n\n      const orderValueT = autoBotSettingResult.order_value\n      let concatenatedString = \"\";\n      for (let key in orderValueT) {\n        if (Array.isArray(orderValueT[key])) {\n          concatenatedString += orderValueT[key].join(\"-\");\n          if (Object.keys(orderValueT).indexOf(key) < Object.keys(orderValueT).length - 1) {\n            concatenatedString += \"\\n\";\n          }\n        }\n      }\n\n      const updatedFormikValues: FormikValueType = {\n        configName: autoBotSettingResult.config_name,\n        youngProfit: autoBotSettingResult.young_profit,\n        secondAction: autoBotSettingResult.second_action,\n        autoFillInDemo: autoBotSettingResult.auto_fillindemo,\n        amountPerOrder: autoBotSettingResult.o_amount,\n        young_loss: autoBotSettingResult.young_loss,\n        orderValue: orderValueConvertedToString,\n        orderValueText: concatenatedString,\n        increaseType: autoBotSettingResult.increase_type,\n        stepType: autoBotSettingResult.step_type,\n        aimMin: autoBotSettingResult.aim_min,\n        aimMax: autoBotSettingResult.aim_max,\n        status: autoBotSettingResult.status,\n        reverse: autoBotSettingResult.reverse,\n        isSignal: autoBotSettingResult.signal_id ? true : false,\n        conditionFire: autoBotSettingResult.condition_fire,\n        fireOne: autoBotSettingResult.fire_one,\n        fireTwo: autoBotSettingResult.fire_two,\n        fireThree: autoBotSettingResult.fire_three,\n        fireFour: autoBotSettingResult.fire_four,\n        isShareConfig: false,\n        isMasterConfig: autoBotSettingResult.is_master ? true : false,\n        isTelegramConfig: false,\n      };\n\n      // console.log(\"updatedFormikValues\", updatedFormikValues);\n\n      if (Object.keys(autoBotSettingResult.order_value).length > 1) {\n        const newArr = Array(\n          Object.keys(autoBotSettingResult.order_value).length\n        )\n          .fill(0)\n          .map((_, index) => index);\n\n        setTotalCreateTableRows(newArr);\n      }\n\n      // console.log(\"updatedFormikValues\", updatedFormikValues);\n\n      setSelectedAccountType(accountType);\n      setSelectedIncreaseType(increaseType);\n      // setSelectedMasterAccount(masterAccount);\n      setSelectedBotCapitalManagement(selectedBotCapitalManagent);\n      setSelectedBotAccount(botAccount);\n      setSelectedSignalBot(selectedBotSignal);\n      setSelectedSignalPersonal(selectedBotSignalPersonal);\n      setFormikValues(updatedFormikValues);\n    },\n    [accountOptions, signalBotOptions]\n  );\n\n  const resetAllCurrent = useCallback(() => {\n    const data: AutoBotSettingUpdate = {\n      current_profit: 0,\n      current_date_profit: 0,\n      current_volume: 0,\n      current_date_volume: 0,\n    };\n    const selectedListIds = Object.entries(selectedIds)\n      .filter((selected) => selected[1])\n      .map((selected) => selected[0]);\n    axios\n      .patch(`${APIs.updateAutoBotUltimateByIds}${selectedListIds}/`, data)\n      .then((res) => {\n        getAllAutoBotSettings(page + 1);\n        enqueueSnackbar(`Nạp lại cấu hình thành công!`, {\n          variant: \"success\",\n        });\n      })\n      .catch((err) => {\n        enqueueSnackbar(`Nạp lại cấu hình thất bại!`, {\n          variant: \"error\",\n        });\n      });\n  }, [enqueueSnackbar, getAllAutoBotSettings, page, selectedIds]);\n\n  // PAGINATION FUNCTION\n  const handleSelectPageSize = (\n    option: SingleValue<InputSelectOption>,\n    actionMeta: ActionMeta<InputSelectOption>\n  ) => {\n    if (option != null) {\n      setSelectedPageSizeOption(option);\n      setPage(0);\n      getAllAutoBotSettings(1);\n    }\n  };\n\n  const handlePageChange = useCallback(\n    ({ selected }: { selected: number }) => {\n      // console.log(selected);\n      const page = selected + 1;\n      setPage(selected);\n      getAllAutoBotSettings(page);\n    },\n    [getAllAutoBotSettings]\n  );\n\n  // TABLE\n  const columns = React.useMemo<Column<AutoBotSettingResult>[]>(\n    () => {\n      return [\n        {\n          id: \"checkbox\",\n          accessor: \"checkbox\",\n          Cell: (props) => {\n            const original = props.cell.row.original;\n            return (\n              <div className=\"flex items-center justify-center\">\n                <input\n                  type=\"checkbox\"\n                  className=\"checkbox\"\n                  checked={selectedIds[original.id] === true}\n                  onChange={(e) => toggleRow(original.id)}\n                />\n              </div>\n            );\n          },\n          Header: () => {\n            return (\n              <div className=\"flex items-center justify-center\">\n                <input\n                  type=\"checkbox\"\n                  className=\"text-center checkbox\"\n                  checked={selectAll === 1}\n                  ref={(input) => {\n                    if (input) {\n                      input.indeterminate = selectAll === 2;\n                    }\n                  }}\n                  onChange={() => toggleAllRow()}\n                />\n              </div>\n            );\n          },\n          sortable: false,\n          width: 45,\n        },\n        {\n          Header: () => {\n            return <div className=\"text-left\">Tên cấu hình Bot</div>;\n          },\n          accessor: \"config_name\",\n          Cell: (props) => {\n            const original = props.cell.row.original;\n            return (\n              <div className=\"text-left\">\n                <p className=\"text-sm text-ink-100\">{original.config_name}</p>\n              </div>\n            );\n          },\n        },\n        {\n          Header: () => {\n            return <div className=\"text-left\">Loại tài khoản</div>;\n          },\n          accessor: \"account_type\",\n          Cell: (props) => {\n            const original = props.cell.row.original;\n            const row = props.cell.row;\n            const matchedDatas = ACCOUNT_TYPES.filter(\n              (type) => type.value === original.account_type\n            );\n            const currentOption =\n              matchedDatas.length > 0 ? matchedDatas[0] : ACCOUNT_TYPES[0];\n\n            return (\n              <div className=\"min-w-[10rem]\">\n                <SelectInput\n                  value={currentOption}\n                  onChange={(\n                    option: SingleValue<InputSelectOption>,\n                    actionMeta: ActionMeta<InputSelectOption>\n                  ) => {\n                    if (option != null) {\n                      updateSettingAccountType(\n                        original,\n                        option.value?.toString()\n                      );\n                    }\n                  }}\n                  name=\"select-account-type\"\n                  options={ACCOUNT_TYPES}\n                />\n              </div>\n            );\n          },\n        },\n        {\n          Header: () => {\n            return <div className=\"text-left\">Tài khoản giao dịch</div>;\n          },\n          accessor: \"select_partner_account\",\n          Cell: (props) => {\n            const original = props.cell.row.original;\n            const row = props.cell.row;\n            const matchedDatas = accountOptions.filter(\n              (account) => account.value === original.follower\n            );\n            const currentOption =\n              matchedDatas.length > 0 ? matchedDatas[0] : INITIAL_SELECTED_OPTION;\n            const isStatusActive = original.status === \"active\";\n\n            return (\n              <div className=\"min-w-[10rem]\">\n                <SelectInput\n                  value={currentOption}\n                  onChange={(\n                    option: SingleValue<InputSelectOption>,\n                    actionMeta: ActionMeta<InputSelectOption>\n                  ) => {\n                    if (option != null) {\n                      updateSettingPartnerAccount(original, option);\n                    }\n                  }}\n                  name=\"select-partner-account\"\n                  options={accountOptions}\n                  isSelectDisabled={isStatusActive}\n                />\n              </div>\n            );\n          },\n        },\n        {\n          Header: () => {\n            return <div className=\"text-end\">Lợi nhuận ngày</div>;\n          },\n          accessor: \"profit_per_day\",\n          Cell: (props) => {\n            const original = props.cell.row.original;\n            if (original.current_date_profit != null) {\n              const isProfit = +original.current_date_profit > 0;\n              const isEqual = +original.current_date_profit === 0;\n\n              return (\n                <div className=\"text-end\">\n                  <p\n                    className={`text-sm ${isProfit\n                      ? \"text-green-100\"\n                      : isEqual\n                        ? \"bg-clip-text text-transparent bg-primary-100\"\n                        : \"text-red-100\"\n                      } font-bold`}\n                  >\n                    $\n                    {Math.abs(+original.current_date_profit).toLocaleString(\n                      \"en-US\",\n                      options\n                    )}\n                  </p>\n                </div>\n              );\n            } else {\n              return (\n                <div className=\"text-end\">\n                  <p className={`text-sm text-green-100 font-bold`}>$100,000</p>\n                </div>\n              );\n            }\n          },\n        },\n        {\n          Header: \"Chốt lãi/Cắt lỗ\",\n          accessor: \"profitLoss\",\n          Cell: (props) => {\n            const original = props.cell.row.original;\n            return (\n              <div className=\"flex items-center justify-center\">\n                <p className=\"px-2 text-xs leading-5 bg-green-100 rounded-3xl text-ink-100\">\n                  ${original.aim_max?.toLocaleString(\"en-US\", options)}\n                </p>\n                /\n                <p className=\"px-2 text-xs leading-5 bg-red-100 rounded-3xl text-ink-100\">\n                  ${original.aim_min?.toLocaleString(\"en-US\", options)}\n                </p>\n              </div>\n            );\n          },\n        },\n        {\n          Header: () => <div className=\"text-left\">Trạng thái</div>,\n          accessor: \"status\",\n          Cell: (props) => {\n            const original = props.cell.row.original;\n            const status = original.status;\n            const isStatusActive = status === \"active\";\n\n            const statusClass = isStatusActive ? \"bg-green-100\" : \"bg-red-100\";\n            const statusContent = isStatusActive ? STATUSES_MAP.active : STATUSES_MAP.inactive;\n\n            return (\n              <div className=\"flex\">\n                <p className={`w-fit px-2 rounded-[0.375rem] text-xs text-ink-100 leading-5 ${statusClass}`}>\n                  {statusContent}\n                </p>\n              </div>\n            );\n          },\n        },\n        {\n          Header: () => <div className=\"text-center\">Hẹn giờ</div>,\n          accessor: \"id\",\n          Cell: (props) => {\n            const original = props.cell.row.original;\n            const foundObjects = followbotschedule.filter(obj => obj.followbotid.includes(original.id));\n            return (\n              <div className=\"flex item-center justify-center\">\n                <p\n                  className={`w-full flex justify-center px-2 rounded-[0.375rem] text-xs text-ink-100 leading-5`}\n                >\n                  {foundObjects.length > 0 ? (\n                    <CountdownManager\n                      schedules={foundObjects}\n                      onCountdownEnd={(schedule) => {\n                        updateStatusById(schedule);\n                      }}\n                    />\n                  ) :\n                    <div\n                      style={{\n                        width: '70px',\n                        overflow: 'hidden'\n                      }}\n                      className={`flex justify-center px-2 rounded-[0.375rem] text-xs text-ink-100 leading-5 'bg-green-100'`}\n                    >\n                      ---\n                    </div>}\n                </p>\n              </div>\n            );\n          },\n        },\n        {\n          accessor: \"actions\",\n          Cell: (props) => {\n            const original = props.cell.row.original;\n            const isActive = original.status === \"active\";\n\n            return (\n              <div className=\"flex justify-center gap-x-1 w-[1.5rem]\">\n                <Tooltip\n                  componentsProps={{\n                    tooltip: {\n                      className: \"!px-0 !py-3 !bg-dropdown !rounded-xl\",\n                    },\n                    arrow: {\n                      className:\n                        \"!w-[1rem] !translate-x-[9.6875rem] !before:bg-dropdown\",\n                      sx: {\n                        \"&::before\": {\n                          background: \"var(--bg-dropdown)\",\n                        },\n                      },\n                    },\n                  }}\n                  title={\n                    <div\n                      onClick={(e) => {\n                        handleTooltipClose(original.id);\n                        e.stopPropagation();\n                      }}\n                    >\n                      <div\n                        className=\"p-3 min-w-[11.25rem] hover:bg-primary-10 flex items-center gap-x-2 cursor-pointer\"\n                        onClick={(e) => {\n                          handleOpenInformationModal();\n                          setSelectedAutoBotSettingResult(original);\n                        }}\n                      >\n                        <img\n                          className=\"w-[1.5rem]\"\n                          src={images.bot.information}\n                          alt=\"BotLambotrade\"\n                        />\n                        <p className=\"text-base text-ink-100\">Xem thông tin</p>\n                      </div>\n                      <div\n                        className=\"p-3 min-w-[11.25rem] hover:bg-primary-10 flex items-center gap-x-2 cursor-pointer\"\n                        onClick={() => {\n                          const ids = [original.id];\n                          updateSettingStatusByIds(\n                            ids,\n                            isActive ? \"inactive\" : \"active\"\n                          );\n                        }}\n                      >\n                        <img\n                          className=\"w-[1.5rem]\"\n                          src={\n                            isActive ? images.bot.off_gold : images.bot.on_gold\n                          }\n                          alt=\"BotLambotrade\"\n                        />\n                        <p className=\"text-base text-ink-100\">\n                          {isActive ? \"Tắt\" : \"Bật\"}\n                        </p>\n                      </div>\n                      <div\n                        className=\"p-3 min-w-[11.25rem] hover:bg-primary-10 flex items-center gap-x-2 cursor-pointer\"\n                        onClick={() => {\n                          handleOpenUpsertModal();\n                          setIsEditing(true);\n                          updateModelData(original);\n                          setSelectedAutoBotSettingResult(original);\n                        }}\n                      >\n                        <img\n                          className=\"w-[1.5rem]\"\n                          src={images.table.edit}\n                          alt=\"BotLambotrade\"\n                        />\n                        <p className=\"text-base text-ink-100\">Chỉnh sửa</p>\n                      </div>\n                      <div\n                        className=\"p-3 min-w-[11.25rem] hover:bg-primary-10 flex items-center gap-x-2 cursor-pointer\"\n                        onClick={() => {\n                          handleOpenPopupModal();\n                          setIsDeletingByList(false);\n                          setSelectedAutoBotSettingResult(original);\n                        }}\n                      >\n                        <img\n                          className=\"w-[1.5rem]\"\n                          src={images.table.delete}\n                          alt=\"BotLambotrade\"\n                        />\n                        <p className=\"text-base text-ink-100\">Xoá cấu hình</p>\n                      </div>\n                      <div\n                        className=\"p-3 min-w-[11.25rem] hover:bg-primary-10 flex items-center gap-x-2 cursor-pointer\"\n                        onClick={() => {\n                          setSelectedGift(original);\n                        }}\n                      >\n                        <img\n                          className=\"w-[1.5rem]\"\n                          src={images.table.gift_gold}\n                          alt=\"BotLambotrade\"\n                        />\n                        <p className=\"text-base text-ink-100\">Tặng cấu hình</p>\n                      </div>\n                    </div>\n                  }\n                  arrow\n                  open={isTooltipOpen[original.id]}\n                  onOpen={() => {\n                    handleTooltipOpen(original.id);\n                  }}\n                  onClose={() => {\n                    handleTooltipClose(original.id);\n                  }}\n                  disableHoverListener={!isDesktop}\n                  disableFocusListener={!isDesktop}\n                  disableTouchListener={!isDesktop}\n                  placement=\"bottom-end\"\n                  enterTouchDelay={0}\n                  leaveTouchDelay={20000}\n                >\n                  <img\n                    className=\"cursor-pointer\"\n                    src={images.table.actions}\n                    alt=\"BotLambotrade\"\n                    onClick={() => {\n                      handleTooltipToggle(original.id);\n                    }}\n                  />\n                </Tooltip>\n              </div>\n            );\n          },\n        },\n      ]\n    },\n    [\n      accountOptions,\n      handleTooltipOpen,\n      isDesktop,\n      isTooltipOpen,\n      selectAll,\n      selectedIds,\n      isUpdate,\n      toggleAllRow,\n      followbotschedule,\n      toggleRow,\n      updateModelData,\n      updateSettingAccountType,\n      updateSettingPartnerAccount,\n      updateSettingStatusByIds,\n    ]\n  );\n\n  const tableInstance = useTable({ columns, data }, usePagination);\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    tableInstance;\n\n  // UTILS\n  const convertOrderValueToNumber = (orderValues: OrderValue) => {\n    let maxRowLength = 0;\n    Object.keys(orderValues).forEach((key) => {\n      maxRowLength = Math.max(maxRowLength, orderValues[key].length);\n    });\n    Object.keys(orderValues).forEach((key) => {\n      for (let i = 0; i < orderValues[key].length; i++) {\n        orderValues[key][i] = +orderValues[key][i];\n      }\n    });\n\n    console.log(\"orderValues: \", orderValues);\n\n    return orderValues;\n  };\n\n  // ^\\d+-\\d+-\\d+-\\d+$\n\n  function convertStringToNumber(str: string) {\n    const value = str.trim().replace(',', '.');\n    return parseFloat(value);\n  }\n\n  // FORMIK\n  const formikUpsert = useFormik({\n    initialValues: formikValues,\n    validateOnChange: false,\n    enableReinitialize: true,\n    validationSchema: Yup.object({\n      orderValueText: Yup.string()\n        .matches(\n          /^(?!.*--)(?!.*-$)(?!^-)(?!.*\\n-)(?!.*-\\n)(?!.*\\.\\D)(?!.*\\.$)[\\d\\n.-]+$/,\n          \"Sai định dạng, Ex: 1-2-3\"\n        ),\n      configName: Yup.string()\n        .required(\"Vui lòng nhập tên cấu hình bot\")\n        .max(50, \"Vui lòng nhập tên cấu hình bot dưới 50 ký tự\")\n        .matches(\n          /^[a-zA-ZàáãạảăắằẳẵặâấầẩẫậèéẹẻẽêềếểễệđìíĩỉịòóõọỏôốồổỗộơớờởỡợùúũụủưứừửữựỳỵỷỹýÀÁÃẠẢĂẮẰẲẴẶÂẤẦẨẪẬÈÉẸẺẼÊỀẾỂỄỆĐÌÍĨỈỊÒÓÕỌỎÔỐỒỔỖỘƠỚỜỞỠỢÙÚŨỤỦƯỨỪỬỮỰỲỴỶỸÝ][_-a-zA-Z0-9àáãạảăắằẳẵặâấầẩẫậèéẹẻẽêềếểễệđìíĩỉịòóõọỏôốồổỗộơớờởỡợùúũụủưứừửữựỳỵỷỹýÀÁÃẠẢĂẮẰẲẴẶÂẤẦẨẪẬÈÉẸẺẼÊỀẾỂỄỆĐÌÍĨỈỊÒÓÕỌỎÔỐỒỔỖỘƠỚỜỞỠỢÙÚŨỤỦƯỨỪỬỮỰỲỴỶỸÝ ]*$/gi,\n          \"Cấu hình bot phải bắt đầu bằng chữ và không chứa ký tự đặc biệt\"\n        ),\n      secondAction: Yup.number()\n        .min(1, \"Giây vào lệnh không thể nhỏ hơn 1\")\n        .max(30, \"Giây vào lệnh không thể lớn hơn 30\")\n        .required(\"Vui lòng nhập giây vào lệnh\"),\n      young_loss: Yup.string()\n        .nullable()\n        .matches(\n          /^(?!0\\.?0*$)(?!0,?0*$)(\\d+([.,]\\d+)?|\\d*([.,]\\d+))$/,\n          \"Giá trị phải là 1 số và lớn hơn 0\"\n        ),\n      youngProfit: Yup.string()\n        .nullable()\n        .matches(\n          /^(?!0\\.?0*$)(?!0,?0*$)(\\d+([.,]\\d+)?|\\d*([.,]\\d+))$/,\n          \"Giá trị phải là 1 số và lớn hơn 0\"\n        ),\n      aimMin: Yup.number()\n        .min(1, \"Giá trị cắt lỗ không thể nhỏ hơn 1\")\n        .required(\"Vui lòng nhập giá trị cắt lỗ\"),\n      aimMax: Yup.number()\n        .min(1, \"Giá trị chốt lãi không thể nhỏ hơn 1\")\n        .required(\"Vui lòng nhập giá trị chốt lãi\"),\n      fireOne: Yup.number()\n        .min(1, \"Giá trị cháy x phiên không thể nhỏ hơn 1\")\n        .required(\"Vui lòng nhập giá trị cháy x phiên\"),\n      fireTwo: Yup.number()\n        .min(1, \"Giá trị trong x phiên không thể nhỏ hơn 1\")\n        .required(\"Vui lòng nhập giá trị trong x phiên\"),\n      fireThree: Yup.number()\n        .min(1, \"Giá trị bỏ x phiên không thể nhỏ hơn 1\")\n        .required(\"Vui lòng nhập giá trị bỏ x phiên\"),\n      fireFour: Yup.number()\n        .min(1, \"Giá trị đánh x phiên không thể nhỏ hơn 1\")\n        .required(\"Vui lòng nhập giá trị đánh x phiên\"),\n    }),\n    onSubmit: async (values, helpers) => {\n      // Validate selected signal is null\n      if (values.isSignal && !selectedSignalBot.value) {\n        setSignalError(\"Vui lòng tạo mới Bot Signal để chọn\");\n        return;\n      } else if (!values.isSignal && !selectedSignalPersonal.value) {\n        setSignalError(\"Vui lòng tạo mới Phương pháp cá nhân để chọn\");\n        return;\n      }\n      let orderRes: OrderValue = {}\n      values.orderValueText.split('\\n').map((e, i) => {\n        orderRes[`layer${i}`] = e.split('-').map((x) => x && Number(x))\n      })\n      if (isEditing) {\n        // UPDATE\n        const updateAutoBotData: AutoBotSettingUpdate = {\n          config_name: values.configName,\n          follower: +selectedBotAccount.value,\n          follower_name: selectedBotAccount.label?.toString(),\n          account_type: selectedAccountType?.value.toString(),\n          young_profit: values.youngProfit ? convertStringToNumber(String(values.youngProfit)) : null,\n          young_loss: values.young_loss ? convertStringToNumber(String(values.young_loss)) : null,\n          second_action: values.secondAction,\n          budgetmanagement_id: +selectedBotCapitalManagement.value,\n          budgetmanagement_name: selectedBotCapitalManagement.label?.toString(),\n          signal_id: +selectedSignalBot?.value,\n          signalpersonal_id: +selectedSignalPersonal?.value,\n          reverse: values.reverse,\n          o_amount: values.amountPerOrder,\n          increase_type: +selectedIncreaseType.value,\n          step_type: values.stepType,\n          order_value: orderRes,\n          aim_min: values.aimMin,\n          aim_max: values.aimMax,\n          status: \"active\",\n          block_status: \"none\",\n          auto_fillindemo: values.autoFillInDemo,\n          condition_fire: values.conditionFire,\n          fire_one: values.fireOne,\n          fire_two: values.fireTwo,\n          fire_three: values.fireThree,\n          fire_four: values.fireFour,\n          buget_position: {},\n          is_master: values.isMasterConfig,\n        };\n        if (values.isSignal) {\n          delete updateAutoBotData.signalpersonal_id;\n        } else {\n          delete updateAutoBotData.signal_id;\n        }\n        axios\n          .patch(\n            `${APIs.updateAutoBotUltimateByIds}${selectedAutoBotSettingResult.id}/`,\n            updateAutoBotData\n          )\n          .then(() => {\n            getAllAutoBotSettings(page + 1);\n            enqueueSnackbar(\"Cập nhập cấu hình thành công!\", {\n              variant: \"success\",\n            });\n            handleCloseUpsertModal();\n          })\n          .catch((err) => {\n            enqueueSnackbar(\n              `${err.data\n                ? JSON.stringify(err.data)\n                : \"Cập nhập cấu hình thất bại!\"\n              }`,\n              { variant: \"error\" }\n            );\n          });\n      } else {\n        // INSERT\n        const createAutoBotRequest: AutoBotSettingRequest = {\n          config_name: values.configName,\n          follower: +selectedBotAccount.value,\n          account_type: selectedAccountType.value.toString(),\n          reverse: values.reverse,\n          young_profit: values.youngProfit ? convertStringToNumber(String(values.youngProfit)) : null,\n          young_loss: values.young_loss ? convertStringToNumber(String(values.young_loss)) : null,\n          second_action: values.secondAction,\n          budgetmanagement_id: +selectedBotCapitalManagement.value,\n          o_amount: +values.amountPerOrder,\n          // order_value: !values.orderValue\n          //   ? \"\"\n          //   : convertOrderValueToNumber(values.orderValue),\n          order_value: orderRes,\n          increase_type: +selectedIncreaseType.value,\n          step_type: values.stepType,\n          aim_min: +values.aimMin,\n          aim_max: +values.aimMax,\n          status: \"active\",\n          block_status: \"none\",\n          auto_fillindemo: values.autoFillInDemo,\n          signal_id: +selectedSignalBot?.value,\n          signalpersonal_id: +selectedSignalPersonal?.value,\n          condition_fire: values.conditionFire,\n          fire_one: +values.fireOne,\n          fire_two: +values.fireTwo,\n          fire_three: +values.fireThree,\n          fire_four: +values.fireFour,\n          buget_position: {},\n          is_master: values.isMasterConfig,\n        };\n        if (values.isSignal) {\n          delete createAutoBotRequest.signalpersonal_id;\n        } else {\n          delete createAutoBotRequest.signal_id;\n        }\n        axios\n          .post(APIs.createAutoBot, createAutoBotRequest)\n          .then(() => {\n            getAllAutoBotSettings(page + 1);\n            enqueueSnackbar(\"Tạo cấu hình bot thành công!\", {\n              variant: \"success\",\n            });\n            handleCloseUpsertModal();\n          })\n          .catch((err) => {\n            enqueueSnackbar(\n              `${err.data\n                ? JSON.stringify(err.data)\n                : \"Tạo cấu hình bot thất bại!\"\n              }`,\n              { variant: \"error\" }\n            );\n          });\n      }\n    },\n  });\n\n  // BOT SELECT\n  const getAllAccounts = useCallback(() => {\n    axios\n      .get(APIs.allAccounts)\n      .then((res) => {\n        const data = res.data;\n        setAllBotDatas(data);\n      })\n      .catch(() => {\n        enqueueSnackbar(\"Không thể lấy tài khoản master\", { variant: \"error\" });\n      });\n  }, [enqueueSnackbar]);\n\n  const getAllPartnerBots = useCallback(() => {\n    axios\n      .get(APIs.partnerAccount)\n      .then((res) => {\n        const datas: BotData[] = res.data;\n        const partnerBotDatas = datas.filter(\n          (data) => data.status === \"active\"\n        );\n        setPartnerBotDatas(partnerBotDatas);\n      })\n      .catch((err) => {\n        enqueueSnackbar(\"Không thể lấy bot datas\", { variant: \"error\" });\n      });\n  }, [enqueueSnackbar]);\n\n  const getBalance = useCallback(\n    (id: number | string) => {\n      axios\n        .get(`${APIs.balanceById}${id}/`)\n        .then((res) => {\n          const data: BotBalance = res.data;\n          setBotBalance(data);\n        })\n        .catch(() => {\n          enqueueSnackbar(\"Không thể lấy được số dư ví\", { variant: \"error\" });\n        });\n    },\n    [enqueueSnackbar]\n  );\n\n  const reloadDemoBalance = useCallback(\n    (id: number | string) => {\n      axios\n        .get(`${APIs.reloadDemoBalance}${id}/`)\n        .then((res) => {\n          enqueueSnackbar(\"Đặt lại số dư ví DEMO thành công!\", {\n            variant: \"success\",\n          });\n          getBalance(selectedBotAccount.value);\n        })\n        .catch(() => {\n          enqueueSnackbar(\"Đặt lại số dư ví DEMO thất bại!\", {\n            variant: \"error\",\n          });\n        });\n    },\n    [enqueueSnackbar, getBalance, selectedBotAccount.value]\n  );\n\n  const convertPartnerBotsToPartnerAccountOptions = useCallback(() => {\n    if (partnerBotDatas && partnerBotDatas.length > 0) {\n      const accountOptions = partnerBotDatas.map((botData) => ({\n        value: botData.id,\n        label: botData.botname,\n      }));\n      setAccountOptions(accountOptions);\n    }\n  }, [partnerBotDatas]);\n\n  const convertAllPartnerBotsToPartnerAccountOptions = useCallback(() => {\n    if (allBotDatas && allBotDatas.length > 0) {\n      const allBotAccountOptions = allBotDatas.map((botData) => ({\n        value: botData.id,\n        label: botData.username,\n      }));\n      setAllBotAccountOptions(allBotAccountOptions);\n    }\n  }, [allBotDatas]);\n\n  useEffect(() => {\n    getAllPartnerBots();\n    getAllAccounts();\n  }, [getAllAccounts, getAllPartnerBots]);\n\n  useEffect(() => {\n    if (partnerBotDatas && partnerBotDatas.length > 0) {\n      if (selectedAccountType.value === \"LIVE\" && !isPartnerBotInitialized) {\n        getBalance(partnerBotDatas[0].id);\n        const firstBotOption = {\n          value: partnerBotDatas[0].id,\n          label: partnerBotDatas[0].botname,\n        };\n        setSelectedBotAccount(firstBotOption);\n        setIsPartnerBotInitialized(true);\n        dispatch(userActions.updateSelectedBotAccount(firstBotOption));\n      } else if (selectedBotAccount.value) {\n        getBalance(selectedBotAccount.value);\n      }\n\n      convertPartnerBotsToPartnerAccountOptions();\n      convertAllPartnerBotsToPartnerAccountOptions();\n    }\n  }, [\n    partnerBotDatas,\n    convertPartnerBotsToPartnerAccountOptions,\n    getBalance,\n    selectedAccountType,\n    selectedBotAccount.value,\n    convertAllPartnerBotsToPartnerAccountOptions,\n    dispatch,\n    isPartnerBotInitialized,\n  ]);\n\n  // USE EFFECT getAllBotSettings\n  useEffect(() => {\n    getAllAutoBotSettings(page + 1);\n  }, [getAllAutoBotSettings, page]);\n\n  // USE EFFECT GET BUDGET MANAGEMENT OPTIONS\n  useEffect(() => {\n    getAllBotManagementList();\n    getAllBotSignals();\n    getAllPersonalSignals();\n  }, [getAllBotSignals, getAllBotManagementList, getAllPersonalSignals]);\n\n  // USE EFFECT CHECK USERNAME\n  // useEffect(() => {\n  //   const getData = setTimeout(() => {\n  //     if (formikUpsert.values.username !== '') {\n  //       axios\n  //         .get(`${APIs.partnerSearch}${formikUpsert.values.username}/`)\n  //         .then((response) => {\n  //           console.log(response.data);\n  //           if (response.data && response.data?.length > 0) {\n  //             setIsMasterAccountValid(true);\n  //             formikUpsert.setFieldValue('master', response.data.id);\n  //             // formikUpsert.setFieldValue('masterName', response.data.id);\n  //           } else {\n  //             setIsMasterAccountValid(false);\n  //           }\n  //         })\n  //         .catch((err) => {\n  //           setIsMasterAccountValid(false);\n  //         });\n  //     }\n  //   }, 500);\n\n  //   return () => clearTimeout(getData);\n  // }, [formikUpsert.values.username]);\n\n  // USE EFFECT SHOW/HIDE VALIDATING AMOUNT PER ORDER MODAL\n  useEffect(() => {\n    if (\n      +formikUpsert.values.amountPerOrder < 1 &&\n      !isAmountPerOrderAmountFocus\n    ) {\n      setModalAttributes((prev) => ({\n        ...prev,\n        isOpen: true,\n        icon: images.copy.warning,\n        headingMessage: \"Giá trị lệnh không hợp lệ\",\n        message: (\n          <>\n            Giá trị lệnh phải lớn hơn <span className=\"font-bold\">0</span>\n          </>\n        ),\n        buttonMessage: \"Xác nhận\",\n        handleOpen: handleOpenValidAmountPopupModal,\n        handleClose: handleCloseValidAmountPopupModal,\n      }));\n    }\n  }, [isAmountPerOrderAmountFocus]);\n\n  let isCreateTableValid = MANAGEMENT_LIST.DEU_LENH.includes(\n    selectedBotCapitalManagement?.label.toString()\n  );\n\n  if (\n    !MANAGEMENT_LIST.DEU_LENH.includes(\n      selectedBotCapitalManagement?.label.toString()\n    ) &&\n    Object.keys(formikUpsert.values.orderValue).length > 0\n  ) {\n    const orderValues = formikUpsert.values.orderValue;\n    isCreateTableValid = true;\n    let maxRowLength = 0;\n    Object.keys(orderValues).forEach((key) => {\n      maxRowLength = Math.max(maxRowLength, orderValues[key].length);\n    });\n    Object.keys(orderValues).forEach((key) => {\n      for (let i = 0; i < maxRowLength; i++) {\n        if (\n          typeof orderValues[key][i] === \"undefined\" ||\n          orderValues[key][i] === \"\"\n        ) {\n          isCreateTableValid = false;\n          break;\n        }\n      }\n    });\n    if (\n      MANAGEMENT_LIST.VICTOR.includes(\n        selectedBotCapitalManagement?.label.toString()\n      ) &&\n      Object.keys(orderValues).length < 2\n    ) {\n      isCreateTableValid = false;\n    } else if (\n      MANAGEMENT_LIST.CUSTOM.includes(\n        selectedBotCapitalManagement?.label.toString()\n      )\n    ) {\n      if (Object.keys(orderValues).length !== 3) {\n        isCreateTableValid = false;\n      } else {\n        Object.keys(orderValues)\n          .filter((key) => key !== \"layer1\")\n          .forEach((key) => {\n            orderValues[key].forEach((value) => {\n              if (+value >= 30 || +value <= 0) {\n                isCreateTableValid = false;\n                return;\n              }\n            });\n          });\n      }\n    }\n  }\n\n  const isStepOneCompleted =\n    // isCreateTableValid &&\n    +formikUpsert.values.amountPerOrder > 0 &&\n    formikUpsert.touched.configName &&\n    !Boolean(formikUpsert.errors.orderValueText) &&\n    !Boolean(formikUpsert.errors.configName) &&\n    !Boolean(formikUpsert.errors.youngProfit) &&\n    !Boolean(formikUpsert.errors.secondAction) &&\n    !Boolean(formikUpsert.errors.aimMax) &&\n    !Boolean(formikUpsert.errors.aimMin);\n\n  const isStepOneCompletedEditing =\n    // isCreateTableValid &&\n    !Boolean(formikUpsert.errors.orderValueText) &&\n    !Boolean(formikUpsert.errors.configName) &&\n    !Boolean(formikUpsert.errors.youngProfit) &&\n    !Boolean(formikUpsert.errors.secondAction) &&\n    !Boolean(formikUpsert.errors.aimMax) &&\n    !Boolean(formikUpsert.errors.aimMin);\n\n  const isCustomAutoWin = MANAGEMENT_LIST.CUSTOM.includes(\n    selectedBotCapitalManagement.label.toString()\n  );\n\n  const fetchAutoBotList = async () => {\n    try {\n      await axios.get(APIs.followbotschedule, {\n        params: {\n          page,\n        },\n      }).then((res) => {\n        const arr: FollowBotSchedule[] | undefined = res.data\n        if (Array.isArray(arr)) {\n          setFollowbotschedule(arr)\n          if (selectedPageSizeOption.value != null) {\n            setTotalPages(\n              Math.ceil(arr.length / + selectedPageSizeOption.value)\n            );\n          }\n        }\n      })\n    } catch (err) {\n\n    }\n  }\n\n  useEffect(() => {\n    fetchAutoBotList()\n  }, [])\n\n  const postGift = async () => {\n    try {\n      if (selectedGift && successUser) {\n        const exist = successUser\n        const follower = exist.value\n        const x = {\n          account_type: selectedGift.account_type,\n          aim_max: selectedGift.aim_max,\n          aim_min: selectedGift.aim_min,\n          auto_fillindemo: selectedGift.auto_fillindemo,\n          block_status: selectedGift.block_status,\n          budgetmanagement_id: selectedGift.budgetmanagement_id,\n          buget_position: {},\n          condition_fire: selectedGift.condition_fire,\n          config_name: selectedGift.config_name,\n          fire_four: selectedGift.fire_four,\n          fire_one: selectedGift.fire_one,\n          fire_three: selectedGift.fire_three,\n          signalpersonal_id: selectedGift.signalpersonal_id,\n          fire_two: selectedGift.fire_two,\n          follower: follower,\n          increase_type: selectedGift.increase_type,\n          o_amount: selectedGift.o_amount,\n          order_value: selectedGift.order_value,\n          reverse: selectedGift.reverse,\n          second_action: selectedGift.second_action,\n          signal_id: selectedGift.signal_id,\n          status: selectedGift.status,\n          step_type: selectedGift.step_type,\n          young_loss: selectedGift.young_loss,\n          young_profit: selectedGift.young_profit,\n          is_master: selectedGift.is_master\n        }\n        await axios.post(APIs.donateAutoBot, x)\n          .then(() => {\n            getAllAutoBotSettings(page + 1);\n            enqueueSnackbar(\"Tặng cấu hình bot thành công!\", {\n              variant: \"success\",\n            });\n            setSuccessUser(null)\n            setResearch(0)\n          })\n          .catch((err) => {\n            enqueueSnackbar(\n              `${err.data\n                ? JSON.stringify(err.data)\n                : \"Tặng cấu hình bot thất bại!\"\n              }`,\n              { variant: \"error\" }\n            );\n          });\n      }\n\n    } catch (err) {\n\n    }\n  }\n\n  const fetchUser = async () => {\n    try {\n      await axios\n        .get(`${APIs.partnerSearch}${searchUser}/`)\n        .then((response) => {\n          if (response.data && response.data?.length > 0) {\n            setSuccessUser({\n              label: response.data[0].username,\n              value: response.data[0].id\n            });\n          } else {\n            setSuccessUser(null)\n          }\n        })\n        .catch((err) => {\n          setSuccessUser(null)\n        });\n    } catch (err) {\n      setSuccessUser(null)\n    } finally {\n      setResearch((prev) => prev + 1)\n    }\n  }\n\n  useEffect(() => {\n    let handler: NodeJS.Timeout | null = null\n    if (searchUser.length > 0) {\n      handler = setTimeout(() => {\n        fetchUser();\n      }, 500);\n    }\n    if (searchUser.length <= 0) {\n      if (handler != null)\n        clearTimeout(handler);\n    }\n    return () => {\n      if (handler != null)\n        clearTimeout(handler);\n    };\n  }, [searchUser])\n\n  return (\n    <>\n      <CustomModal\n        isOpen={selectedGift != null}\n        // handleOpen={handleOpenGiftPopupModal}\n        handleClose={() => {\n          setSelectedGift(null)\n        }}\n      >\n        <div className=\"absolute left-[50%] top-[50%] translate-x-[-50%] translate-y-[-50%] w-[calc(100vw-2rem)] md:w-[31.25rem] bg-background-80 rounded-3xl\">\n          <div className=\"p-6 border-b border-ink-10 flex justify-between items-center\">\n            <h3 className=\"text-xl text-ink-100 font-semibold\">\n              Tặng cấu hình\n            </h3>\n            <CloseOutlined\n              className=\"cursor-pointer\"\n              onClick={() => {\n                setSelectedGift(null)\n              }}\n            />\n          </div>\n          <div className=\"p-6\">\n            <TextInput\n              id=\"giftUsername\"\n              name=\"giftUsername\"\n              type=\"text\"\n              label=\"Tên tài khoản muốn tặng\"\n              fullWidth\n              value={searchUser}\n              onChange={(e) => {\n                setSearchUser(e.target.value ?? '')\n              }}\n              onBlur={() => { }}\n              error={reSearch > 0 && successUser == null}\n              helperText={reSearch > 0 && successUser == null ? \"Người được tặng không hợp lệ\" : ''}\n              containerClassName=\"mb-6\"\n            />\n            <div className=\"flex justify-center md:justify-end\">\n              <CustomButton\n                className={`w-full md:w-[12rem] py-4 ${successUser == null ? 'cursor-not-allowed' : ''}`}\n                background={successUser == null ? \"bg-ink-10\" : \"bg-primary-100\"}\n                textColor=\"bg-background-100\"\n                textClassName=\"font-bold\"\n                onClick={async () => {\n                  await postGift()\n                }}\n              >\n                Gửi tặng\n              </CustomButton>\n            </div>\n          </div>\n        </div>\n      </CustomModal>\n      <div className=\"mb-6 h-fit bg-background-80 rounded-3xl\">\n        <div className=\"flex flex-col gap-4 p-6 border-b border-ink-10 md:flex-row md:justify-between md:items-center\">\n          <h1 className=\"text-xl font-semibold text-ink-100\">\n            Danh sách cấu hình Bot đã tạo\n          </h1>\n          <button\n            className=\"px-3 py-[0.625rem] w-full md:w-auto rounded-xl flex justify-center items-center gap-[0.625rem] bg-primary-100\"\n            onClick={() => {\n              if (partnerBotDatas.length === 0) {\n                setModalAttributes((prev) => ({\n                  ...prev,\n                  isOpen: true,\n                  icon: images.copy.account_not_integrate,\n                  headingMessage: \"Bạn chưa liên kết tài khoản\",\n                  message: (\n                    <>\n                      Liên kết tài khoản ngay để thực hiện giao dịch cùng đội\n                      ngũ chuyên gia của AI BotTrade\n                    </>\n                  ),\n                  buttonMessage: \"Liên kết tài khoản\",\n                  handleOpen: handleOpenAccountTradePopupModal,\n                  handleClose: handleCloseAccountTradePopupModal,\n                }));\n                return;\n              }\n              handleOpenUpsertModal();\n              setIsEditing(false);\n            }}\n          >\n            <img src={images.copy.plus} alt=\"BotLambotrade\" />\n            <p className=\"font-semibold text-transparent bg-background-100 bg-clip-text\">\n              Thêm mới\n            </p>\n          </button>\n        </div>\n        {allBotSettingResults.length === 0 && (\n          <div className=\"py-[5rem] flex flex-col justify-center items-center gap-y-6\">\n            <img\n              className=\"w-[10.25rem]\"\n              src={images.copy.empty}\n              alt=\"BotLambotrade\"\n            />\n            <p className=\"text-ink-60\">Danh sách cấu hình Bot Trade trống</p>\n          </div>\n        )}\n        {allBotSettingResults.length > 0 && (\n          <div className=\"flex flex-col p-6 gap-y-6\">\n            {/* SEARCH */}\n            <div>\n              <label\n                htmlFor=\"default-search\"\n                className=\"mb-2 text-sm font-medium text-gray-900 sr-only dark:text-ink-100\"\n              >\n                Search\n              </label>\n              <div className=\"relative\">\n                <div className=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n                  <svg\n                    aria-hidden=\"true\"\n                    className=\"w-5 h-5 text-black-opacity-100\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"2\"\n                      d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n                    ></path>\n                  </svg>\n                </div>\n                <input\n                  type=\"search\"\n                  id=\"default-search\"\n                  className=\"block w-full md:w-[21.375rem] py-3 pl-9 pr-8 text-sm text-black-opacity-40 border border-ink-20 rounded-xl bg-ink-05 focus:ring-blue-500 focus:border-blue-500 placeholder-black-opacity-40 dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n                  placeholder=\"Tìm kiếm\"\n                  value={searchInput}\n                  onChange={(e) => {\n                    setSearchInput(e.target.value);\n                  }}\n                  required\n                />\n              </div>\n            </div>\n\n            {/* SELECTED CHECK BOX */}\n            {Object.values(selectedIds).filter((value) => value === true)\n              .length > 0 && (\n                <div className=\"flex flex-col gap-4 px-4 py-3 bg-ink-05 rounded-xl md:flex-row md:justify-between md:items-center\">\n                  <p className=\"font-semibold text-ink-100\">\n                    {`Đã chọn ${Object.values(selectedIds).filter((value) => value === true)\n                      .length\n                      }`}\n                  </p>\n                  <div className=\"grid items-center justify-center grid-cols-2 gap-4 md:flex\">\n                    {/* <button\n                    className=\"px-8 py-3 bg-primary-100 rounded-xl\"\n                    onClick={() => {\n                      setIsDeletingByList(true);\n                      // deleteSettingByListIds();\n                      handleOpenPopupModal();\n                    }}\n                  >\n                    <p className=\"font-semibold text-transparent bg-background-100 bg-clip-text\">\n                      Xoá\n                    </p>\n                  </button> */}\n                    <BotTradeSettingButton\n                      icon={images.bot.on_gold}\n                      iconHover={images.bot.on}\n                      classNameHover=\"background-animation\"\n                      onClick={() => {\n                        const selectedListIds = Object.entries(selectedIds)\n                          .filter((selected) => selected[1])\n                          .map((selected) => +selected[0]);\n                        updateSettingStatusByIds(selectedListIds, \"active\");\n                        resetToggleButton();\n                      }}\n                    >\n                      Bật\n                    </BotTradeSettingButton>\n                    <BotTradeSettingButton\n                      icon={images.bot.off_gold}\n                      iconHover={images.bot.off}\n                      classNameHover=\"background-animation\"\n                      onClick={() => {\n                        const selectedListIds = Object.entries(selectedIds)\n                          .filter((selected) => selected[1])\n                          .map((selected) => +selected[0]);\n                        updateSettingStatusByIds(selectedListIds, \"inactive\");\n                        resetToggleButton();\n                      }}\n                    >\n                      Tắt\n                    </BotTradeSettingButton>\n                    <BotTradeSettingButton\n                      icon={images.bot.delete_gold}\n                      iconHover={images.bot.delete}\n                      classNameHover=\"background-animation\"\n                      onClick={() => {\n                        setIsDeletingByList(true);\n                        handleOpenPopupModal();\n                      }}\n                    >\n                      Xoá\n                    </BotTradeSettingButton>\n                    <BotTradeSettingButton\n                      icon={images.bot.reload_gold}\n                      iconHover={images.bot.reload}\n                      classNameHover=\"background-animation\"\n                      onClick={() => {\n                        // showIsDevelopingModal();\n                        resetAllCurrent();\n                      }}\n                    >\n                      Nạp lại\n                    </BotTradeSettingButton>\n                  </div>\n                </div>\n              )}\n\n            {/* TABLE */}\n            <div>\n              <div\n                className={`border border-ink-05 rounded-2xl w-full ${!isDesktop ? \"overflow-x-scroll\" : \"\"\n                  }`}\n              >\n                <table className=\"w-full\" {...getTableProps()}>\n                  <thead>\n                    {headerGroups.map((headerGroup) => (\n                      <tr {...headerGroup.getHeaderGroupProps()}>\n                        {headerGroup.headers.map((column) => (\n                          <th\n                            className=\"p-4 last:w-[1%] whitespace-nowrap xl:whitespace-normal last:whitespace-nowrap bg-primary-05 first-of-type:rounded-tl-2xl last-of-type:rounded-tr-2xl text-sm text-ink-100 font-normal\"\n                            {...column.getHeaderProps()}\n                          >\n                            {column.render(\"Header\")}\n                          </th>\n                        ))}\n                      </tr>\n                    ))}\n                  </thead>\n                  <tbody {...getTableBodyProps()}>\n                    {rows.map((row) => {\n                      prepareRow(row);\n                      return (\n                        <tr\n                          className={`border-b border-ink-10 last:border-0 whitespace-nowrap text-ellipsis`}\n                          {...row.getRowProps()}\n                        >\n                          {row.cells.map((cell) => (\n                            <td\n                              className=\"p-4 last:w-[1%] last:whitespace-nowrap\"\n                              {...cell.getCellProps()}\n                            >\n                              {cell.render(\"Cell\")}\n                            </td>\n                          ))}\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n\n            {/* PAGINATION */}\n            <div\n              className={`flex flex-col justify-center items-end md:flex-row md:justify-end md:items-center gap-2`}\n            >\n              <div>\n                <SelectInput\n                  value={selectedPageSizeOption}\n                  onChange={handleSelectPageSize}\n                  inputClassName=\"!py-2 !pr-8 text-sm\"\n                  indicatorContainerClassName=\"!right-3\"\n                  indicatorContainerIconClassName=\"!w-[1rem]\"\n                  menuPortalClassName={`min-w-[10.25rem] ${isMobile ? \"translate-x-[-3.2rem]\" : \"\"\n                    }`}\n                  name=\"select\"\n                  options={PAGE_SIZE_OPTIONS}\n                />\n              </div>\n\n              <ReactPaginate\n                breakLabel=\"...\"\n                onPageChange={handlePageChange}\n                marginPagesDisplayed={isMobile ? 2 : 3}\n                pageCount={totalPages}\n                previousLabel={\n                  <div\n                    onMouseLeave={() => {\n                      setIsPrevHover(false);\n                    }}\n                    onMouseEnter={() => {\n                      setIsPrevHover(true);\n                    }}\n                    className=\"p-[0.375rem] border-input-ink before:rounded-lg\"\n                  >\n                    {isPrevHover ? (\n                      <img\n                        className=\"w-[1.25rem]\"\n                        src={images.table.pagination_left_arrow_gold}\n                        alt=\"BotLambotrade\"\n                      />\n                    ) : (\n                      <img\n                        className=\"w-[1.25rem]\"\n                        src={images.table.pagination_left_arrow}\n                        alt=\"BotLambotrade\"\n                      />\n                    )}\n                  </div>\n                }\n                nextLabel={\n                  <div\n                    onMouseLeave={() => {\n                      setIsNextHover(false);\n                    }}\n                    onMouseEnter={() => {\n                      setIsNextHover(true);\n                    }}\n                    className=\"p-[0.375rem] border-input-ink before:rounded-lg\"\n                  >\n                    {isNextHover ? (\n                      <img\n                        className=\"w-[1.25rem]\"\n                        src={images.table.pagination_right_arrow_gold}\n                        alt=\"BotLambotrade\"\n                      />\n                    ) : (\n                      <img\n                        className=\"w-[1.25rem]\"\n                        src={images.table.pagination_right_arrow}\n                        alt=\"BotLambotrade\"\n                      />\n                    )}\n                  </div>\n                }\n                forcePage={page}\n                // pageClassName=\"py-[0.3125rem] px-3 border-input-ink before:rounded-lg cursor-pointer\"\n                pageLinkClassName=\"page-link relative z-10 py-[0.3125rem] px-3 border-input-ink before:rounded-lg cursor-pointer\"\n                previousClassName=\"page-item flex\"\n                previousLinkClassName=\"page-link\"\n                nextClassName=\"page-item flex\"\n                nextLinkClassName=\"page-link relative z-10\"\n                breakClassName=\"page-item py-[0.375rem] px-3 border-input-ink before:rounded-lg cursor-pointer\"\n                breakLinkClassName=\"page-link z-10\"\n                containerClassName=\"flex items-center gap-x-2 text-ink-80 text-sm\"\n                activeClassName=\"pagination-active border-primary before:rounded-lg\"\n              />\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* UPSERT MODAL MOBILE */}\n\n      {/* UPSERT MODAL DESKTOP */}\n      <CustomModal\n        isOpen={isUpsertModalOpen}\n        handleOpen={handleOpenUpsertModal}\n        handleClose={handleCloseUpsertModal}\n      >\n        <animated.div style={isMobile ? animationUpsertModalMobile : {}}>\n          <form onSubmit={formikUpsert.handleSubmit}>\n            <div className=\"absolute flex flex-col md:left-[50%] md:top-[50%] md:translate-x-[-50%] md:translate-y-[-50%] bg-background-80 h-[100svh] w-full md:w-[45rem] md:h-auto md:rounded-3xl\">\n              {/* HEADING */}\n              <div className=\"flex items-center justify-between p-6 border-b border-ink-10\">\n                <h1 className=\"text-xl font-semibold text-ink-100\">\n                  {!isEditing ? \"Thêm cấu hình Bot\" : \"Chỉnh sửa cấu hình Bot\"}\n                </h1>\n                <CloseOutlined\n                  className=\"cursor-pointer\"\n                  onClick={handleCloseUpsertModal}\n                />\n              </div>\n              {/* FORM */}\n              <div\n                className=\"md:max-h-[calc(100vh-19rem)] p-6 overflow-y-auto overflow-x-hidden\"\n                ref={scrollElement}\n              >\n                {/* FORMIK STEPS */}\n                <div className=\"relative mb-9\">\n                  <div className=\"grid grid-cols-2\">\n                    <div className=\"flex flex-col items-center gap-y-3\">\n                      <p\n                        className={`${isStepOneCompleted ||\n                          (isEditing && isStepOneCompletedEditing)\n                          ? \"p-[0.375rem]\"\n                          : \"px-4 py-2\"\n                          } rounded-full bg-primary-100 border-circle-primary text-xl text-background-100 font-bold text-center`}\n                      >\n                        {isStepOneCompleted ||\n                          (isEditing && isStepOneCompletedEditing) ? (\n                          <img\n                            src={images.bot.completed_V}\n                            alt=\"BotLambotrade\"\n                          />\n                        ) : (\n                          \"1\"\n                        )}\n                      </p>\n                      <p className=\"text-center text-ink-100\">\n                        Cấu hình {isMobile && <br />} quản lý vốn\n                      </p>\n                    </div>\n                    <div className=\"flex flex-col items-center gap-y-3\">\n                      <p\n                        className={`${!isSettingCapitalManagement && formikUpsert.isValid\n                          ? \"p-[0.375rem]\"\n                          : \"px-4 py-2\"\n                          } rounded-full ${isStepOneCompleted ||\n                            (isEditing &&\n                              isStepOneCompletedEditing &&\n                              !isSettingCapitalManagement)\n                            ? \"bg-primary-100 border-circle-primary text-background-100\"\n                            : \"bg-ink-10 border-circle-ink text-ink-60\"\n                          } text-xl font-bold text-center`}\n                      >\n                        {!isSettingCapitalManagement && formikUpsert.isValid ? (\n                          <img\n                            src={images.bot.completed_V}\n                            alt=\"BotLambotrade\"\n                          />\n                        ) : (\n                          \"2\"\n                        )}\n                      </p>\n                      <p\n                        className={`${isStepOneCompleted ||\n                          (isEditing &&\n                            isStepOneCompletedEditing &&\n                            !isSettingCapitalManagement)\n                          ? \"text-ink-100\"\n                          : \"text-ink-60\"\n                          } text-center`}\n                      >\n                        Cấu hình {isMobile && <br />} phương pháp\n                      </p>\n                    </div>\n                  </div>\n                  <div className=\"absolute left-[50%] top-[1.75rem] translate-x-[-50%] bg-primary-20 w-[calc(50%-4rem)] md:w-[16.375rem] h-[1px]\" />\n                </div>\n\n                {/* FORMIK INPUT */}\n                {isSettingCapitalManagement && (\n                  <animated.div style={animationSettingCapitalManagement}>\n                    <div className=\"flex flex-col\">\n                      {/* SELECT PARTNER */}\n                      <div className=\"p-4 mb-6 bg-ink-05 rounded-2xl\">\n                        <CopyTradeZoomSelectInput\n                          containerClassName=\"mb-4\"\n                          inputValue={selectedAccountType}\n                          onSelectChange={onSelectedAccountTypeChange}\n                          options={ACCOUNT_TYPES}\n                          isSearchEnabled={false}\n                          labelName=\"Loại tài khoản\"\n                        />\n                        {partnerBotDatas.length > 0 && (\n                          <CopyTradeZoomSelectInput\n                            containerClassName=\"mb-4\"\n                            inputValue={selectedBotAccount}\n                            onSelectChange={onSelectedBotAccountChange}\n                            options={accountOptions}\n                            isSearchEnabled={false}\n                            labelName=\"Tài khoản giao dịch\"\n                          />\n                        )}\n                        {partnerBotDatas.length > 0 && (\n                          <div className=\"flex items-center justify-between\">\n                            <div className=\"flex items-center px-3 gap-x-2\">\n                              <p className=\"text-sm text-ink-100\">Số dư ví:</p>\n                              {selectedAccountType.value === \"DEMO\" && (\n                                <img\n                                  onClick={() => {\n                                    reloadDemoBalance(selectedBotAccount.value);\n                                  }}\n                                  className=\"w-[1.5rem] cursor-pointer\"\n                                  src={images.home.reload}\n                                  alt=\"BotLambotrade\"\n                                />\n                              )}\n                            </div>\n                            <p className=\"text-xl text-transparent bg-primary-100 bg-clip-text\">\n                              $\n                              {selectedAccountType.value === \"DEMO\"\n                                ? botBalance.demo_balance.toLocaleString(\n                                  \"en-US\",\n                                  options\n                                )\n                                : selectedAccountType.value === \"LIVE\"\n                                  ? botBalance.balance.toLocaleString(\n                                    \"en-US\",\n                                    options\n                                  )\n                                  : 0}\n                            </p>\n                          </div>\n                        )}\n                      </div>\n\n                      {/* Tên cấu hình Bot and Lãi con */}\n                      <div className=\"grid justify-center grid-cols-2 gap-4 mb-4 md:mb-6 md:grid-cols-2\">\n                        <div className=\"col-span-2\">\n                          <TextInput\n                            fullWidth={true}\n                            name=\"configName\"\n                            id=\"configName\"\n                            label=\"Tên cấu hình Bot\"\n                            type=\"text\"\n                            value={formikUpsert.values.configName}\n                            onChange={formikUpsert.handleChange}\n                            resetValue={() => {\n                              formikUpsert.setFieldValue(\"configName\", \"\");\n                            }}\n                            onBlur={formikUpsert.handleBlur}\n                            placeholder=\"Tên cấu hình Bot\"\n                            error={\n                              formikUpsert.touched.configName &&\n                              Boolean(formikUpsert.errors.configName)\n                            }\n                            helperText={\n                              formikUpsert.touched.configName &&\n                              formikUpsert.errors.configName\n                            }\n                          />\n                        </div>\n                        <TextInput\n                          fullWidth={true}\n                          name=\"youngProfit\"\n                          id=\"youngProfit\"\n                          label=\"Lãi con\"\n                          type=\"string\"\n                          value={formikUpsert.values.youngProfit}\n                          onChange={formikUpsert.handleChange}\n                          onBlur={formikUpsert.handleBlur}\n                          placeholder=\"Lãi con\"\n                          error={\n                            formikUpsert.touched.youngProfit &&\n                            Boolean(formikUpsert.errors.youngProfit)\n                          }\n                          helperText={\n                            formikUpsert.touched.youngProfit &&\n                            formikUpsert.errors.youngProfit ? String(formikUpsert.errors.youngProfit) : ''\n                          }\n                        />\n                        <TextInput\n                          fullWidth={true}\n                          name=\"young_loss\"\n                          id=\"young_loss\"\n                          label=\"Lỗ con\"\n                          type=\"string\"\n                          value={formikUpsert.values.young_loss}\n                          onChange={formikUpsert.handleChange}\n                          onBlur={formikUpsert.handleBlur}\n                          placeholder=\"Lỗ con\"\n                          error={\n                            formikUpsert.touched.young_loss &&\n                            Boolean(formikUpsert.errors.young_loss)\n                          }\n                          helperText={\n                            formikUpsert.touched.young_loss &&\n                            formikUpsert.errors.young_loss ? String(formikUpsert.errors.young_loss) : ''\n                          }\n                        />\n                      </div>\n\n                      {/* Quản lý vốn and Giây vào lệnh */}\n                      <div className=\"grid justify-center grid-cols-1 gap-4 mb-6 md:grid-cols-2\">\n                        <SelectInput\n                          value={selectedBotCapitalManagement}\n                          label=\"Quản lý vốn\"\n                          onChange={handleSelectBotCapitalManagement}\n                          name=\"select-partner-account\"\n                          options={botCapitalManagementOptions}\n                        />\n\n                        {!isMobile && (\n                          <TextInput\n                            fullWidth={true}\n                            name=\"secondAction\"\n                            id=\"secondAction\"\n                            label=\"Giây vào lệnh\"\n                            type=\"text\"\n                            value={formikUpsert.values.secondAction}\n                            onChange={formikUpsert.handleChange}\n                            onBlur={formikUpsert.handleBlur}\n                            placeholder=\"Giây vào lệnh\"\n                            error={\n                              formikUpsert.touched.secondAction &&\n                              Boolean(formikUpsert.errors.secondAction)\n                            }\n                            helperText={\n                              formikUpsert.touched.secondAction &&\n                              formikUpsert.errors.secondAction\n                            }\n                            symbol={\"s\"}\n                          />\n                        )}\n\n                        {isMobile &&\n                          selectedBotCapitalManagement.label != null &&\n                          (MANAGEMENT_LIST.FIBO.includes(\n                            selectedBotCapitalManagement.label.toString()\n                          ) ||\n                            MANAGEMENT_LIST.MARTINGALE.includes(\n                              selectedBotCapitalManagement.label.toString()\n                            )) && (\n                            <SelectInput\n                              value={selectedIncreaseType}\n                              label=\"Hình thức tăng giá trị\"\n                              onChange={handleSelectIncreaseType}\n                              name=\"select-partner-account\"\n                              options={INCREASE_TYPE_OPTIONS}\n                            />\n                          )}\n                      </div>\n\n                      {!isMobile &&\n                        selectedBotCapitalManagement.label != null &&\n                        (MANAGEMENT_LIST.FIBO.includes(\n                          selectedBotCapitalManagement.label.toString()\n                        ) ||\n                          MANAGEMENT_LIST.MARTINGALE.includes(\n                            selectedBotCapitalManagement.label.toString()\n                          )) && (\n                          <div className=\"grid justify-center grid-cols-1 gap-4 mb-6\">\n                            <SelectInput\n                              value={selectedIncreaseType}\n                              label=\"Hình thức tăng giá trị\"\n                              onChange={handleSelectIncreaseType}\n                              name=\"select-partner-account\"\n                              options={INCREASE_TYPE_OPTIONS}\n                            />\n                          </div>\n                        )}\n\n                      {isMobile && (\n                        <div className=\"grid justify-center grid-cols-1 gap-4 mb-6\">\n                          <TextInput\n                            fullWidth={true}\n                            name=\"secondAction\"\n                            id=\"secondAction\"\n                            label=\"Giây vào lệnh\"\n                            type=\"text\"\n                            value={formikUpsert.values.secondAction}\n                            onChange={formikUpsert.handleChange}\n                            onBlur={formikUpsert.handleBlur}\n                            placeholder=\"Giây vào lệnh\"\n                            error={\n                              formikUpsert.touched.secondAction &&\n                              Boolean(formikUpsert.errors.secondAction)\n                            }\n                            helperText={\n                              formikUpsert.touched.secondAction &&\n                              formikUpsert.errors.secondAction\n                            }\n                            symbol={\"s\"}\n                          />\n                        </div>\n                      )}\n\n                      {/* GIÁ TRỊ 1 LỆNH */}\n                      <div className=\"mb-6\">\n                        <div className=\"flex justify-between mb-4 text-sm\">\n                          <p className=\"text-ink-100\">GIÁ TRỊ 1 LỆNH</p>\n                          <p\n                            className=\"text-transparent cursor-pointer border-bottom-primary bg-primary-100 bg-clip-text\"\n                            onClick={() => {\n                              handleOpenGuidePopupModal();\n                            }}\n                          >\n                            Xem hướng dẫn\n                          </p>\n                        </div>\n                        {/* Đều lệnh */}\n                        {selectedBotCapitalManagement.label != null &&\n                          MANAGEMENT_LIST.DEU_LENH.includes(\n                            selectedBotCapitalManagement.label.toString()\n                          ) && (\n                            <CustomInputSpinner\n                              fullWidth={true}\n                              name=\"amountPerOrder\"\n                              id=\"amountPerOrder\"\n                              value={formikUpsert.values.amountPerOrder}\n                              placeholder=\"Mời nhập giá trị lệnh\"\n                              error={\n                                formikUpsert.touched.amountPerOrder &&\n                                Boolean(formikUpsert.errors.amountPerOrder)\n                              }\n                              helperText={\n                                formikUpsert.touched.amountPerOrder &&\n                                formikUpsert.errors.amountPerOrder\n                              }\n                              onValueChange={(value, _, values) => {\n                                handleAmount(value, \"amountPerOrder\", values);\n                              }}\n                              onFocus={() => {\n                                setIsAmountPerOrderAmountFocus(true);\n                              }}\n                              onBlur={(e) => {\n                                formikUpsert.handleBlur(e);\n                                if (Number((e.target.value.replace('$', '').trim() || 0)) <= 0) {\n                                  setIsAmountPerOrderAmountFocus(false);\n                                }\n                              }}\n                              handleValueMinusOne={() => {\n                                handleAmountMinusOne(\n                                  formikUpsert.values.amountPerOrder,\n                                  \"amountPerOrder\"\n                                );\n                              }}\n                              handleValuePlusOne={() => {\n                                handleOrderAmountPlusOne(\n                                  formikUpsert.values.amountPerOrder,\n                                  \"amountPerOrder\"\n                                );\n                              }}\n                              onFixedValueChange={(value: string | number) => {\n                                // CHECK IF PARTNER BOT ALREADY ASSOCIATED\n                                formikUpsert.setFieldValue(\"orderValue\", {});\n                                const balance =\n                                  selectedAccountType.value === \"DEMO\"\n                                    ? botBalance.demo_balance\n                                    : botBalance.balance;\n                                if (typeof value === \"number\") {\n                                  const plusAmount = +formikUpsert.values.amountPerOrder + value;\n                                  if (plusAmount <= balance) {\n                                    // console.log(plusAmount, 'plusAmount')\n                                    formikUpsert.setFieldValue(\n                                      \"amountPerOrder\",\n                                      plusAmount\n                                    );\n                                  } else {\n                                    // console.log(balance, 'balance')\n                                    formikUpsert.setFieldValue(\n                                      \"amountPerOrder\",\n                                      balance\n                                    );\n                                  }\n                                } else {\n                                  // ALL\n                                  formikUpsert.setFieldValue(\n                                    \"amountPerOrder\",\n                                    balance\n                                  );\n                                }\n                              }}\n                              PREFIX_VALUE=\"+\"\n                              VALUES={PLUS_VALUES}\n                            />\n                          )}\n\n                        {/* OTHER METHODS */}\n                        {selectedBotCapitalManagement.label != null &&\n                          !MANAGEMENT_LIST.DEU_LENH.includes(\n                            selectedBotCapitalManagement.label.toString()\n                          ) && (\n                            <div className=\"flex flex-col gap-y-4\">\n\n                              <div className=\"flex flex-col flex-auto w-full overflow-auto border-collapse rounded-xl\">\n                                {/* TABLE */}\n                                {totalCreateTableRows.length <= 1\n                                  ? <TextInput\n                                    fullWidth={true}\n                                    name=\"orderValueText\"\n                                    id=\"orderValueText\"\n                                    label=\"Giá trị vào lệnh\"\n                                    type=\"text\"\n                                    value={formikUpsert.values.orderValueText}\n                                    onChange={formikUpsert.handleChange}\n                                    resetValue={() => {\n                                      formikUpsert.setFieldValue(\"orderValueText\", \"\");\n                                    }}\n                                    onBlur={formikUpsert.handleBlur}\n                                    placeholder=\"Giá trị vào lệnh\"\n                                    error={\n                                      formikUpsert.touched.orderValueText &&\n                                      Boolean(formikUpsert.errors.orderValueText)\n                                    }\n                                    helperText={\n                                      formikUpsert.touched.orderValueText &&\n                                      formikUpsert.errors.orderValueText\n                                    }\n                                  />\n                                  : <TextArea\n                                    fullWidth={true}\n                                    name=\"orderValueText\"\n                                    id=\"orderValueText\"\n                                    label=\"Giá trị vào lệnh\"\n                                    type=\"text\"\n                                    value={formikUpsert.values.orderValueText}\n                                    onChange={formikUpsert.handleChange}\n                                    resetValue={() => {\n                                      formikUpsert.setFieldValue(\"orderValueText\", \"\");\n                                    }}\n                                    onBlur={formikUpsert.handleBlur}\n                                    placeholder=\"Giá trị vào lệnh\"\n                                    error={\n                                      formikUpsert.touched.orderValueText &&\n                                      Boolean(formikUpsert.errors.orderValueText)\n                                    }\n                                    helperText={\n                                      formikUpsert.touched.orderValueText &&\n                                      formikUpsert.errors.orderValueText\n                                    }\n                                  />\n                                }\n                                <div className=\"flex flex-wrap items-center justify-between gap-4 p-4\">\n                                  {MANAGEMENT_LIST.FIBO.includes(\n                                    selectedBotCapitalManagement.label.toString()\n                                  ) && (\n                                      <div className=\"flex gap-6\">\n                                        <CustomRadioNoBackground\n                                          checked={\n                                            formikUpsert.values.stepType === 1\n                                          }\n                                          onClick={() => {\n                                            formikUpsert.setFieldValue(\n                                              \"stepType\",\n                                              1\n                                            );\n                                          }}\n                                          containerClassName=\"flex-grow\"\n                                          label=\"Step 1\"\n                                        />\n                                        <CustomRadioNoBackground\n                                          checked={\n                                            formikUpsert.values.stepType === 2\n                                          }\n                                          onClick={() => {\n                                            formikUpsert.setFieldValue(\n                                              \"stepType\",\n                                              2\n                                            );\n                                          }}\n                                          label=\"Step 2\"\n                                        />\n                                        <CustomRadioNoBackground\n                                          checked={\n                                            formikUpsert.values.stepType === 3\n                                          }\n                                          onClick={() => {\n                                            formikUpsert.setFieldValue(\n                                              \"stepType\",\n                                              3\n                                            );\n                                          }}\n                                          label=\"Step 3\"\n                                        />\n                                      </div>\n                                    )}\n                                </div>\n                              </div>\n                              {/* ERROR MESSAGE */}\n                              {/* {!isCreateTableValid && (\n                                <div className=\"text-red-100\">\n                                  Please input the right amount of value\n                                </div>\n                              )} */}\n                            </div>\n                          )}\n                      </div>\n\n                      {/* AIM */}\n                      <div className=\"grid grid-cols-2 gap-4 mb-6\">\n                        <TextInput\n                          fullWidth={true}\n                          name=\"aimMax\"\n                          id=\"aimMax\"\n                          label=\"Mục tiêu chốt lãi\"\n                          type=\"number\"\n                          value={formikUpsert.values.aimMax}\n                          onValueChange={(value, _, values) => {\n                            handleAmount(value, \"aimMax\", values);\n                          }}\n                          onBlur={formikUpsert.handleBlur}\n                          placeholder=\"Mục tiêu chốt lãi\"\n                          error={\n                            formikUpsert.touched.aimMax &&\n                            Boolean(formikUpsert.errors.aimMax)\n                          }\n                          helperText={\n                            formikUpsert.touched.aimMax &&\n                            formikUpsert.errors.aimMax\n                          }\n                          inputClassName=\"!text-green-100 !caret-green-100\"\n                          symbolClassName=\"text-green-100\"\n                          symbol=\"$\"\n                          prefix=\"\"\n                        />\n                        <TextInput\n                          fullWidth={true}\n                          name=\"aimMin\"\n                          id=\"aimMin\"\n                          label=\"Mục tiêu cắt lỗ\"\n                          type=\"number\"\n                          value={formikUpsert.values.aimMin}\n                          onValueChange={(value, _, values) => {\n                            handleAmount(value, \"aimMin\", values);\n                          }}\n                          onBlur={formikUpsert.handleBlur}\n                          placeholder=\"Mục tiêu cắt lỗ\"\n                          error={\n                            formikUpsert.touched.aimMin &&\n                            Boolean(formikUpsert.errors.aimMin)\n                          }\n                          helperText={\n                            formikUpsert.touched.aimMin &&\n                            formikUpsert.errors.aimMin\n                          }\n                          inputClassName=\"!text-red-100 !caret-red-100\"\n                          symbolClassName=\"text-red-100\"\n                          symbol=\"$\"\n                          prefix=\"\"\n                        />\n                      </div>\n\n                      {/* Tự nạp DEMO khi không đủ số dư */}\n                      <div className=\"flex items-center mb-6 gap-x-2\">\n                        <input\n                          type=\"checkbox\"\n                          className=\"text-center checkbox\"\n                          checked={formikUpsert.values.autoFillInDemo}\n                          onChange={() => {\n                            handleInputCheckbox(\n                              \"autoFillInDemo\",\n                              !formikUpsert.values.autoFillInDemo\n                            );\n                          }}\n                        />\n                        <p className=\"text-ink-100\">\n                          Tự nạp DEMO khi không đủ số dư\n                        </p>\n                      </div>\n                    </div>\n                  </animated.div>\n                )}\n\n                {!isSettingCapitalManagement && (\n                  <animated.div style={animationSettingMethod}>\n                    {/* CÔNG THỨC GIAO DỊCH */}\n                    <div className=\"flex items-center justify-between gap-4 mb-6\">\n                      <p className=\"text-sm text-ink-100\">\n                        CÔNG THỨC GIAO DỊCH\n                      </p>\n                      <div className=\"flex items-center gap-x-2\">\n                        <input\n                          type=\"checkbox\"\n                          className=\"text-center checkbox\"\n                          checked={formikUpsert.values.reverse}\n                          onChange={() => {\n                            handleInputCheckbox(\n                              \"reverse\",\n                              !formikUpsert.values.reverse\n                            );\n                          }}\n                        />\n                        <p className=\"text-ink-100\">Đảo lệnh</p>\n                      </div>\n                    </div>\n\n                    {/* Phương pháp */}\n                    <div className=\"grid items-center justify-center grid-cols-1 gap-4 mb-6 md:grid-flow-col md:grid-cols-2 md:auto-cols-fr\">\n                      <CustomRadio\n                        checked={formikUpsert.values.isSignal}\n                        onClick={() => {\n                          formikUpsert.setFieldValue(\"isSignal\", true);\n                        }}\n                        containerClassName=\"flex-grow\"\n                        label=\"Signal Telegram\"\n                      />\n                      <CustomRadio\n                        checked={!formikUpsert.values.isSignal}\n                        onClick={() => {\n                          formikUpsert.setFieldValue(\"isSignal\", false);\n                        }}\n                        label=\"Phương pháp cá nhân\"\n                      />\n                    </div>\n\n                    {/* Danh sách Signal (Bot hoặc Personal) */}\n                    <div className=\"mb-8\">\n                      {formikUpsert.values.isSignal ? (\n                        <SelectInput\n                          value={selectedSignalBot}\n                          label=\"Danh sách Bot\"\n                          onChange={handleSelectSignalBot}\n                          name=\"select-signal-bot\"\n                          options={signalBotOptions}\n                          fullWidth\n                        />\n                      ) : (\n                        <SelectInput\n                          value={selectedSignalPersonal}\n                          label=\"Danh sách phương pháp\"\n                          onChange={handleSelectSignalPersonal}\n                          name=\"select-signal-personal\"\n                          options={signalPersonalOptions}\n                          fullWidth\n                        />\n                      )}\n                      {signalError && (\n                        <p className=\"px-2 py-3 text-sm text-red-100\">\n                          {signalError}\n                        </p>\n                      )}\n                    </div>\n\n                    {/* ĐIỀU KIỆN CHÁY */}\n                    <div className=\"mb-8\">\n                      <div className=\"flex items-center gap-4\">\n                        <p className=\"text-sm text-ink-100\">ĐIỀU KIỆN CHÁY</p>\n                        <CustomSwitch\n                          checked={formikUpsert.values.conditionFire}\n                          onChange={(e) => {\n                            formikUpsert.setFieldValue(\n                              \"conditionFire\",\n                              !formikUpsert.values.conditionFire\n                            );\n                            formikUpsert.setFieldValue(\"fireOne\", 1);\n                            formikUpsert.setFieldValue(\"fireTwo\", 1);\n                            formikUpsert.setFieldValue(\"fireThree\", 1);\n                            formikUpsert.setFieldValue(\"fireFour\", 1);\n                          }}\n                        />\n                      </div>\n                      {formikUpsert.values.conditionFire && (\n                        <div className=\"grid grid-cols-2 gap-4 mt-6\">\n                          <TextInput\n                            fullWidth={true}\n                            name=\"fireOne\"\n                            id=\"fireOne\"\n                            label=\"Cháy x phiên\"\n                            type=\"number\"\n                            value={formikUpsert.values.fireOne}\n                            onValueChange={(value, _, values) => {\n                              if (typeof value !== \"undefined\") {\n                                const wholeNumber = parseInt(value);\n                                handleAmount(wholeNumber, \"fireOne\", values);\n                              } else {\n                                handleAmount(value, \"fireOne\", values);\n                              }\n                            }}\n                            onBlur={formikUpsert.handleBlur}\n                            placeholder=\"Cháy x phiên\"\n                            error={\n                              formikUpsert.touched.fireOne &&\n                              Boolean(formikUpsert.errors.fireOne)\n                            }\n                            helperText={\n                              formikUpsert.touched.fireOne &&\n                              formikUpsert.errors.fireOne\n                            }\n                            decimalScale={0}\n                          />\n                          <TextInput\n                            fullWidth={true}\n                            name=\"fireTwo\"\n                            id=\"fireTwo\"\n                            label=\"Trong x phiên\"\n                            type=\"number\"\n                            value={formikUpsert.values.fireTwo}\n                            onValueChange={(value, _, values) => {\n                              if (typeof value !== \"undefined\") {\n                                const wholeNumber = parseInt(value);\n                                handleAmount(wholeNumber, \"fireTwo\", values);\n                              } else {\n                                handleAmount(value, \"fireTwo\", values);\n                              }\n                            }}\n                            onBlur={formikUpsert.handleBlur}\n                            placeholder=\"Trong x phiên\"\n                            error={\n                              formikUpsert.touched.fireTwo &&\n                              Boolean(formikUpsert.errors.fireTwo)\n                            }\n                            helperText={\n                              formikUpsert.touched.fireTwo &&\n                              formikUpsert.errors.fireTwo\n                            }\n                            decimalScale={0}\n                            decimalsLimit={0}\n                          />\n                          <TextInput\n                            fullWidth={true}\n                            name=\"fireThree\"\n                            id=\"fireThree\"\n                            label=\"Bỏ x phiên\"\n                            type=\"number\"\n                            value={formikUpsert.values.fireThree}\n                            onValueChange={(value, _, values) => {\n                              if (typeof value !== \"undefined\") {\n                                const wholeNumber = parseInt(value);\n                                handleAmount(wholeNumber, \"fireThree\", values);\n                              } else {\n                                handleAmount(value, \"fireThree\", values);\n                              }\n                            }}\n                            onBlur={formikUpsert.handleBlur}\n                            placeholder=\"Bỏ x phiên\"\n                            error={\n                              formikUpsert.touched.fireThree &&\n                              Boolean(formikUpsert.errors.fireThree)\n                            }\n                            helperText={\n                              formikUpsert.touched.fireThree &&\n                              formikUpsert.errors.fireThree\n                            }\n                            decimalScale={0}\n                            decimalsLimit={0}\n                            fixedDecimalLength={0}\n                          />\n                          <TextInput\n                            fullWidth={true}\n                            name=\"fireFour\"\n                            id=\"fireFour\"\n                            label=\"Đánh x phiên\"\n                            type=\"number\"\n                            value={formikUpsert.values.fireFour}\n                            onValueChange={(value, _, values) => {\n                              if (typeof value !== \"undefined\") {\n                                const wholeNumber = parseInt(value);\n                                handleAmount(wholeNumber, \"fireFour\", values);\n                              } else {\n                                handleAmount(value, \"fireFour\", values);\n                              }\n                            }}\n                            onBlur={formikUpsert.handleBlur}\n                            placeholder=\"Đánh x phiên\"\n                            error={\n                              formikUpsert.touched.fireFour &&\n                              Boolean(formikUpsert.errors.fireFour)\n                            }\n                            helperText={\n                              formikUpsert.touched.fireFour &&\n                              formikUpsert.errors.fireFour\n                            }\n                            decimalScale={0}\n                            decimalsLimit={0}\n                          />\n                        </div>\n                      )}\n                    </div>\n\n                    {/* TIỆN ÍCH */}\n                    <div className=\"mb-6\">\n                      <p className=\"mb-6 text-sm text-ink-100\">TIỆN ÍCH</p>\n                      <div className=\"grid grid-cols-1 gap-4 md:grid-cols-2\">\n                        <div\n                          className=\"p-4 flex items-center justify-between gap-x-[0.625rem] rounded-xl border-input-ink cursor-pointer\"\n                          onClick={() => {\n                            formikUpsert.setFieldValue(\n                              \"isShareConfig\",\n                              !formikUpsert.values.isShareConfig\n                            );\n                          }}\n                        >\n                          <p className=\"text-ink-100\">Chia sẻ cấu hình</p>\n                          <CustomSwitch\n                            checked={formikUpsert.values.isShareConfig}\n                            onChange={(e) => {\n                              formikUpsert.setFieldValue(\n                                \"isShareConfig\",\n                                !formikUpsert.values.isShareConfig\n                              );\n                            }}\n                          />\n                        </div>\n                        <></>\n                        <div\n                          className=\"p-4 flex items-center justify-between gap-x-[0.625rem] rounded-xl border-input-ink cursor-pointer\"\n                          onClick={() => {\n                            formikUpsert.setFieldValue(\n                              \"isMasterConfig\",\n                              !formikUpsert.values.isMasterConfig\n                            );\n                          }}\n                        >\n                          <p className=\"text-ink-100\">Chế độ chuyên gia</p>\n                          <CustomSwitch\n                            checked={formikUpsert.values.isMasterConfig}\n                            onChange={(e) => {\n                              formikUpsert.setFieldValue(\n                                \"isMasterConfig\",\n                                !formikUpsert.values.isMasterConfig\n                              );\n                            }}\n                          />\n                        </div>\n                        <div\n                          className=\"p-4 flex items-center justify-between gap-x-[0.625rem] rounded-xl border-input-ink cursor-pointer\"\n                          onClick={() => {\n                            formikUpsert.setFieldValue(\n                              \"isTelegramConfig\",\n                              !formikUpsert.values.isTelegramConfig\n                            );\n                          }}\n                        >\n                          <p className=\"text-ink-100\">\n                            Gửi tiến hiệu về Telegram\n                          </p>\n                          <CustomSwitch\n                            checked={formikUpsert.values.isTelegramConfig}\n                            onChange={(e) => {\n                              formikUpsert.setFieldValue(\n                                \"isTelegramConfig\",\n                                !formikUpsert.values.isTelegramConfig\n                              );\n                            }}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </animated.div>\n                )}\n              </div>\n              {/* BUTTON */}\n              <div className=\"grid items-center justify-end grid-cols-2 gap-4 p-6 mt-auto md:flex\">\n                {isSettingCapitalManagement && !isEditing && (\n                  <CustomButton\n                    className={`py-4 px-[3.5rem] col-span-2 md:col-auto flex-grow md:flex-initial ${isStepOneCompleted\n                      ? \"cursor-pointer\"\n                      : \"cursor-not-allowed\"\n                      }`}\n                    background={`${isStepOneCompleted ? \"bg-primary-100\" : \"bg-ink-10\"\n                      }`}\n                    textClassName={`${isStepOneCompleted ? \"bg-background-100\" : \"bg-primary-60\"\n                      }`}\n                    onClick={() => {\n                      if (isStepOneCompleted) {\n                        setIsSettingCapitalManagement(false);\n                        if (scrollElement.current) {\n                          scrollElement.current.scrollTop = 0;\n                        }\n                      }\n                    }}\n                  >\n                    Tiếp theo\n                  </CustomButton>\n                )}\n\n                {isSettingCapitalManagement && isEditing && (\n                  <CustomButton\n                    className={`py-4 px-[3.5rem] col-span-2 md:col-auto flex-grow md:flex-initial ${isStepOneCompletedEditing\n                      ? \"cursor-pointer\"\n                      : \"cursor-not-allowed\"\n                      }`}\n                    background={`${isStepOneCompletedEditing ? \"bg-primary-100\" : \"bg-ink-10\"\n                      }`}\n                    textClassName={`${isStepOneCompletedEditing\n                      ? \"bg-background-100\"\n                      : \"bg-primary-60\"\n                      }`}\n                    onClick={() => {\n                      if (isStepOneCompletedEditing) {\n                        setIsSettingCapitalManagement(false);\n                        if (scrollElement.current) {\n                          scrollElement.current.scrollTop = 0;\n                        }\n                      }\n                    }}\n                  >\n                    Tiếp theo\n                  </CustomButton>\n                )}\n\n                {!isSettingCapitalManagement && (\n                  <>\n                    <CustomButton\n                      className={`py-4 md:min-w-[12rem] basis-1/2 md:basis-auto flex-grow md:flex-initial`}\n                      background=\"bg-ink-05\"\n                      textClassName=\"bg-primary-100\"\n                      onClick={() => {\n                        setIsSettingCapitalManagement(true);\n                        if (scrollElement.current) {\n                          scrollElement.current.scrollTop = 0;\n                        }\n                      }}\n                    >\n                      Trở lại\n                    </CustomButton>\n                    <CustomButton\n                      className={`py-4 md:min-w-[12rem] basis-1/2 md:basis-auto flex-grow md:flex-initial ${formikUpsert.isValid\n                        ? \"cursor-pointer\"\n                        : \"cursor-not-allowed\"\n                        }`}\n                      background={`${formikUpsert.isValid ? \"bg-primary-100\" : \"bg-ink-10\"\n                        }`}\n                      textClassName={`${formikUpsert.isValid\n                        ? \"bg-background-100\"\n                        : \"bg-primary-60\"\n                        }`}\n                      onClick={() => {\n                        formikUpsert.handleSubmit();\n                      }}\n                    >\n                      Lưu cấu hình\n                    </CustomButton>\n                  </>\n                )}\n              </div>\n            </div>\n          </form>\n        </animated.div>\n      </CustomModal>\n\n      {/* DELETE COPY TRADE */}\n      <CustomModal\n        isOpen={isPopupOpen}\n        handleOpen={handleOpenPopupModal}\n        handleClose={handleClosePopupModal}\n      >\n        <div className=\"absolute left-[50%] top-[50%] translate-x-[-50%] translate-y-[-50%] p-6 w-[calc(100vw-2rem)] md:min-w-[31.25rem] md:max-w-[31.25rem] bg-background-80 rounded-3xl text-center\">\n          <div className=\"flex items-center justify-center\">\n            <img\n              className=\"mb-4 w-[5.5rem]\"\n              src={images.copy.delete}\n              alt=\"BotLambotrade\"\n            />\n          </div>\n          <h3 className=\"mb-2 mx-auto max-w-[18.75rem] text-xl text-ink-100\">\n            Xoá cấu hình copy trade\n          </h3>\n          <p className=\"mb-12 mx-auto max-w-[18.75rem] text-ink-80\">\n            Bạn có chắc chắn muốn xoá cấu hình copy trade không?\n          </p>\n          <div className=\"grid items-center justify-center grid-cols-1 gap-4 md:grid-cols-2\">\n            <GreyButton onClick={handleClosePopupModal}>Huỷ</GreyButton>\n            <GoldButton\n              onClick={() => {\n                if (isDeletingByList) {\n                  deleteAutoBotSettingByListIds();\n                } else {\n                  deleteAutoBotSettingById();\n                }\n                handleClosePopupModal();\n                resetToggleButton();\n              }}\n            >\n              Xoá\n            </GoldButton>\n          </div>\n        </div>\n      </CustomModal>\n\n      {/* Xem hướng dẫn */}\n      <CustomModal\n        isOpen={isGuidePopupOpen}\n        handleOpen={handleOpenGuidePopupModal}\n        handleClose={handleCloseGuidePopupModal}\n      >\n        <div className=\"absolute left-[50%] top-[50%] translate-x-[-50%] translate-y-[-50%] w-[calc(100vw-2rem)] md:w-[31.25rem] bg-background-80 rounded-3xl\">\n          <div className=\"flex items-center justify-between p-6 border-b border-ink-10\">\n            <h3 className=\"text-xl font-semibold text-ink-100\">\n              Xem hướng dẫn\n            </h3>\n            <CloseOutlined\n              className=\"cursor-pointer\"\n              onClick={handleCloseGuidePopupModal}\n            />\n          </div>\n          <div className=\"p-6\">\n            <div className=\"flex flex-col gap-4 mb-9\">\n              <p className=\"text-xl font-bold text-transparent bg-primary-100 bg-clip-text\">\n                {MANAGEMENT_LIST.DEU_LENH.includes(\n                  selectedBotCapitalManagement.label.toString()\n                )\n                  ? \"Đều lệnh:\"\n                  : MANAGEMENT_LIST.MARTINGALE.includes(\n                    selectedBotCapitalManagement.label.toString()\n                  )\n                    ? \"Martingale (Gấp thếp):\"\n                    : MANAGEMENT_LIST.VICTOR.includes(\n                      selectedBotCapitalManagement.label.toString()\n                    )\n                      ? \"Victor đa tầng:\"\n                      : MANAGEMENT_LIST.FIBO.includes(\n                        selectedBotCapitalManagement.label.toString()\n                      )\n                        ? \"Fibo đa tầng:\"\n                        : MANAGEMENT_LIST.CUSTOM.includes(\n                          selectedBotCapitalManagement.label.toString()\n                        )\n                          ? \"Custom:\"\n                          : \"Abc\"}\n              </p>\n              <div className=\"text-ink-100\">\n                {MANAGEMENT_LIST.DEU_LENH.includes(\n                  selectedBotCapitalManagement.label.toString()\n                ) ? (\n                  <p>Đi đều tiền theo giá trị cài đặt</p>\n                ) : MANAGEMENT_LIST.MARTINGALE.includes(\n                  selectedBotCapitalManagement.label.toString()\n                ) ? (\n                  <p>\n                    Tiến từ trái sang phải theo hình thức tăng giá trị ( win\n                    hoặc lose ) . Nếu cài đặt Tăng giá trị khi Lose thì Win sẽ\n                    quay về vị trí lệnh đầu tiên và ngược lại. Trong trường hợp\n                    luôn tăng giá trị thì sẽ đi hết 1 chu kỳ từ trái sang phải\n                    mới quay về lệnh đầu tiên\n                  </p>\n                ) : MANAGEMENT_LIST.VICTOR.includes(\n                  selectedBotCapitalManagement.label.toString()\n                ) ? (\n                  <p>\n                    Muốn thêm tầng thì ấn nút thêm tầng ( dấu + Thêm ) Mặc định\n                    sẽ là 2 tầng có 2 hàng trên và dưới , di chuyển từ trái sang\n                    phải khi lose ở hàng trên, win tại lệnh nào gấp đôi tại lệnh\n                    tương ứng tại hàng dưới, Nếu win 2 lệnh tiếp tiếp thì về\n                    lệnh đầu tiên tương tự như vậy ở các tầng tiếp theo\n                  </p>\n                ) : MANAGEMENT_LIST.FIBO.includes(\n                  selectedBotCapitalManagement.label.toString()\n                ) ? (\n                  <ul className=\"pl-2 list-disc list-inside\">\n                    <li className=\"mb-4\">\n                      Lựa chọn Fibo Step 1 - 2 - 3 và điền giá trị lệnh theo quy\n                      luật từ trái sang phải.\n                    </li>\n                    <li className=\"mb-4\">\n                      Thua thì tiến , thắng thì lùi theo dãy giá trị\n                    </li>\n                    <li className=\"mb-4\">\n                      Fibo Step 1 Lose tăng 1 đơn vị (vị trí đi tiền ) , win lùi\n                      1 đơn vị ( vị trí đi tiền )\n                    </li>\n                    <li className=\"mb-4\">\n                      Fibo Step 2 : Lose tăng 1 đơn vị (vị trí đi tiền ), win\n                      lùi 2 đơn vị ( ví trí đi tiền )\n                    </li>\n                    <li>\n                      Fibo Step 3 : Lose tăng 1 đơn vị (vị trí đi tiền ), win\n                      lùi 3 đơn vị ( ví trí đi tiền )\n                    </li>\n                  </ul>\n                ) : MANAGEMENT_LIST.CUSTOM.includes(\n                  selectedBotCapitalManagement.label.toString()\n                ) ? (\n                  <ul className=\"pl-2 list-disc list-inside\">\n                    <li className=\"mb-4\">Theo chu kì từ trái sang phải</li>\n                    <li className=\"mb-4\">Hàng 1 : vị trí lệnh khi Lose</li>\n                    <li className=\"mb-4\">Hàng 2 : giá trị lệnh</li>\n                    <li>Hàng 3 : vị trí lệnh khi Win</li>\n                  </ul>\n                ) : (\n                  \"Abc\"\n                )}\n              </div>\n            </div>\n\n            <div className=\"flex justify-end\">\n              <CustomButton\n                className=\"px-16 py-4\"\n                textClassName=\"font-bold\"\n                onClick={handleCloseGuidePopupModal}\n              >\n                Đã hiểu\n              </CustomButton>\n            </div>\n          </div>\n        </div>\n      </CustomModal>\n\n      {/* INFORMATION Popup Modal */}\n      <CustomModal\n        isOpen={isInformationModalOpen}\n        handleOpen={handleOpenInformationModal}\n        handleClose={handleCloseInformationModal}\n      >\n        <div className=\"absolute left-[50%] top-[50%] translate-x-[-50%] translate-y-[-50%] w-[calc(100vw-2rem)] md:w-[31.25vw] bg-background-80 rounded-3xl\">\n          <div className=\"flex justify-between px-6 py-5 border-b border-ink-10\">\n            <p className=\"text-xl font-bold text-ink-100\">\n              Thông tin cấu hình Bot\n            </p>\n            <div\n              onClick={() => {\n                handleCloseInformationModal();\n              }}\n            >\n              <TableCancelSvg className=\"w-[2rem] text-ink-100 cursor-pointer\" />\n            </div>\n          </div>\n\n          <div className=\"flex flex-col px-6 pb-2\">\n            {/* Tên cấu hình Bot */}\n            <div className=\"flex items-center justify-between py-4 border-b border-ink-10\">\n              <p className=\"text-sm text-ink-80\">Tên cấu hình Bot</p>\n              <p className=\"font-bold text-ink-100\">\n                {selectedAutoBotSettingResult.config_name}\n              </p>\n            </div>\n\n            {/* Loại tài khoản */}\n            <div className=\"flex items-center justify-between py-4 border-b border-ink-10\">\n              <p className=\"text-sm text-ink-80\">Loại tài khoản</p>\n              <p\n                className={`px-2 ${selectedAutoBotSettingResult.account_type === \"DEMO\"\n                  ? \"bg-blue-80\"\n                  : \"bg-purple-100\"\n                  } rounded-3xl text-ink-100 text-xs`}\n              >\n                {selectedAutoBotSettingResult.account_type}\n              </p>\n            </div>\n\n            {/* Trạng thái */}\n            <div className=\"flex items-center justify-between py-4 border-b border-ink-10\">\n              <p className=\"text-sm text-ink-80\">Trạng thái</p>\n              <p\n                className={`w-fit px-2 rounded-[0.375rem] text-xs text-ink-100 leading-5 ${selectedAutoBotSettingResult.status === \"active\"\n                  ? \"bg-green-100\"\n                  : \"bg-red-100\"\n                  }`}\n              >\n                {selectedAutoBotSettingResult.status === \"active\"\n                  ? STATUSES_MAP.active\n                  : STATUSES_MAP.inactive}\n              </p>\n            </div>\n\n            {/* Lợi nhuận */}\n            <div className=\"flex items-center justify-between py-4 border-b border-ink-10\">\n              <p className=\"text-sm text-ink-80\">Lợi nhuận</p>\n              <p\n                className={`font-bold  ${selectedAutoBotSettingResult.current_profit >= 0\n                  ? \"text-green-100\"\n                  : \"text-red-100\"\n                  }`}\n              >\n                {selectedAutoBotSettingResult.current_profit >= 0 ? \"$\" : \"-$\"}\n                {Math.abs(\n                  selectedAutoBotSettingResult.current_profit\n                ).toLocaleString(\"en-US\", options)}\n              </p>\n            </div>\n\n            {/* Tổng Win/Lose */}\n            <div className=\"flex items-center justify-between py-4 border-b border-ink-10\">\n              <p className=\"text-sm text-ink-80\">Tổng Win/Lose</p>\n              <p className={`text-ink-100 font-bold`}>\n                <span className=\"text-green-100\">\n                  {selectedAutoBotSettingResult.total_win}\n                </span>\n                /\n                <span className=\"text-red-100\">\n                  {selectedAutoBotSettingResult.total_lose}\n                </span>\n              </p>\n            </div>\n\n            {/* LN ngày/LN tổng */}\n            <div className=\"flex items-center justify-between py-4 border-b border-ink-10\">\n              <p className=\"text-sm text-ink-80\">LN ngày/LN tổng</p>\n              <p className={`text-ink-100 font-bold`}>\n                <span\n                  className={`${selectedAutoBotSettingResult.current_date_profit > 0\n                    ? \"text-green-100\"\n                    : selectedAutoBotSettingResult.current_date_profit === 0\n                      ? \"bg-primary-100 bg-clip-text text-transparent\"\n                      : \"text-red-100\"\n                    }`}\n                >\n                  {selectedAutoBotSettingResult.current_date_profit >= 0\n                    ? \"$\"\n                    : \"-$\"}\n                  {Math.abs(\n                    selectedAutoBotSettingResult.current_date_profit\n                  ).toLocaleString(\"en-US\", options)}\n                </span>\n                /\n                <span\n                  className={`${selectedAutoBotSettingResult.current_profit > 0\n                    ? \"text-green-100\"\n                    : selectedAutoBotSettingResult.current_profit === 0\n                      ? \"bg-primary-100 bg-clip-text text-transparent\"\n                      : \"text-red-100\"\n                    }`}\n                >\n                  {selectedAutoBotSettingResult.current_profit >= 0\n                    ? \"$\"\n                    : \"-$\"}\n                  {Math.abs(\n                    selectedAutoBotSettingResult.current_profit\n                  ).toLocaleString(\"en-US\", options)}\n                </span>\n              </p>\n            </div>\n\n            {/* Volume ngày/Volume tổng */}\n            <div className=\"flex items-center justify-between py-4 border-b border-ink-10\">\n              <p className=\"text-sm text-ink-80\">Volume ngày/Volume tổng</p>\n              <p className={`text-ink-100 font-bold`}>\n                <span className=\"text-teal-100\">\n                  $\n                  {selectedAutoBotSettingResult.current_date_volume.toLocaleString(\n                    \"en-US\",\n                    options\n                  )}\n                </span>\n                /\n                <span className=\"text-teal-100\">\n                  $\n                  {selectedAutoBotSettingResult.current_volume.toLocaleString(\n                    \"en-US\",\n                    options\n                  )}\n                </span>\n              </p>\n            </div>\n\n            {/* Thời gian tạo */}\n            <div className=\"flex items-center justify-between py-4\">\n              <p className=\"text-sm text-ink-80\">Thời gian tạo</p>\n              <p className={`text-ink-100 font-bold`}>\n                {moment(selectedAutoBotSettingResult.created_at).format(\n                  \"DD/MM/YYYY HH:mm\"\n                )}\n              </p>\n            </div>\n          </div>\n        </div>\n      </CustomModal>\n\n      {/* UPSERT TABLE ZOOM MODAL */}\n      <CustomModal\n        isOpen={isUpsertZoomTableOpen}\n        handleOpen={handleOpenUpsertZoomTableModal}\n        handleClose={handleCloseUpsertZoomTableModal}\n      >\n        <div className=\"absolute left-[50%] top-[50%] translate-x-[-50%] translate-y-[-50%] w-[calc(100vw-2rem)] md:w-[80vw] bg-background-80 rounded-3xl\">\n          <div className=\"p-4\">\n            <p className=\"mb-4 text-sm text-ink-100\">GIÁ TRỊ 1 LỆNH</p>\n\n            {/* OTHER METHODS */}\n            {selectedBotCapitalManagement.label != null &&\n              !MANAGEMENT_LIST.DEU_LENH.includes(\n                selectedBotCapitalManagement.label.toString()\n              ) && (\n                <div className=\"flex flex-col gap-y-4\">\n                  <div className=\"border border-collapse border-ink-10 rounded-xl\">\n                    <div className=\"flex flex-col flex-auto w-full overflow-auto border-collapse rounded-xl\">\n                      {/* TABLE */}\n                      {!isCustomAutoWin && (\n                        <div\n                          className=\"rt-thead flex-auto flex flex-col items-stretch z-[3]\"\n                          style={{\n                            minWidth: MIN_WIDTH,\n                          }}\n                        >\n                          {/* HEADER */}\n                          <div className=\"rt-tr flex-auto flex z-[3] border-b border-ink-10\">\n                            <div className=\"left-0 sticky rt-th w-[7.375rem] max-w-[7.375rem] p-4 flex-[100_0_auto] bg-background-80 border-r border-ink-10 z-[100] text-sm cursor-pointer overflow-visible whitespace-nowrap text-ellipsis\">\n                              Vị trí\n                            </div>\n                            {COLUMNS_ARR.map((num) => {\n                              const isLastIndex =\n                                num === COLUMNS_ARR.length - 1;\n                              return (\n                                <div\n                                  key={num}\n                                  className={`rt-th w-[5.625rem] max-w-[5.625rem] p-4 sticky flex-[100_0_auto] text-sm text-end ${isLastIndex ? \"\" : \"border-r border-ink-10\"\n                                    } z-[11] cursor-pointer overflow-visible`}\n                                  style={{\n                                    width: CELL_WIDTH,\n                                    minWidth: CELL_WIDTH,\n                                  }}\n                                >\n                                  {num + 1}\n                                </div>\n                              );\n                            })}\n                          </div>\n                          {totalCreateTableRows.map((row, rowIndex) => {\n                            const convertedRowToLayer = \"layer\" + rowIndex;\n\n                            return (\n                              <div\n                                key={row}\n                                className=\"rt-tr flex-auto flex z-[3] border-b border-ink-10\"\n                              >\n                                <BotTradeSettingViewTableRow\n                                  row={rowIndex}\n                                  onDeleteRow={() => {\n                                    delete formikUpsert.values.orderValue?.[\n                                      convertedRowToLayer\n                                    ];\n                                    Object.keys(formikUpsert.values.orderValue)\n                                      .sort() // sort the keys in ascending order\n                                      .reduce((acc: OrderValue, key, index) => {\n                                        const newIndex = index; // calculate the new index\n                                        const newKey = `layer${newIndex}`; // create the new key\n\n                                        if (key !== newKey) {\n                                          formikUpsert.values.orderValue[\n                                            newKey\n                                          ] =\n                                            formikUpsert.values.orderValue[key]; // update the object with the new key\n                                          delete formikUpsert.values.orderValue[\n                                            key\n                                          ]; // delete the old key\n                                        }\n\n                                        acc[newKey] =\n                                          formikUpsert.values.orderValue[\n                                          newKey\n                                          ]; // add the key and value to the new object\n\n                                        return acc;\n                                      }, {});\n\n                                    // console.log(\"arrBeforeRemoveRow: \", [\n                                    //   ...totalCreateTableRows,\n                                    // ]);\n\n                                    const arrAfterRemoveRow = [\n                                      ...totalCreateTableRows,\n                                    ];\n                                    arrAfterRemoveRow.splice(rowIndex, 1);\n                                    // console.log(\n                                    //   \"arrAfterRemoveRow\",\n                                    //   arrAfterRemoveRow\n                                    // );\n                                    setTotalCreateTableRows(arrAfterRemoveRow);\n                                  }}\n                                />\n                                {COLUMNS_ARR.map((col) => {\n                                  const isLastIndex =\n                                    col === COLUMNS_ARR.length - 1;\n                                  return (\n                                    <div\n                                      key={col}\n                                      className={`rt-th w-[5.625rem] max-w-[5.625rem] sticky flex-[100_0_auto] text-end ${isLastIndex\n                                        ? \"\"\n                                        : \"border-r border-ink-10\"\n                                        } z-[11] cursor-pointer overflow-visible`}\n                                      style={{\n                                        width: CELL_WIDTH,\n                                        minWidth: CELL_WIDTH,\n                                      }}\n                                    >\n                                      <CustomNumberInputWithFocus\n                                        value={\n                                          formikUpsert.values.orderValue?.[\n                                          convertedRowToLayer\n                                          ]?.[col]\n                                        }\n                                        decimalsLimit={3}\n                                        maxLength={13}\n                                        onValueChange={(value, _, values) => {\n                                          handleTableInputAmount(\n                                            value,\n                                            col,\n                                            rowIndex.toString()\n                                          );\n                                        }}\n                                        inputClassName=\"p-4 text-end bg-clip-text text-transparent bg-primary-100\"\n                                        prefix={\"$\"}\n                                      />\n                                    </div>\n                                  );\n                                })}\n                              </div>\n                            );\n                          })}\n                        </div>\n                      )}\n\n                      {isCustomAutoWin && (\n                        <div\n                          className=\"rt-thead flex-auto flex flex-col items-stretch z-[3]\"\n                          style={{\n                            minWidth: MIN_WIDTH,\n                          }}\n                        >\n                          {Array(3)\n                            .fill(0)\n                            .map((row, rowIndex) => {\n                              const convertedRowToLayer = \"layer\" + rowIndex;\n\n                              return (\n                                <div\n                                  key={rowIndex}\n                                  className=\"rt-tr flex-auto flex z-[3] border-b border-ink-10\"\n                                >\n                                  <div className=\"left-0 sticky rt-th w-[7.375rem] max-w-[7.375rem] py-[0.375rem] px-4 flex-[100_0_auto] flex items-center bg-background-80 border-r border-ink-10 z-[100] text-sm cursor-pointer overflow-visible text-ellipsis\">\n                                    {rowIndex === 2\n                                      ? \"Vị trí lệnh khi thắng\"\n                                      : rowIndex === 1\n                                        ? \"Giá trị lệnh\"\n                                        : \"Vị trí lệnh khi thua\"}\n                                  </div>\n                                  {COLUMNS_ARR.map((col) => {\n                                    const isLastIndex =\n                                      col === COLUMNS_ARR.length - 1;\n                                    return (\n                                      <div\n                                        key={col}\n                                        className={`rt-th w-[5.625rem] max-w-[5.625rem] sticky flex-[100_0_auto] text-end ${isLastIndex\n                                          ? \"\"\n                                          : \"border-r border-ink-10\"\n                                          } z-[11] cursor-pointer overflow-visible`}\n                                        style={{\n                                          width: CELL_WIDTH,\n                                          minWidth: CELL_WIDTH,\n                                        }}\n                                      >\n                                        <CustomNumberInputWithFocus\n                                          value={\n                                            formikUpsert.values.orderValue?.[\n                                            convertedRowToLayer\n                                            ]?.[col]\n                                          }\n                                          decimalsLimit={3}\n                                          maxLength={13}\n                                          onValueChange={(\n                                            value,\n                                            test,\n                                            values\n                                          ) => {\n                                            // console.log(\"test\", test);\n                                            handleTableInputAmount(\n                                              value,\n                                              col,\n                                              rowIndex.toString()\n                                            );\n                                          }}\n                                          inputClassName={`p-4 text-end bg-clip-text text-transparent ${rowIndex === 1\n                                            ? \"bg-primary-100\"\n                                            : \"bg-ink-100\"\n                                            }`}\n                                          prefix={rowIndex === 1 ? \"$\" : \"\"}\n                                        />\n                                      </div>\n                                    );\n                                  })}\n                                </div>\n                              );\n                            })}\n                        </div>\n                      )}\n                    </div>\n                    <div className=\"flex items-center justify-between p-4\">\n                      <div>\n                        {MANAGEMENT_LIST.FIBO.includes(\n                          selectedBotCapitalManagement.label.toString()\n                        ) && (\n                            <div className=\"flex gap-6\">\n                              <CustomRadioNoBackground\n                                checked={formikUpsert.values.stepType === 1}\n                                onClick={() => {\n                                  formikUpsert.setFieldValue(\"stepType\", 1);\n                                }}\n                                containerClassName=\"flex-grow\"\n                                label=\"Step 1\"\n                              />\n                              <CustomRadioNoBackground\n                                checked={formikUpsert.values.stepType === 2}\n                                onClick={() => {\n                                  formikUpsert.setFieldValue(\"stepType\", 2);\n                                }}\n                                label=\"Step 2\"\n                              />\n                              <CustomRadioNoBackground\n                                checked={formikUpsert.values.stepType === 3}\n                                onClick={() => {\n                                  formikUpsert.setFieldValue(\"stepType\", 3);\n                                }}\n                                label=\"Step 3\"\n                              />\n                            </div>\n                          )}\n\n                        {MANAGEMENT_LIST.VICTOR.includes(\n                          selectedBotCapitalManagement.label.toString()\n                        ) && (\n                            <div\n                              className={`flex gap-[0.625rem] items-center text-sm ${totalCreateTableRows.length < 6\n                                ? \"cursor-pointer\"\n                                : \"cursor-not-allowed\"\n                                }`}\n                              onClick={() => {\n                                if (totalCreateTableRows.length < 6) {\n                                  const newArr = Array(\n                                    totalCreateTableRows.length + 1\n                                  )\n                                    .fill(0)\n                                    .map((_, index) => index);\n                                  setTotalCreateTableRows(newArr);\n                                }\n                              }}\n                            >\n                              {totalCreateTableRows.length < 6 ? (\n                                <img\n                                  className=\"w-[1.5rem]\"\n                                  src={images.bot.add_gold_100}\n                                  alt=\"BotLambotrade\"\n                                />\n                              ) : (\n                                <img\n                                  className=\"w-[1.5rem]\"\n                                  src={images.bot.add_gold_60}\n                                  alt=\"BotLambotrade\"\n                                />\n                              )}\n                              <p\n                                className={`${totalCreateTableRows.length < 6\n                                  ? \"bg-primary-100\"\n                                  : \"bg-primary-60\"\n                                  } bg-clip-text text-transparent`}\n                              >\n                                Thêm\n                              </p>\n                            </div>\n                          )}\n                      </div>\n                      <div className=\"flex items-center justify-end\">\n                        <BotTableZoomOut\n                          className=\"cursor-pointer\"\n                          onClick={() => {\n                            handleCloseUpsertZoomTableModal();\n                          }}\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* ERROR MESSAGE */}\n                  {!isCreateTableValid && (\n                    <div className=\"text-red-100\">\n                      Please input the right amount of value\n                    </div>\n                  )}\n                </div>\n              )}\n          </div>\n        </div>\n      </CustomModal>\n\n      {/* POPUP Validate */}\n      <CustomValidateModel\n        isOpen={modalAttributes.isOpen}\n        icon={modalAttributes.icon}\n        headingMessage={modalAttributes.headingMessage}\n        message={modalAttributes.message}\n        buttonMessage={modalAttributes.buttonMessage}\n        handleOpen={modalAttributes.handleOpen}\n        handleClose={modalAttributes.handleClose}\n      />\n    </>\n  );\n};\n\nexport default BotTradeSettingView;\n","import React, { useState } from 'react';\nimport BotTradeSettingView from './BotTradeSettingView';\nimport { Helmet } from 'react-helmet-async';\n\nconst BotTradeSetting = () => {\n  return (\n    <>\n      <Helmet>\n        <title>BotLambotrade | Bot Trade</title>\n      </Helmet>\n      <BotTradeSettingView />\n    </>\n  );\n};\n\nexport default BotTradeSetting;\n","import images from 'assets';\nimport SearchInputFormik from 'pages/CopyTradeSetting/CopyTradeSettingSearchInput';\nimport React, { FC, useRef, useState } from 'react';\nimport { FormikProps } from 'formik';\nimport SearchInput from 'components/SearchInput';\nimport InputSelectOption from 'types/InputSelectOption';\n\ninterface CopyTradeZoomSelectInputProps {\n  labelName: string;\n  inputValue: InputSelectOption;\n  options: InputSelectOption[];\n  // setInputValue: React.Dispatch<React.SetStateAction<InputSelectOption>>;\n  onSelectChange: (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    option: InputSelectOption\n  ) => void;\n  popupClassName?: string;\n  containerClassName?: string;\n  isSearchEnabled?: boolean;\n}\n\nconst CopyTradeZoomSelectInput: FC<CopyTradeZoomSelectInputProps> = ({\n  labelName,\n  popupClassName = '',\n  containerClassName = '',\n  isSearchEnabled = true,\n  inputValue,\n  // setInputValue,\n  onSelectChange,\n  options,\n}) => {\n  const [open, setOpen] = useState(false);\n  const [searchInput, setSearchInput] = useState('MBot 1.8');\n  const handleOpen = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    setOpen((prev) => !prev);\n  };\n\n  // const handleSelect = (\n  //   e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n  //   option: InputSelectOption\n  // ) => {\n  //   setOpen((prev) => !prev);\n  //   setInputValue(option);\n  // };\n\n  return (\n    <>\n      <div\n        className={`relative px-3 py-[0.375rem] border border-ink-10 bg-ink-05 rounded-2xl cursor-pointer ${containerClassName}`}\n      >\n        <div className=\"flex justify-between items-center\" onClick={handleOpen}>\n          <div>\n            <label className=\"pb-1 text-ink-60 text-xs cursor-pointer\">\n              {labelName}\n            </label>\n            <p className=\"text-ink-100\">\n              {inputValue.label ? inputValue.label : '\\u00A0'}\n            </p>\n          </div>\n          <img\n            className=\"w-[1.5rem]\"\n            src={images.home.white_dropdown}\n            alt=\"BotLambotrade\"\n          />\n        </div>\n        {open && (\n          <div\n            className={`z-[10000] top-[calc(100%+0.5rem)] absolute w-full left-0 bg-dropdown rounded-2xl cursor-pointer shadow-popup ${popupClassName}`}\n          >\n            {isSearchEnabled && (\n              <div className=\"p-4\">\n                <SearchInput\n                  inputName=\"search\"\n                  inputClassName=\"w-full\"\n                  searchInput={searchInput}\n                  setSearchInput={setSearchInput}\n                />\n              </div>\n            )}\n            <div className=\"flex flex-col max-h-[39.5rem] overflow-y-auto\">\n              {options.map((option, index) => (\n                <div\n                  className={`border-select-input first:rounded-tl-2xl first:rounded-tr-2xl last:rounded-bl-2xl last:rounded-br-2xl ${\n                    inputValue.value === option.value ? 'bg-primary-05' : 'p-4'\n                  }`}\n                  onClick={(e) => {\n                    // handleSelect(e, option);\n                    onSelectChange(e, option);\n                    setOpen((prev) => !prev);\n                  }}\n                  key={index}\n                >\n                  <p\n                    className={`${\n                      inputValue.value === option.value\n                        ? 'p-4 bg-primary-100 bg-clip-text text-transparent'\n                        : ''\n                    }`}\n                  >\n                    {option.label}\n                  </p>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default CopyTradeZoomSelectInput;\n","export default function convertToThreeDecimalPlaces(num: string | number) {\n  const numDecimalPlaces = (num.toString().split('.')[1] || '').length;\n  if (numDecimalPlaces > 3) {\n    return (+num).toFixed(3);\n  } else {\n    return num;\n  }\n}\n"],"names":["_ref","id","name","label","isLabelOutside","placeholder","value","error","helperText","helperTextEnd","fullWidth","searchIcon","symbol","icon","button","isInputDisabled","prefix","PREFIX_VALUE","VALUES","inputSpinnerWrapperClassName","containerClassName","inputClassName","symbolClassName","helperClassName","helperTextClassName","helperTextEndClassName","onFixedValueChange","resetValue","onChange","handleValueMinusOne","handleValuePlusOne","onValueChange","onBlur","onFocus","onKeyDown","onKeyUp","onMouseOver","onMouseLeave","isMinusFocus","setIsMinusFocus","useState","isPlusFocus","setIsPlusFocus","_jsxs","children","className","concat","_jsx","onClick","e","src","images","alt","TextInput","type","length","map","index","renderText","Math","random","checked","inputName","searchInput","setSearchInput","htmlFor","fill","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","target","required","classNameHover","background","backgroundHover","textClassName","textClassNameHover","textColor","textColorHover","iconHover","console","log","isButtonHover","setIsButtonHover","decimalsLimit","decimalScale","fixedDecimalLength","maxLength","isInputFocus","setInputFocus","isInputHover","setIsInputHover","CurrencyInput","_","values","inputMode","disabled","allowNegativeValue","disableAbbreviations","decimalSeparator","groupSeparator","width","height","row","onDeleteRow","isHovered","setIsHovered","onMouseEnter","handleMouseEnter","handleMouseLeave","searchIconClassName","isPasswordShowing","setIsPasswordShowing","inputRef","useRef","inputSpacingWithLabel","resizeTextArea","current","style","scrollHeight","useEffect","_inputRef$current2","focus","_inputRef$current3","ref","_inputRef$current4","Cancel","handlePasswordShown","_inputRef$current","prev","foundObject","onCountdownEnd","timeLeft","setTimeLeft","intervalId","setInterval","prevTimeLeft","clearInterval","updateCountdown","initialTimeLeft","calculateTimeLeft","now","Date","targetTime","setHours","hour_of_day","minute_of_day","setDate","getDate","getTime","hours","floor","minutes","seconds","schedules","sortedSchedules","setSortedSchedules","currentSchedule","setCurrentSchedule","sorted","sort","a","b","timeA","timeB","overflow","status","Countdown","schedule","nextIndex","findIndex","s","handleCountdownEnd","STATUSES_MAP","PAGE_SIZE_OPTIONS","PLUS_VALUES","INITIAL_BOT_BALANCE","balance","demo_balance","usdt_balance","INITIAL_SELECTED_OPTION","INITIAL_SELECTED_ACCOUNT_TYPE","INITIAL_FORMIK_VALUES","configName","youngProfit","secondAction","young_loss","autoFillInDemo","amountPerOrder","orderValue","orderValueText","aimMin","aimMax","increaseType","stepType","reverse","isSignal","conditionFire","fireOne","fireTwo","fireThree","fireFour","isShareConfig","isMasterConfig","isTelegramConfig","ACCOUNT_TYPES","MANAGEMENT_LIST","DEU_LENH","MARTINGALE","VICTOR","FIBO","CUSTOM","BUDGET_MANAGEMENT_OPTIONS","INCREASE_TYPE_OPTIONS","INITIAL_BOT_SETTING_RESULT","config_name","follower","follower_name","follower_username","account_type","young_profit","second_action","budgetmanagement_id","budgetmanagement_name","o_amount","order_value","aim_min","aim_max","increase_type","step_type","current_profit","current_date_profit","current_volume","current_date_volume","total_win","total_lose","block_status","o_owner","auto_fillindemo","signal_id","singal_name","signalpersonal_id","signalpersonal_name","condition_fire","fire_one","fire_two","fire_three","fire_four","created_at","updated_at","date","is_master","COLUMNS_ARR","Array","CELL_WIDTH","options","minimumFractionDigits","maximumFractionDigits","BotTradeSettingView","selectedIds","setSelectedIds","selectAll","setSelectAll","refetch","setRefetch","followbotschedule","setFollowbotschedule","allBotDatas","setAllBotDatas","partnerBotDatas","setPartnerBotDatas","botBalance","setBotBalance","selectedAccountType","setSelectedAccountType","selectedBotAccount","setSelectedBotAccount","selectedMasterAccount","setSelectedMasterAccount","isUpdate","setIsUpdate","isMasterAccountValid","setIsMasterAccountValid","accountOptions","setAccountOptions","allBotAccountOptions","setAllBotAccountOptions","isPartnerBotInitialized","setIsPartnerBotInitialized","isAllBotInitialized","setIsAllBotInitialized","botSettingData","setAutoBotSettingData","count","next","previous","results","allBotSettingResults","setAllBotSettingResults","isDeletingByList","setIsDeletingByList","useAppSelector","state","user","isUpsertModalOpen","setIsUpsertModalOpen","isPopupOpen","setIsPopupOpen","isInformationModalOpen","setIsInformationModalOpen","isUpsertZoomTableOpen","setIsUpsertZoomTableOpen","isGuidePopupOpen","setGuidePopup","selectedPageSizeOption","setSelectedPageSizeOption","page","setPage","totalPages","setTotalPages","isPrevHover","setIsPrevHover","isNextHover","setIsNextHover","isDesktop","useMediaQuery","query","isMobile","modalAttributes","setModalAttributes","isOpen","headingMessage","message","buttonMessage","handleOpen","handleClose","isAmountPerOrderAmountFocus","setIsAmountPerOrderAmountFocus","formikValues","setFormikValues","selectedAutoBotSettingResult","setSelectedAutoBotSettingResult","searchUser","setSearchUser","reSearch","setResearch","successUser","setSuccessUser","selectedGift","setSelectedGift","selectedBotCapitalManagement","setSelectedBotCapitalManagement","botCapitalManagementOptions","setBotCapitalManagementOptions","selectedIncreaseType","setSelectedIncreaseType","selectedSignalBot","setSelectedSignalBot","signalBotOptions","setSignalBotOptions","selectedSignalPersonal","setSelectedSignalPersonal","signalPersonalOptions","setSignalPersonalOptions","isEditing","setIsEditing","isSettingCapitalManagement","setIsSettingCapitalManagement","signalError","setSignalError","animationSettingCapitalManagement","useSpring","to","opacity","transform","animationUpsertModalMobile","animationSettingMethod","tableAccountTypeOptions","setTableAccountTypeOptions","totalCreateTableRows","setTotalCreateTableRows","dispatch","useAppDispatch","enqueueSnackbar","useEnqueueSnackbar","navigate","useNavigate","scrollElement","data","React","isTooltipOpen","setIsTooltipOpen","handleTooltipOpen","useCallback","rowIndex","prevState","handleTooltipClose","handleOpenUpsertModal","handleCloseUpsertModal","formikUpsert","resetForm","handleOpenInformationModal","handleCloseInformationModal","handleCloseUpsertZoomTableModal","handleOpenPopupModal","handleClosePopupModal","handleOpenValidAmountPopupModal","handleCloseValidAmountPopupModal","setFieldValue","handleOpenAccountTradePopupModal","handleCloseAccountTradePopupModal","handleOpenGuidePopupModal","handleCloseGuidePopupModal","handleAmount","fieldName","valueToSet","undefined","handleTableInputAmount","col","_arrToSet$layer","arrToSet","convertedValue","convertToThreeDecimalPlaces","convertedRowToLayer","isCustomAutoWin","includes","toString","round","i","pop","handleSelectIncreaseType","option","actionMeta","handleInputCheckbox","toggleRow","newSelected","Object","entries","reduce","toggleAllRow","forEach","x","resetToggleButton","getAllAutoBotSettings","botData","axios","APIs","params","search","then","res","ceil","catch","variant","getAllBotManagementList","botCapitalOptionsToSet","getAllBotSignals","signalBotOptionsToSet","bot_name","getAllPersonalSignals","signalPersonalOptionsToSet","updateSettingAccountType","botSettingResult","accountType","err","updateSettingStatusByIds","ids","idToUpdate","join","updateSettingPartnerAccount","partnerOption","_partnerOption$label","updateModelData","autoBotSettingResult","filter","selectedBotCapitalManagent","botAccount","selectedBotSignal","selectedBotSignalPersonal","orderValueConvertedToString","key","keys","String","orderValueT","concatenatedString","isArray","indexOf","updatedFormikValues","newArr","resetAllCurrent","selectedListIds","selected","handlePageChange","columns","accessor","Cell","props","original","cell","Header","input","indeterminate","sortable","matchedDatas","currentOption","SelectInput","_option$value","account","isStatusActive","isSelectDisabled","isProfit","isEqual","abs","toLocaleString","_original$aim_max","_original$aim_min","statusClass","statusContent","foundObjects","obj","followbotid","CountdownManager","updateStatusById","isActive","Tooltip","componentsProps","tooltip","arrow","sx","title","stopPropagation","open","onOpen","onClose","disableHoverListener","disableFocusListener","disableTouchListener","placement","enterTouchDelay","leaveTouchDelay","tableInstance","useTable","usePagination","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","convertStringToNumber","str","trim","replace","parseFloat","useFormik","initialValues","validateOnChange","enableReinitialize","validationSchema","Yup","matches","max","min","nullable","onSubmit","async","helpers","orderRes","split","Number","_selectedBotAccount$l","_selectedBotCapitalMa","updateAutoBotData","buget_position","JSON","stringify","createAutoBotRequest","getAllAccounts","getAllPartnerBots","getBalance","reloadDemoBalance","convertPartnerBotsToPartnerAccountOptions","botname","convertAllPartnerBotsToPartnerAccountOptions","username","firstBotOption","userActions","_Fragment","isCreateTableValid","orderValues","maxRowLength","isStepOneCompleted","touched","Boolean","errors","isStepOneCompletedEditing","arr","fetchAutoBotList","handler","setTimeout","response","_response$data","fetchUser","clearTimeout","CustomModal","CloseOutlined","_e$target$value","CustomButton","postGift","BotTradeSettingButton","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","getRowProps","cells","getCellProps","handleSelectPageSize","indicatorContainerClassName","indicatorContainerIconClassName","menuPortalClassName","ReactPaginate","breakLabel","onPageChange","marginPagesDisplayed","pageCount","previousLabel","nextLabel","forcePage","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","animated","handleSubmit","isValid","CopyTradeZoomSelectInput","inputValue","onSelectChange","onSelectedAccountTypeChange","isSearchEnabled","labelName","onSelectedBotAccountChange","handleChange","handleBlur","handleSelectBotCapitalManagement","CustomInputSpinner","handleAmountMinusOne","handleOrderAmountPlusOne","plusAmount","TextArea","CustomRadioNoBackground","CustomRadio","handleSelectSignalBot","handleSelectSignalPersonal","CustomSwitch","wholeNumber","parseInt","scrollTop","GreyButton","GoldButton","deleteAutoBotSettingByListIds","TableCancelSvg","moment","format","handleOpenUpsertZoomTableModal","minWidth","num","isLastIndex","BotTradeSettingViewTableRow","_formikUpsert$values$","acc","newKey","arrAfterRemoveRow","splice","_formikUpsert$values$2","_formikUpsert$values$3","CustomNumberInputWithFocus","_formikUpsert$values$4","_formikUpsert$values$5","test","BotTableZoomOut","CustomValidateModel","BotTradeSetting","Helmet","popupClassName","setOpen","SearchInput","toFixed"],"sourceRoot":""}